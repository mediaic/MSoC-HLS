// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _load_filter_buffer_HH_
#define _load_filter_buffer_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct load_filter_buffer : public sc_module {
    // Port declarations 117
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<512> > wgt_TDATA;
    sc_in< sc_logic > wgt_TVALID;
    sc_out< sc_logic > wgt_TREADY;
    sc_out< sc_lv<3> > filter_buff_0_0_0_address0;
    sc_out< sc_logic > filter_buff_0_0_0_ce0;
    sc_out< sc_logic > filter_buff_0_0_0_we0;
    sc_out< sc_lv<32> > filter_buff_0_0_0_d0;
    sc_out< sc_lv<3> > filter_buff_0_0_1_address0;
    sc_out< sc_logic > filter_buff_0_0_1_ce0;
    sc_out< sc_logic > filter_buff_0_0_1_we0;
    sc_out< sc_lv<32> > filter_buff_0_0_1_d0;
    sc_out< sc_lv<3> > filter_buff_0_0_2_address0;
    sc_out< sc_logic > filter_buff_0_0_2_ce0;
    sc_out< sc_logic > filter_buff_0_0_2_we0;
    sc_out< sc_lv<32> > filter_buff_0_0_2_d0;
    sc_out< sc_lv<3> > filter_buff_0_1_0_address0;
    sc_out< sc_logic > filter_buff_0_1_0_ce0;
    sc_out< sc_logic > filter_buff_0_1_0_we0;
    sc_out< sc_lv<32> > filter_buff_0_1_0_d0;
    sc_out< sc_lv<3> > filter_buff_0_1_1_address0;
    sc_out< sc_logic > filter_buff_0_1_1_ce0;
    sc_out< sc_logic > filter_buff_0_1_1_we0;
    sc_out< sc_lv<32> > filter_buff_0_1_1_d0;
    sc_out< sc_lv<3> > filter_buff_0_1_2_address0;
    sc_out< sc_logic > filter_buff_0_1_2_ce0;
    sc_out< sc_logic > filter_buff_0_1_2_we0;
    sc_out< sc_lv<32> > filter_buff_0_1_2_d0;
    sc_out< sc_lv<3> > filter_buff_0_2_0_address0;
    sc_out< sc_logic > filter_buff_0_2_0_ce0;
    sc_out< sc_logic > filter_buff_0_2_0_we0;
    sc_out< sc_lv<32> > filter_buff_0_2_0_d0;
    sc_out< sc_lv<3> > filter_buff_0_2_1_address0;
    sc_out< sc_logic > filter_buff_0_2_1_ce0;
    sc_out< sc_logic > filter_buff_0_2_1_we0;
    sc_out< sc_lv<32> > filter_buff_0_2_1_d0;
    sc_out< sc_lv<3> > filter_buff_0_2_2_address0;
    sc_out< sc_logic > filter_buff_0_2_2_ce0;
    sc_out< sc_logic > filter_buff_0_2_2_we0;
    sc_out< sc_lv<32> > filter_buff_0_2_2_d0;
    sc_out< sc_lv<3> > filter_buff_1_0_0_address0;
    sc_out< sc_logic > filter_buff_1_0_0_ce0;
    sc_out< sc_logic > filter_buff_1_0_0_we0;
    sc_out< sc_lv<32> > filter_buff_1_0_0_d0;
    sc_out< sc_lv<3> > filter_buff_1_0_1_address0;
    sc_out< sc_logic > filter_buff_1_0_1_ce0;
    sc_out< sc_logic > filter_buff_1_0_1_we0;
    sc_out< sc_lv<32> > filter_buff_1_0_1_d0;
    sc_out< sc_lv<3> > filter_buff_1_0_2_address0;
    sc_out< sc_logic > filter_buff_1_0_2_ce0;
    sc_out< sc_logic > filter_buff_1_0_2_we0;
    sc_out< sc_lv<32> > filter_buff_1_0_2_d0;
    sc_out< sc_lv<3> > filter_buff_1_1_0_address0;
    sc_out< sc_logic > filter_buff_1_1_0_ce0;
    sc_out< sc_logic > filter_buff_1_1_0_we0;
    sc_out< sc_lv<32> > filter_buff_1_1_0_d0;
    sc_out< sc_lv<3> > filter_buff_1_1_1_address0;
    sc_out< sc_logic > filter_buff_1_1_1_ce0;
    sc_out< sc_logic > filter_buff_1_1_1_we0;
    sc_out< sc_lv<32> > filter_buff_1_1_1_d0;
    sc_out< sc_lv<3> > filter_buff_1_1_2_address0;
    sc_out< sc_logic > filter_buff_1_1_2_ce0;
    sc_out< sc_logic > filter_buff_1_1_2_we0;
    sc_out< sc_lv<32> > filter_buff_1_1_2_d0;
    sc_out< sc_lv<3> > filter_buff_1_2_0_address0;
    sc_out< sc_logic > filter_buff_1_2_0_ce0;
    sc_out< sc_logic > filter_buff_1_2_0_we0;
    sc_out< sc_lv<32> > filter_buff_1_2_0_d0;
    sc_out< sc_lv<3> > filter_buff_1_2_1_address0;
    sc_out< sc_logic > filter_buff_1_2_1_ce0;
    sc_out< sc_logic > filter_buff_1_2_1_we0;
    sc_out< sc_lv<32> > filter_buff_1_2_1_d0;
    sc_out< sc_lv<3> > filter_buff_1_2_2_address0;
    sc_out< sc_logic > filter_buff_1_2_2_ce0;
    sc_out< sc_logic > filter_buff_1_2_2_we0;
    sc_out< sc_lv<32> > filter_buff_1_2_2_d0;
    sc_out< sc_lv<3> > filter_buff_2_0_0_address0;
    sc_out< sc_logic > filter_buff_2_0_0_ce0;
    sc_out< sc_logic > filter_buff_2_0_0_we0;
    sc_out< sc_lv<32> > filter_buff_2_0_0_d0;
    sc_out< sc_lv<3> > filter_buff_2_0_1_address0;
    sc_out< sc_logic > filter_buff_2_0_1_ce0;
    sc_out< sc_logic > filter_buff_2_0_1_we0;
    sc_out< sc_lv<32> > filter_buff_2_0_1_d0;
    sc_out< sc_lv<3> > filter_buff_2_0_2_address0;
    sc_out< sc_logic > filter_buff_2_0_2_ce0;
    sc_out< sc_logic > filter_buff_2_0_2_we0;
    sc_out< sc_lv<32> > filter_buff_2_0_2_d0;
    sc_out< sc_lv<3> > filter_buff_2_1_0_address0;
    sc_out< sc_logic > filter_buff_2_1_0_ce0;
    sc_out< sc_logic > filter_buff_2_1_0_we0;
    sc_out< sc_lv<32> > filter_buff_2_1_0_d0;
    sc_out< sc_lv<3> > filter_buff_2_1_1_address0;
    sc_out< sc_logic > filter_buff_2_1_1_ce0;
    sc_out< sc_logic > filter_buff_2_1_1_we0;
    sc_out< sc_lv<32> > filter_buff_2_1_1_d0;
    sc_out< sc_lv<3> > filter_buff_2_1_2_address0;
    sc_out< sc_logic > filter_buff_2_1_2_ce0;
    sc_out< sc_logic > filter_buff_2_1_2_we0;
    sc_out< sc_lv<32> > filter_buff_2_1_2_d0;
    sc_out< sc_lv<3> > filter_buff_2_2_0_address0;
    sc_out< sc_logic > filter_buff_2_2_0_ce0;
    sc_out< sc_logic > filter_buff_2_2_0_we0;
    sc_out< sc_lv<32> > filter_buff_2_2_0_d0;
    sc_out< sc_lv<3> > filter_buff_2_2_1_address0;
    sc_out< sc_logic > filter_buff_2_2_1_ce0;
    sc_out< sc_logic > filter_buff_2_2_1_we0;
    sc_out< sc_lv<32> > filter_buff_2_2_1_d0;
    sc_out< sc_lv<3> > filter_buff_2_2_2_address0;
    sc_out< sc_logic > filter_buff_2_2_2_ce0;
    sc_out< sc_logic > filter_buff_2_2_2_we0;
    sc_out< sc_lv<32> > filter_buff_2_2_2_d0;


    // Module declarations
    load_filter_buffer(sc_module_name name);
    SC_HAS_PROCESS(load_filter_buffer);

    ~load_filter_buffer();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<3> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > wgt_TDATA_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<1> > icmp_ln113_fu_526_p2;
    sc_signal< sc_lv<5> > add_ln113_fu_532_p2;
    sc_signal< bool > ap_block_state2;
    sc_signal< sc_lv<3> > select_ln128_1_fu_558_p3;
    sc_signal< sc_lv<2> > n_fu_744_p2;
    sc_signal< sc_lv<5> > indvar_flatten_reg_493;
    sc_signal< sc_lv<3> > m_0_reg_504;
    sc_signal< sc_lv<2> > n_0_reg_515;
    sc_signal< sc_lv<64> > zext_ln128_fu_566_p1;
    sc_signal< sc_lv<2> > select_ln128_fu_544_p3;
    sc_signal< sc_lv<32> > bitcast_ln119_fu_601_p1;
    sc_signal< sc_lv<32> > bitcast_ln120_fu_618_p1;
    sc_signal< sc_lv<32> > bitcast_ln121_fu_635_p1;
    sc_signal< sc_lv<32> > bitcast_ln122_fu_652_p1;
    sc_signal< sc_lv<32> > bitcast_ln123_fu_669_p1;
    sc_signal< sc_lv<32> > bitcast_ln124_fu_686_p1;
    sc_signal< sc_lv<32> > bitcast_ln125_fu_703_p1;
    sc_signal< sc_lv<32> > bitcast_ln126_fu_720_p1;
    sc_signal< sc_lv<32> > bitcast_ln127_fu_737_p1;
    sc_signal< sc_lv<1> > icmp_ln115_fu_538_p2;
    sc_signal< sc_lv<3> > add_ln113_1_fu_552_p2;
    sc_signal< sc_lv<32> > trunc_ln119_fu_597_p1;
    sc_signal< sc_lv<32> > wgt_f1_load_new6_fu_608_p4;
    sc_signal< sc_lv<32> > wgt_f2_load_new_fu_625_p4;
    sc_signal< sc_lv<32> > wgt_f3_load_new_fu_642_p4;
    sc_signal< sc_lv<32> > wgt_f4_load_new_fu_659_p4;
    sc_signal< sc_lv<32> > wgt_f5_load_new_fu_676_p4;
    sc_signal< sc_lv<32> > wgt_f6_load_new_fu_693_p4;
    sc_signal< sc_lv<32> > wgt_f7_load_new_fu_710_p4;
    sc_signal< sc_lv<32> > wgt_f8_load_new_fu_727_p4;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<3> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<3> ap_ST_fsm_state1;
    static const sc_lv<3> ap_ST_fsm_state2;
    static const sc_lv<3> ap_ST_fsm_state3;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<5> ap_const_lv5_12;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<32> ap_const_lv32_20;
    static const sc_lv<32> ap_const_lv32_3F;
    static const sc_lv<32> ap_const_lv32_40;
    static const sc_lv<32> ap_const_lv32_5F;
    static const sc_lv<32> ap_const_lv32_60;
    static const sc_lv<32> ap_const_lv32_7F;
    static const sc_lv<32> ap_const_lv32_80;
    static const sc_lv<32> ap_const_lv32_9F;
    static const sc_lv<32> ap_const_lv32_A0;
    static const sc_lv<32> ap_const_lv32_BF;
    static const sc_lv<32> ap_const_lv32_C0;
    static const sc_lv<32> ap_const_lv32_DF;
    static const sc_lv<32> ap_const_lv32_E0;
    static const sc_lv<32> ap_const_lv32_FF;
    static const sc_lv<32> ap_const_lv32_100;
    static const sc_lv<32> ap_const_lv32_11F;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln113_1_fu_552_p2();
    void thread_add_ln113_fu_532_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_block_state2();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_bitcast_ln119_fu_601_p1();
    void thread_bitcast_ln120_fu_618_p1();
    void thread_bitcast_ln121_fu_635_p1();
    void thread_bitcast_ln122_fu_652_p1();
    void thread_bitcast_ln123_fu_669_p1();
    void thread_bitcast_ln124_fu_686_p1();
    void thread_bitcast_ln125_fu_703_p1();
    void thread_bitcast_ln126_fu_720_p1();
    void thread_bitcast_ln127_fu_737_p1();
    void thread_filter_buff_0_0_0_address0();
    void thread_filter_buff_0_0_0_ce0();
    void thread_filter_buff_0_0_0_d0();
    void thread_filter_buff_0_0_0_we0();
    void thread_filter_buff_0_0_1_address0();
    void thread_filter_buff_0_0_1_ce0();
    void thread_filter_buff_0_0_1_d0();
    void thread_filter_buff_0_0_1_we0();
    void thread_filter_buff_0_0_2_address0();
    void thread_filter_buff_0_0_2_ce0();
    void thread_filter_buff_0_0_2_d0();
    void thread_filter_buff_0_0_2_we0();
    void thread_filter_buff_0_1_0_address0();
    void thread_filter_buff_0_1_0_ce0();
    void thread_filter_buff_0_1_0_d0();
    void thread_filter_buff_0_1_0_we0();
    void thread_filter_buff_0_1_1_address0();
    void thread_filter_buff_0_1_1_ce0();
    void thread_filter_buff_0_1_1_d0();
    void thread_filter_buff_0_1_1_we0();
    void thread_filter_buff_0_1_2_address0();
    void thread_filter_buff_0_1_2_ce0();
    void thread_filter_buff_0_1_2_d0();
    void thread_filter_buff_0_1_2_we0();
    void thread_filter_buff_0_2_0_address0();
    void thread_filter_buff_0_2_0_ce0();
    void thread_filter_buff_0_2_0_d0();
    void thread_filter_buff_0_2_0_we0();
    void thread_filter_buff_0_2_1_address0();
    void thread_filter_buff_0_2_1_ce0();
    void thread_filter_buff_0_2_1_d0();
    void thread_filter_buff_0_2_1_we0();
    void thread_filter_buff_0_2_2_address0();
    void thread_filter_buff_0_2_2_ce0();
    void thread_filter_buff_0_2_2_d0();
    void thread_filter_buff_0_2_2_we0();
    void thread_filter_buff_1_0_0_address0();
    void thread_filter_buff_1_0_0_ce0();
    void thread_filter_buff_1_0_0_d0();
    void thread_filter_buff_1_0_0_we0();
    void thread_filter_buff_1_0_1_address0();
    void thread_filter_buff_1_0_1_ce0();
    void thread_filter_buff_1_0_1_d0();
    void thread_filter_buff_1_0_1_we0();
    void thread_filter_buff_1_0_2_address0();
    void thread_filter_buff_1_0_2_ce0();
    void thread_filter_buff_1_0_2_d0();
    void thread_filter_buff_1_0_2_we0();
    void thread_filter_buff_1_1_0_address0();
    void thread_filter_buff_1_1_0_ce0();
    void thread_filter_buff_1_1_0_d0();
    void thread_filter_buff_1_1_0_we0();
    void thread_filter_buff_1_1_1_address0();
    void thread_filter_buff_1_1_1_ce0();
    void thread_filter_buff_1_1_1_d0();
    void thread_filter_buff_1_1_1_we0();
    void thread_filter_buff_1_1_2_address0();
    void thread_filter_buff_1_1_2_ce0();
    void thread_filter_buff_1_1_2_d0();
    void thread_filter_buff_1_1_2_we0();
    void thread_filter_buff_1_2_0_address0();
    void thread_filter_buff_1_2_0_ce0();
    void thread_filter_buff_1_2_0_d0();
    void thread_filter_buff_1_2_0_we0();
    void thread_filter_buff_1_2_1_address0();
    void thread_filter_buff_1_2_1_ce0();
    void thread_filter_buff_1_2_1_d0();
    void thread_filter_buff_1_2_1_we0();
    void thread_filter_buff_1_2_2_address0();
    void thread_filter_buff_1_2_2_ce0();
    void thread_filter_buff_1_2_2_d0();
    void thread_filter_buff_1_2_2_we0();
    void thread_filter_buff_2_0_0_address0();
    void thread_filter_buff_2_0_0_ce0();
    void thread_filter_buff_2_0_0_d0();
    void thread_filter_buff_2_0_0_we0();
    void thread_filter_buff_2_0_1_address0();
    void thread_filter_buff_2_0_1_ce0();
    void thread_filter_buff_2_0_1_d0();
    void thread_filter_buff_2_0_1_we0();
    void thread_filter_buff_2_0_2_address0();
    void thread_filter_buff_2_0_2_ce0();
    void thread_filter_buff_2_0_2_d0();
    void thread_filter_buff_2_0_2_we0();
    void thread_filter_buff_2_1_0_address0();
    void thread_filter_buff_2_1_0_ce0();
    void thread_filter_buff_2_1_0_d0();
    void thread_filter_buff_2_1_0_we0();
    void thread_filter_buff_2_1_1_address0();
    void thread_filter_buff_2_1_1_ce0();
    void thread_filter_buff_2_1_1_d0();
    void thread_filter_buff_2_1_1_we0();
    void thread_filter_buff_2_1_2_address0();
    void thread_filter_buff_2_1_2_ce0();
    void thread_filter_buff_2_1_2_d0();
    void thread_filter_buff_2_1_2_we0();
    void thread_filter_buff_2_2_0_address0();
    void thread_filter_buff_2_2_0_ce0();
    void thread_filter_buff_2_2_0_d0();
    void thread_filter_buff_2_2_0_we0();
    void thread_filter_buff_2_2_1_address0();
    void thread_filter_buff_2_2_1_ce0();
    void thread_filter_buff_2_2_1_d0();
    void thread_filter_buff_2_2_1_we0();
    void thread_filter_buff_2_2_2_address0();
    void thread_filter_buff_2_2_2_ce0();
    void thread_filter_buff_2_2_2_d0();
    void thread_filter_buff_2_2_2_we0();
    void thread_icmp_ln113_fu_526_p2();
    void thread_icmp_ln115_fu_538_p2();
    void thread_n_fu_744_p2();
    void thread_select_ln128_1_fu_558_p3();
    void thread_select_ln128_fu_544_p3();
    void thread_trunc_ln119_fu_597_p1();
    void thread_wgt_TDATA_blk_n();
    void thread_wgt_TREADY();
    void thread_wgt_f1_load_new6_fu_608_p4();
    void thread_wgt_f2_load_new_fu_625_p4();
    void thread_wgt_f3_load_new_fu_642_p4();
    void thread_wgt_f4_load_new_fu_659_p4();
    void thread_wgt_f5_load_new_fu_676_p4();
    void thread_wgt_f6_load_new_fu_693_p4();
    void thread_wgt_f7_load_new_fu_710_p4();
    void thread_wgt_f8_load_new_fu_727_p4();
    void thread_zext_ln128_fu_566_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
