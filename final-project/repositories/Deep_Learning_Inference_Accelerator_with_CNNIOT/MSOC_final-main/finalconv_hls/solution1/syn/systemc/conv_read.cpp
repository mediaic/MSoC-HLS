// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "conv_read.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic conv_read::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic conv_read::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<5> conv_read::ap_ST_fsm_state1 = "1";
const sc_lv<5> conv_read::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<5> conv_read::ap_ST_fsm_pp0_stage1 = "100";
const sc_lv<5> conv_read::ap_ST_fsm_state5 = "1000";
const sc_lv<5> conv_read::ap_ST_fsm_state6 = "10000";
const bool conv_read::ap_const_boolean_1 = true;
const sc_lv<32> conv_read::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> conv_read::ap_const_lv32_2 = "10";
const bool conv_read::ap_const_boolean_0 = false;
const sc_lv<1> conv_read::ap_const_lv1_0 = "0";
const sc_lv<32> conv_read::ap_const_lv32_1 = "1";
const sc_lv<1> conv_read::ap_const_lv1_1 = "1";
const sc_lv<6> conv_read::ap_const_lv6_0 = "000000";
const sc_lv<32> conv_read::ap_const_lv32_3 = "11";
const sc_lv<32> conv_read::ap_const_lv32_20 = "100000";
const sc_lv<6> conv_read::ap_const_lv6_20 = "100000";
const sc_lv<6> conv_read::ap_const_lv6_1 = "1";
const sc_lv<32> conv_read::ap_const_lv32_BF = "10111111";
const sc_lv<32> conv_read::ap_const_lv32_4 = "100";

conv_read::conv_read(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln233_fu_191_p2);
    sensitive << ( cofm_counter_read );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_01001);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_state4_io );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_state4_io );

    SC_METHOD(thread_ap_block_pp0_stage1);

    SC_METHOD(thread_ap_block_pp0_stage1_11001);
    sensitive << ( cofm_i_TVALID );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln233_reg_285 );

    SC_METHOD(thread_ap_block_pp0_stage1_subdone);
    sensitive << ( cofm_i_TVALID );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln233_reg_285 );

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state3_pp0_stage1_iter0);
    sensitive << ( cofm_i_TVALID );
    sensitive << ( icmp_ln233_reg_285 );

    SC_METHOD(thread_ap_block_state4_io);
    sensitive << ( cofm_o_TREADY );
    sensitive << ( icmp_ln233_reg_285 );

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter1);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state2);
    sensitive << ( icmp_ln233_fu_197_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_phi_mux_j_0_phi_fu_175_p4);
    sensitive << ( icmp_ln233_reg_285 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( j_0_reg_171 );
    sensitive << ( j_reg_289 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_ap_return);
    sensitive << ( cofm_counter_1_reg_182 );
    sensitive << ( ap_return_preg );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_bitcast_ln236_fu_219_p1);
    sensitive << ( ofm_buff0_0_q0 );

    SC_METHOD(thread_bitcast_ln237_fu_223_p1);
    sensitive << ( ofm_buff0_1_q0 );

    SC_METHOD(thread_bitcast_ln238_fu_227_p1);
    sensitive << ( ofm_buff0_2_q0 );

    SC_METHOD(thread_bitcast_ln239_fu_231_p1);
    sensitive << ( ofm_buff0_3_q0 );

    SC_METHOD(thread_bitcast_ln240_fu_235_p1);
    sensitive << ( ofm_buff0_4_q0 );

    SC_METHOD(thread_bitcast_ln241_fu_239_p1);
    sensitive << ( ofm_buff0_5_q0 );

    SC_METHOD(thread_cofm_TDATA_i_blk_n);
    sensitive << ( cofm_i_TVALID );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( icmp_ln233_reg_285 );

    SC_METHOD(thread_cofm_TDATA_o_blk_n);
    sensitive << ( cofm_o_TREADY );
    sensitive << ( icmp_ln233_reg_285 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_cofm_b5_addr1516_par_fu_259_p5);
    sensitive << ( cofm_i_TDATA );
    sensitive << ( tmp_s_fu_243_p7 );

    SC_METHOD(thread_cofm_i_TREADY);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln233_reg_285 );
    sensitive << ( ap_block_pp0_stage1_11001 );

    SC_METHOD(thread_cofm_o_TDATA);
    sensitive << ( icmp_ln233_reg_285 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( cofm_b5_addr1516_par_reg_324 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_cofm_o_TVALID);
    sensitive << ( icmp_ln233_reg_285 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_enable_read_read_fu_68_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( enable );

    SC_METHOD(thread_icmp_ln233_fu_197_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_phi_mux_j_0_phi_fu_175_p4 );

    SC_METHOD(thread_j_fu_203_p2);
    sensitive << ( ap_phi_mux_j_0_phi_fu_175_p4 );

    SC_METHOD(thread_ofm_buff0_0_address0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln236_fu_209_p1 );

    SC_METHOD(thread_ofm_buff0_0_ce0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_ofm_buff0_1_address0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln236_fu_209_p1 );

    SC_METHOD(thread_ofm_buff0_1_ce0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_ofm_buff0_2_address0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln236_fu_209_p1 );

    SC_METHOD(thread_ofm_buff0_2_ce0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_ofm_buff0_3_address0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln236_fu_209_p1 );

    SC_METHOD(thread_ofm_buff0_3_ce0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_ofm_buff0_4_address0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln236_fu_209_p1 );

    SC_METHOD(thread_ofm_buff0_4_ce0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_ofm_buff0_5_address0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln236_fu_209_p1 );

    SC_METHOD(thread_ofm_buff0_5_ce0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_tmp_s_fu_243_p7);
    sensitive << ( bitcast_ln241_fu_239_p1 );
    sensitive << ( bitcast_ln240_fu_235_p1 );
    sensitive << ( bitcast_ln239_fu_231_p1 );
    sensitive << ( bitcast_ln238_fu_227_p1 );
    sensitive << ( bitcast_ln237_fu_223_p1 );
    sensitive << ( bitcast_ln236_fu_219_p1 );

    SC_METHOD(thread_zext_ln236_fu_209_p1);
    sensitive << ( ap_phi_mux_j_0_phi_fu_175_p4 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( enable_read_read_fu_68_p2 );
    sensitive << ( icmp_ln233_fu_197_p2 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_block_pp0_stage1_subdone );

    ap_CS_fsm = "00001";
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_return_preg = "00000000000000000000000000000000";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "conv_read_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, cofm_i_TDATA, "(port)cofm_i_TDATA");
    sc_trace(mVcdFile, cofm_i_TVALID, "(port)cofm_i_TVALID");
    sc_trace(mVcdFile, cofm_i_TREADY, "(port)cofm_i_TREADY");
    sc_trace(mVcdFile, cofm_o_TDATA, "(port)cofm_o_TDATA");
    sc_trace(mVcdFile, cofm_o_TVALID, "(port)cofm_o_TVALID");
    sc_trace(mVcdFile, cofm_o_TREADY, "(port)cofm_o_TREADY");
    sc_trace(mVcdFile, ofm_buff0_0_address0, "(port)ofm_buff0_0_address0");
    sc_trace(mVcdFile, ofm_buff0_0_ce0, "(port)ofm_buff0_0_ce0");
    sc_trace(mVcdFile, ofm_buff0_0_q0, "(port)ofm_buff0_0_q0");
    sc_trace(mVcdFile, ofm_buff0_1_address0, "(port)ofm_buff0_1_address0");
    sc_trace(mVcdFile, ofm_buff0_1_ce0, "(port)ofm_buff0_1_ce0");
    sc_trace(mVcdFile, ofm_buff0_1_q0, "(port)ofm_buff0_1_q0");
    sc_trace(mVcdFile, ofm_buff0_2_address0, "(port)ofm_buff0_2_address0");
    sc_trace(mVcdFile, ofm_buff0_2_ce0, "(port)ofm_buff0_2_ce0");
    sc_trace(mVcdFile, ofm_buff0_2_q0, "(port)ofm_buff0_2_q0");
    sc_trace(mVcdFile, ofm_buff0_3_address0, "(port)ofm_buff0_3_address0");
    sc_trace(mVcdFile, ofm_buff0_3_ce0, "(port)ofm_buff0_3_ce0");
    sc_trace(mVcdFile, ofm_buff0_3_q0, "(port)ofm_buff0_3_q0");
    sc_trace(mVcdFile, ofm_buff0_4_address0, "(port)ofm_buff0_4_address0");
    sc_trace(mVcdFile, ofm_buff0_4_ce0, "(port)ofm_buff0_4_ce0");
    sc_trace(mVcdFile, ofm_buff0_4_q0, "(port)ofm_buff0_4_q0");
    sc_trace(mVcdFile, ofm_buff0_5_address0, "(port)ofm_buff0_5_address0");
    sc_trace(mVcdFile, ofm_buff0_5_ce0, "(port)ofm_buff0_5_ce0");
    sc_trace(mVcdFile, ofm_buff0_5_q0, "(port)ofm_buff0_5_q0");
    sc_trace(mVcdFile, cofm_counter_read, "(port)cofm_counter_read");
    sc_trace(mVcdFile, enable, "(port)enable");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, cofm_TDATA_i_blk_n, "cofm_TDATA_i_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage1, "ap_CS_fsm_pp0_stage1");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage1, "ap_block_pp0_stage1");
    sc_trace(mVcdFile, icmp_ln233_reg_285, "icmp_ln233_reg_285");
    sc_trace(mVcdFile, cofm_TDATA_o_blk_n, "cofm_TDATA_o_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, j_0_reg_171, "j_0_reg_171");
    sc_trace(mVcdFile, enable_read_read_fu_68_p2, "enable_read_read_fu_68_p2");
    sc_trace(mVcdFile, add_ln233_fu_191_p2, "add_ln233_fu_191_p2");
    sc_trace(mVcdFile, add_ln233_reg_280, "add_ln233_reg_280");
    sc_trace(mVcdFile, icmp_ln233_fu_197_p2, "icmp_ln233_fu_197_p2");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter1, "ap_block_state4_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state4_io, "ap_block_state4_io");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, j_fu_203_p2, "j_fu_203_p2");
    sc_trace(mVcdFile, j_reg_289, "j_reg_289");
    sc_trace(mVcdFile, cofm_b5_addr1516_par_fu_259_p5, "cofm_b5_addr1516_par_fu_259_p5");
    sc_trace(mVcdFile, cofm_b5_addr1516_par_reg_324, "cofm_b5_addr1516_par_reg_324");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage1_iter0, "ap_block_state3_pp0_stage1_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage1_11001, "ap_block_pp0_stage1_11001");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state2, "ap_condition_pp0_exit_iter0_state2");
    sc_trace(mVcdFile, ap_block_pp0_stage1_subdone, "ap_block_pp0_stage1_subdone");
    sc_trace(mVcdFile, ap_phi_mux_j_0_phi_fu_175_p4, "ap_phi_mux_j_0_phi_fu_175_p4");
    sc_trace(mVcdFile, cofm_counter_1_reg_182, "cofm_counter_1_reg_182");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, zext_ln236_fu_209_p1, "zext_ln236_fu_209_p1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, bitcast_ln241_fu_239_p1, "bitcast_ln241_fu_239_p1");
    sc_trace(mVcdFile, bitcast_ln240_fu_235_p1, "bitcast_ln240_fu_235_p1");
    sc_trace(mVcdFile, bitcast_ln239_fu_231_p1, "bitcast_ln239_fu_231_p1");
    sc_trace(mVcdFile, bitcast_ln238_fu_227_p1, "bitcast_ln238_fu_227_p1");
    sc_trace(mVcdFile, bitcast_ln237_fu_223_p1, "bitcast_ln237_fu_223_p1");
    sc_trace(mVcdFile, bitcast_ln236_fu_219_p1, "bitcast_ln236_fu_219_p1");
    sc_trace(mVcdFile, tmp_s_fu_243_p7, "tmp_s_fu_243_p7");
    sc_trace(mVcdFile, ap_return_preg, "ap_return_preg");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
}

conv_read::~conv_read() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void conv_read::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
                    esl_seteq<1,1,1>(enable_read_read_fu_68_p2.read(), ap_const_lv1_1))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
              esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
              esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0)))) {
            ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
                    esl_seteq<1,1,1>(enable_read_read_fu_68_p2.read(), ap_const_lv1_1))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_preg = ap_const_lv32_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
            ap_return_preg = cofm_counter_1_reg_182.read();
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        cofm_counter_1_reg_182 = add_ln233_reg_280.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, enable_read_read_fu_68_p2.read()))) {
        cofm_counter_1_reg_182 = cofm_counter_read.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(enable_read_read_fu_68_p2.read(), ap_const_lv1_1))) {
        j_0_reg_171 = ap_const_lv6_0;
    } else if ((esl_seteq<1,1,1>(icmp_ln233_reg_285.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        j_0_reg_171 = j_reg_289.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(enable_read_read_fu_68_p2.read(), ap_const_lv1_1))) {
        add_ln233_reg_280 = add_ln233_fu_191_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(icmp_ln233_reg_285.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0))) {
        cofm_b5_addr1516_par_reg_324 = cofm_b5_addr1516_par_fu_259_p5.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln233_reg_285 = icmp_ln233_fu_197_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        j_reg_289 = j_fu_203_p2.read();
    }
}

void conv_read::thread_add_ln233_fu_191_p2() {
    add_ln233_fu_191_p2 = (!cofm_counter_read.read().is_01() || !ap_const_lv32_20.is_01())? sc_lv<32>(): (sc_biguint<32>(cofm_counter_read.read()) + sc_biguint<32>(ap_const_lv32_20));
}

void conv_read::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void conv_read::thread_ap_CS_fsm_pp0_stage1() {
    ap_CS_fsm_pp0_stage1 = ap_CS_fsm.read()[2];
}

void conv_read::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void conv_read::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[3];
}

void conv_read::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[4];
}

void conv_read::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void conv_read::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void conv_read::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read()));
}

void conv_read::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read()));
}

void conv_read::thread_ap_block_pp0_stage1() {
    ap_block_pp0_stage1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void conv_read::thread_ap_block_pp0_stage1_11001() {
    ap_block_pp0_stage1_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(icmp_ln233_reg_285.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, cofm_i_TVALID.read()));
}

void conv_read::thread_ap_block_pp0_stage1_subdone() {
    ap_block_pp0_stage1_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(icmp_ln233_reg_285.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, cofm_i_TVALID.read()));
}

void conv_read::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void conv_read::thread_ap_block_state3_pp0_stage1_iter0() {
    ap_block_state3_pp0_stage1_iter0 = (esl_seteq<1,1,1>(icmp_ln233_reg_285.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, cofm_i_TVALID.read()));
}

void conv_read::thread_ap_block_state4_io() {
    ap_block_state4_io = (esl_seteq<1,1,1>(icmp_ln233_reg_285.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, cofm_o_TREADY.read()));
}

void conv_read::thread_ap_block_state4_pp0_stage0_iter1() {
    ap_block_state4_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void conv_read::thread_ap_condition_pp0_exit_iter0_state2() {
    if (esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln233_fu_197_p2.read())) {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_0;
    }
}

void conv_read::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void conv_read::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void conv_read::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void conv_read::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void conv_read::thread_ap_phi_mux_j_0_phi_fu_175_p4() {
    if ((esl_seteq<1,1,1>(icmp_ln233_reg_285.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_j_0_phi_fu_175_p4 = j_reg_289.read();
    } else {
        ap_phi_mux_j_0_phi_fu_175_p4 = j_0_reg_171.read();
    }
}

void conv_read::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void conv_read::thread_ap_return() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        ap_return = cofm_counter_1_reg_182.read();
    } else {
        ap_return = ap_return_preg.read();
    }
}

void conv_read::thread_bitcast_ln236_fu_219_p1() {
    bitcast_ln236_fu_219_p1 = ofm_buff0_0_q0.read();
}

void conv_read::thread_bitcast_ln237_fu_223_p1() {
    bitcast_ln237_fu_223_p1 = ofm_buff0_1_q0.read();
}

void conv_read::thread_bitcast_ln238_fu_227_p1() {
    bitcast_ln238_fu_227_p1 = ofm_buff0_2_q0.read();
}

void conv_read::thread_bitcast_ln239_fu_231_p1() {
    bitcast_ln239_fu_231_p1 = ofm_buff0_3_q0.read();
}

void conv_read::thread_bitcast_ln240_fu_235_p1() {
    bitcast_ln240_fu_235_p1 = ofm_buff0_4_q0.read();
}

void conv_read::thread_bitcast_ln241_fu_239_p1() {
    bitcast_ln241_fu_239_p1 = ofm_buff0_5_q0.read();
}

void conv_read::thread_cofm_TDATA_i_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln233_reg_285.read(), ap_const_lv1_0))) {
        cofm_TDATA_i_blk_n = cofm_i_TVALID.read();
    } else {
        cofm_TDATA_i_blk_n = ap_const_logic_1;
    }
}

void conv_read::thread_cofm_TDATA_o_blk_n() {
    if ((esl_seteq<1,1,1>(icmp_ln233_reg_285.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        cofm_TDATA_o_blk_n = cofm_o_TREADY.read();
    } else {
        cofm_TDATA_o_blk_n = ap_const_logic_1;
    }
}

void conv_read::thread_cofm_b5_addr1516_par_fu_259_p5() {
    cofm_b5_addr1516_par_fu_259_p5 = esl_partset<512,512,192,32,32>(cofm_i_TDATA.read(), tmp_s_fu_243_p7.read(), ap_const_lv32_0, ap_const_lv32_BF);
}

void conv_read::thread_cofm_i_TREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(icmp_ln233_reg_285.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0))) {
        cofm_i_TREADY = ap_const_logic_1;
    } else {
        cofm_i_TREADY = ap_const_logic_0;
    }
}

void conv_read::thread_cofm_o_TDATA() {
    cofm_o_TDATA = cofm_b5_addr1516_par_reg_324.read();
}

void conv_read::thread_cofm_o_TVALID() {
    if ((esl_seteq<1,1,1>(icmp_ln233_reg_285.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        cofm_o_TVALID = ap_const_logic_1;
    } else {
        cofm_o_TVALID = ap_const_logic_0;
    }
}

void conv_read::thread_enable_read_read_fu_68_p2() {
    enable_read_read_fu_68_p2 =  (sc_lv<1>) (enable.read());
}

void conv_read::thread_icmp_ln233_fu_197_p2() {
    icmp_ln233_fu_197_p2 = (!ap_phi_mux_j_0_phi_fu_175_p4.read().is_01() || !ap_const_lv6_20.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_j_0_phi_fu_175_p4.read() == ap_const_lv6_20);
}

void conv_read::thread_j_fu_203_p2() {
    j_fu_203_p2 = (!ap_phi_mux_j_0_phi_fu_175_p4.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(ap_phi_mux_j_0_phi_fu_175_p4.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void conv_read::thread_ofm_buff0_0_address0() {
    ofm_buff0_0_address0 =  (sc_lv<5>) (zext_ln236_fu_209_p1.read());
}

void conv_read::thread_ofm_buff0_0_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        ofm_buff0_0_ce0 = ap_const_logic_1;
    } else {
        ofm_buff0_0_ce0 = ap_const_logic_0;
    }
}

void conv_read::thread_ofm_buff0_1_address0() {
    ofm_buff0_1_address0 =  (sc_lv<5>) (zext_ln236_fu_209_p1.read());
}

void conv_read::thread_ofm_buff0_1_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        ofm_buff0_1_ce0 = ap_const_logic_1;
    } else {
        ofm_buff0_1_ce0 = ap_const_logic_0;
    }
}

void conv_read::thread_ofm_buff0_2_address0() {
    ofm_buff0_2_address0 =  (sc_lv<5>) (zext_ln236_fu_209_p1.read());
}

void conv_read::thread_ofm_buff0_2_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        ofm_buff0_2_ce0 = ap_const_logic_1;
    } else {
        ofm_buff0_2_ce0 = ap_const_logic_0;
    }
}

void conv_read::thread_ofm_buff0_3_address0() {
    ofm_buff0_3_address0 =  (sc_lv<5>) (zext_ln236_fu_209_p1.read());
}

void conv_read::thread_ofm_buff0_3_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        ofm_buff0_3_ce0 = ap_const_logic_1;
    } else {
        ofm_buff0_3_ce0 = ap_const_logic_0;
    }
}

void conv_read::thread_ofm_buff0_4_address0() {
    ofm_buff0_4_address0 =  (sc_lv<5>) (zext_ln236_fu_209_p1.read());
}

void conv_read::thread_ofm_buff0_4_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        ofm_buff0_4_ce0 = ap_const_logic_1;
    } else {
        ofm_buff0_4_ce0 = ap_const_logic_0;
    }
}

void conv_read::thread_ofm_buff0_5_address0() {
    ofm_buff0_5_address0 =  (sc_lv<5>) (zext_ln236_fu_209_p1.read());
}

void conv_read::thread_ofm_buff0_5_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        ofm_buff0_5_ce0 = ap_const_logic_1;
    } else {
        ofm_buff0_5_ce0 = ap_const_logic_0;
    }
}

void conv_read::thread_tmp_s_fu_243_p7() {
    tmp_s_fu_243_p7 = esl_concat<160,32>(esl_concat<128,32>(esl_concat<96,32>(esl_concat<64,32>(esl_concat<32,32>(bitcast_ln241_fu_239_p1.read(), bitcast_ln240_fu_235_p1.read()), bitcast_ln239_fu_231_p1.read()), bitcast_ln238_fu_227_p1.read()), bitcast_ln237_fu_223_p1.read()), bitcast_ln236_fu_219_p1.read());
}

void conv_read::thread_zext_ln236_fu_209_p1() {
    zext_ln236_fu_209_p1 = esl_zext<64,6>(ap_phi_mux_j_0_phi_fu_175_p4.read());
}

void conv_read::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(enable_read_read_fu_68_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_lv1_0, enable_read_read_fu_68_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln233_fu_197_p2.read())))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln233_fu_197_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm = "XXXXX";
            break;
    }
}

}

