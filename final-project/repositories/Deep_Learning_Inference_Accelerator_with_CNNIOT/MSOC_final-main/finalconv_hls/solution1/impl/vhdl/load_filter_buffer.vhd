-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity load_filter_buffer is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    wgt_TDATA : IN STD_LOGIC_VECTOR (511 downto 0);
    wgt_TVALID : IN STD_LOGIC;
    wgt_TREADY : OUT STD_LOGIC;
    filter_buff_0_0_0_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    filter_buff_0_0_0_ce0 : OUT STD_LOGIC;
    filter_buff_0_0_0_we0 : OUT STD_LOGIC;
    filter_buff_0_0_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    filter_buff_0_0_1_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    filter_buff_0_0_1_ce0 : OUT STD_LOGIC;
    filter_buff_0_0_1_we0 : OUT STD_LOGIC;
    filter_buff_0_0_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    filter_buff_0_0_2_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    filter_buff_0_0_2_ce0 : OUT STD_LOGIC;
    filter_buff_0_0_2_we0 : OUT STD_LOGIC;
    filter_buff_0_0_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    filter_buff_0_1_0_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    filter_buff_0_1_0_ce0 : OUT STD_LOGIC;
    filter_buff_0_1_0_we0 : OUT STD_LOGIC;
    filter_buff_0_1_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    filter_buff_0_1_1_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    filter_buff_0_1_1_ce0 : OUT STD_LOGIC;
    filter_buff_0_1_1_we0 : OUT STD_LOGIC;
    filter_buff_0_1_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    filter_buff_0_1_2_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    filter_buff_0_1_2_ce0 : OUT STD_LOGIC;
    filter_buff_0_1_2_we0 : OUT STD_LOGIC;
    filter_buff_0_1_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    filter_buff_0_2_0_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    filter_buff_0_2_0_ce0 : OUT STD_LOGIC;
    filter_buff_0_2_0_we0 : OUT STD_LOGIC;
    filter_buff_0_2_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    filter_buff_0_2_1_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    filter_buff_0_2_1_ce0 : OUT STD_LOGIC;
    filter_buff_0_2_1_we0 : OUT STD_LOGIC;
    filter_buff_0_2_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    filter_buff_0_2_2_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    filter_buff_0_2_2_ce0 : OUT STD_LOGIC;
    filter_buff_0_2_2_we0 : OUT STD_LOGIC;
    filter_buff_0_2_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    filter_buff_1_0_0_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    filter_buff_1_0_0_ce0 : OUT STD_LOGIC;
    filter_buff_1_0_0_we0 : OUT STD_LOGIC;
    filter_buff_1_0_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    filter_buff_1_0_1_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    filter_buff_1_0_1_ce0 : OUT STD_LOGIC;
    filter_buff_1_0_1_we0 : OUT STD_LOGIC;
    filter_buff_1_0_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    filter_buff_1_0_2_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    filter_buff_1_0_2_ce0 : OUT STD_LOGIC;
    filter_buff_1_0_2_we0 : OUT STD_LOGIC;
    filter_buff_1_0_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    filter_buff_1_1_0_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    filter_buff_1_1_0_ce0 : OUT STD_LOGIC;
    filter_buff_1_1_0_we0 : OUT STD_LOGIC;
    filter_buff_1_1_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    filter_buff_1_1_1_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    filter_buff_1_1_1_ce0 : OUT STD_LOGIC;
    filter_buff_1_1_1_we0 : OUT STD_LOGIC;
    filter_buff_1_1_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    filter_buff_1_1_2_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    filter_buff_1_1_2_ce0 : OUT STD_LOGIC;
    filter_buff_1_1_2_we0 : OUT STD_LOGIC;
    filter_buff_1_1_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    filter_buff_1_2_0_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    filter_buff_1_2_0_ce0 : OUT STD_LOGIC;
    filter_buff_1_2_0_we0 : OUT STD_LOGIC;
    filter_buff_1_2_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    filter_buff_1_2_1_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    filter_buff_1_2_1_ce0 : OUT STD_LOGIC;
    filter_buff_1_2_1_we0 : OUT STD_LOGIC;
    filter_buff_1_2_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    filter_buff_1_2_2_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    filter_buff_1_2_2_ce0 : OUT STD_LOGIC;
    filter_buff_1_2_2_we0 : OUT STD_LOGIC;
    filter_buff_1_2_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    filter_buff_2_0_0_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    filter_buff_2_0_0_ce0 : OUT STD_LOGIC;
    filter_buff_2_0_0_we0 : OUT STD_LOGIC;
    filter_buff_2_0_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    filter_buff_2_0_1_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    filter_buff_2_0_1_ce0 : OUT STD_LOGIC;
    filter_buff_2_0_1_we0 : OUT STD_LOGIC;
    filter_buff_2_0_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    filter_buff_2_0_2_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    filter_buff_2_0_2_ce0 : OUT STD_LOGIC;
    filter_buff_2_0_2_we0 : OUT STD_LOGIC;
    filter_buff_2_0_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    filter_buff_2_1_0_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    filter_buff_2_1_0_ce0 : OUT STD_LOGIC;
    filter_buff_2_1_0_we0 : OUT STD_LOGIC;
    filter_buff_2_1_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    filter_buff_2_1_1_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    filter_buff_2_1_1_ce0 : OUT STD_LOGIC;
    filter_buff_2_1_1_we0 : OUT STD_LOGIC;
    filter_buff_2_1_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    filter_buff_2_1_2_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    filter_buff_2_1_2_ce0 : OUT STD_LOGIC;
    filter_buff_2_1_2_we0 : OUT STD_LOGIC;
    filter_buff_2_1_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    filter_buff_2_2_0_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    filter_buff_2_2_0_ce0 : OUT STD_LOGIC;
    filter_buff_2_2_0_we0 : OUT STD_LOGIC;
    filter_buff_2_2_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    filter_buff_2_2_1_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    filter_buff_2_2_1_ce0 : OUT STD_LOGIC;
    filter_buff_2_2_1_we0 : OUT STD_LOGIC;
    filter_buff_2_2_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    filter_buff_2_2_2_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    filter_buff_2_2_2_ce0 : OUT STD_LOGIC;
    filter_buff_2_2_2_we0 : OUT STD_LOGIC;
    filter_buff_2_2_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of load_filter_buffer is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv5_12 : STD_LOGIC_VECTOR (4 downto 0) := "10010";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";
    constant ap_const_lv32_80 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000000";
    constant ap_const_lv32_9F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011111";
    constant ap_const_lv32_A0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010100000";
    constant ap_const_lv32_BF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010111111";
    constant ap_const_lv32_C0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011000000";
    constant ap_const_lv32_DF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011011111";
    constant ap_const_lv32_E0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011100000";
    constant ap_const_lv32_FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011111111";
    constant ap_const_lv32_100 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100000000";
    constant ap_const_lv32_11F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100011111";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal wgt_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal icmp_ln113_fu_526_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln113_fu_532_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_block_state2 : BOOLEAN;
    signal select_ln128_1_fu_558_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal n_fu_744_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal indvar_flatten_reg_493 : STD_LOGIC_VECTOR (4 downto 0);
    signal m_0_reg_504 : STD_LOGIC_VECTOR (2 downto 0);
    signal n_0_reg_515 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln128_fu_566_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln128_fu_544_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal bitcast_ln119_fu_601_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln120_fu_618_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln121_fu_635_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln122_fu_652_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln123_fu_669_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln124_fu_686_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln125_fu_703_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln126_fu_720_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln127_fu_737_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln115_fu_538_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln113_1_fu_552_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln119_fu_597_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal wgt_f1_load_new6_fu_608_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal wgt_f2_load_new_fu_625_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal wgt_f3_load_new_fu_642_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal wgt_f4_load_new_fu_659_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal wgt_f5_load_new_fu_676_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal wgt_f6_load_new_fu_693_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal wgt_f7_load_new_fu_710_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal wgt_f8_load_new_fu_727_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    indvar_flatten_reg_493_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((wgt_TVALID = ap_const_logic_0) and (icmp_ln113_fu_526_p2 = ap_const_lv1_0))) and (icmp_ln113_fu_526_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                indvar_flatten_reg_493 <= add_ln113_fu_532_p2;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten_reg_493 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    m_0_reg_504_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((wgt_TVALID = ap_const_logic_0) and (icmp_ln113_fu_526_p2 = ap_const_lv1_0))) and (icmp_ln113_fu_526_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                m_0_reg_504 <= select_ln128_1_fu_558_p3;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                m_0_reg_504 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    n_0_reg_515_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((wgt_TVALID = ap_const_logic_0) and (icmp_ln113_fu_526_p2 = ap_const_lv1_0))) and (icmp_ln113_fu_526_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                n_0_reg_515 <= n_fu_744_p2;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                n_0_reg_515 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, wgt_TVALID, ap_CS_fsm_state2, icmp_ln113_fu_526_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if ((not(((wgt_TVALID = ap_const_logic_0) and (icmp_ln113_fu_526_p2 = ap_const_lv1_0))) and (icmp_ln113_fu_526_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                elsif ((not(((wgt_TVALID = ap_const_logic_0) and (icmp_ln113_fu_526_p2 = ap_const_lv1_0))) and (icmp_ln113_fu_526_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;
    add_ln113_1_fu_552_p2 <= std_logic_vector(unsigned(ap_const_lv3_1) + unsigned(m_0_reg_504));
    add_ln113_fu_532_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_493) + unsigned(ap_const_lv5_1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);

    ap_block_state2_assign_proc : process(wgt_TVALID, icmp_ln113_fu_526_p2)
    begin
                ap_block_state2 <= ((wgt_TVALID = ap_const_logic_0) and (icmp_ln113_fu_526_p2 = ap_const_lv1_0));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    bitcast_ln119_fu_601_p1 <= trunc_ln119_fu_597_p1;
    bitcast_ln120_fu_618_p1 <= wgt_f1_load_new6_fu_608_p4;
    bitcast_ln121_fu_635_p1 <= wgt_f2_load_new_fu_625_p4;
    bitcast_ln122_fu_652_p1 <= wgt_f3_load_new_fu_642_p4;
    bitcast_ln123_fu_669_p1 <= wgt_f4_load_new_fu_659_p4;
    bitcast_ln124_fu_686_p1 <= wgt_f5_load_new_fu_676_p4;
    bitcast_ln125_fu_703_p1 <= wgt_f6_load_new_fu_693_p4;
    bitcast_ln126_fu_720_p1 <= wgt_f7_load_new_fu_710_p4;
    bitcast_ln127_fu_737_p1 <= wgt_f8_load_new_fu_727_p4;
    filter_buff_0_0_0_address0 <= zext_ln128_fu_566_p1(3 - 1 downto 0);

    filter_buff_0_0_0_ce0_assign_proc : process(wgt_TVALID, ap_CS_fsm_state2, icmp_ln113_fu_526_p2)
    begin
        if ((not(((wgt_TVALID = ap_const_logic_0) and (icmp_ln113_fu_526_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            filter_buff_0_0_0_ce0 <= ap_const_logic_1;
        else 
            filter_buff_0_0_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    filter_buff_0_0_0_d0 <= bitcast_ln119_fu_601_p1;

    filter_buff_0_0_0_we0_assign_proc : process(wgt_TVALID, ap_CS_fsm_state2, icmp_ln113_fu_526_p2, select_ln128_fu_544_p3)
    begin
        if ((not(((wgt_TVALID = ap_const_logic_0) and (icmp_ln113_fu_526_p2 = ap_const_lv1_0))) and (select_ln128_fu_544_p3 = ap_const_lv2_0) and (icmp_ln113_fu_526_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            filter_buff_0_0_0_we0 <= ap_const_logic_1;
        else 
            filter_buff_0_0_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    filter_buff_0_0_1_address0 <= zext_ln128_fu_566_p1(3 - 1 downto 0);

    filter_buff_0_0_1_ce0_assign_proc : process(wgt_TVALID, ap_CS_fsm_state2, icmp_ln113_fu_526_p2)
    begin
        if ((not(((wgt_TVALID = ap_const_logic_0) and (icmp_ln113_fu_526_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            filter_buff_0_0_1_ce0 <= ap_const_logic_1;
        else 
            filter_buff_0_0_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    filter_buff_0_0_1_d0 <= bitcast_ln120_fu_618_p1;

    filter_buff_0_0_1_we0_assign_proc : process(wgt_TVALID, ap_CS_fsm_state2, icmp_ln113_fu_526_p2, select_ln128_fu_544_p3)
    begin
        if ((not(((wgt_TVALID = ap_const_logic_0) and (icmp_ln113_fu_526_p2 = ap_const_lv1_0))) and (select_ln128_fu_544_p3 = ap_const_lv2_0) and (icmp_ln113_fu_526_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            filter_buff_0_0_1_we0 <= ap_const_logic_1;
        else 
            filter_buff_0_0_1_we0 <= ap_const_logic_0;
        end if; 
    end process;

    filter_buff_0_0_2_address0 <= zext_ln128_fu_566_p1(3 - 1 downto 0);

    filter_buff_0_0_2_ce0_assign_proc : process(wgt_TVALID, ap_CS_fsm_state2, icmp_ln113_fu_526_p2)
    begin
        if ((not(((wgt_TVALID = ap_const_logic_0) and (icmp_ln113_fu_526_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            filter_buff_0_0_2_ce0 <= ap_const_logic_1;
        else 
            filter_buff_0_0_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    filter_buff_0_0_2_d0 <= bitcast_ln121_fu_635_p1;

    filter_buff_0_0_2_we0_assign_proc : process(wgt_TVALID, ap_CS_fsm_state2, icmp_ln113_fu_526_p2, select_ln128_fu_544_p3)
    begin
        if ((not(((wgt_TVALID = ap_const_logic_0) and (icmp_ln113_fu_526_p2 = ap_const_lv1_0))) and (select_ln128_fu_544_p3 = ap_const_lv2_0) and (icmp_ln113_fu_526_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            filter_buff_0_0_2_we0 <= ap_const_logic_1;
        else 
            filter_buff_0_0_2_we0 <= ap_const_logic_0;
        end if; 
    end process;

    filter_buff_0_1_0_address0 <= zext_ln128_fu_566_p1(3 - 1 downto 0);

    filter_buff_0_1_0_ce0_assign_proc : process(wgt_TVALID, ap_CS_fsm_state2, icmp_ln113_fu_526_p2)
    begin
        if ((not(((wgt_TVALID = ap_const_logic_0) and (icmp_ln113_fu_526_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            filter_buff_0_1_0_ce0 <= ap_const_logic_1;
        else 
            filter_buff_0_1_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    filter_buff_0_1_0_d0 <= bitcast_ln122_fu_652_p1;

    filter_buff_0_1_0_we0_assign_proc : process(wgt_TVALID, ap_CS_fsm_state2, icmp_ln113_fu_526_p2, select_ln128_fu_544_p3)
    begin
        if ((not(((wgt_TVALID = ap_const_logic_0) and (icmp_ln113_fu_526_p2 = ap_const_lv1_0))) and (select_ln128_fu_544_p3 = ap_const_lv2_0) and (icmp_ln113_fu_526_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            filter_buff_0_1_0_we0 <= ap_const_logic_1;
        else 
            filter_buff_0_1_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    filter_buff_0_1_1_address0 <= zext_ln128_fu_566_p1(3 - 1 downto 0);

    filter_buff_0_1_1_ce0_assign_proc : process(wgt_TVALID, ap_CS_fsm_state2, icmp_ln113_fu_526_p2)
    begin
        if ((not(((wgt_TVALID = ap_const_logic_0) and (icmp_ln113_fu_526_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            filter_buff_0_1_1_ce0 <= ap_const_logic_1;
        else 
            filter_buff_0_1_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    filter_buff_0_1_1_d0 <= bitcast_ln123_fu_669_p1;

    filter_buff_0_1_1_we0_assign_proc : process(wgt_TVALID, ap_CS_fsm_state2, icmp_ln113_fu_526_p2, select_ln128_fu_544_p3)
    begin
        if ((not(((wgt_TVALID = ap_const_logic_0) and (icmp_ln113_fu_526_p2 = ap_const_lv1_0))) and (select_ln128_fu_544_p3 = ap_const_lv2_0) and (icmp_ln113_fu_526_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            filter_buff_0_1_1_we0 <= ap_const_logic_1;
        else 
            filter_buff_0_1_1_we0 <= ap_const_logic_0;
        end if; 
    end process;

    filter_buff_0_1_2_address0 <= zext_ln128_fu_566_p1(3 - 1 downto 0);

    filter_buff_0_1_2_ce0_assign_proc : process(wgt_TVALID, ap_CS_fsm_state2, icmp_ln113_fu_526_p2)
    begin
        if ((not(((wgt_TVALID = ap_const_logic_0) and (icmp_ln113_fu_526_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            filter_buff_0_1_2_ce0 <= ap_const_logic_1;
        else 
            filter_buff_0_1_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    filter_buff_0_1_2_d0 <= bitcast_ln124_fu_686_p1;

    filter_buff_0_1_2_we0_assign_proc : process(wgt_TVALID, ap_CS_fsm_state2, icmp_ln113_fu_526_p2, select_ln128_fu_544_p3)
    begin
        if ((not(((wgt_TVALID = ap_const_logic_0) and (icmp_ln113_fu_526_p2 = ap_const_lv1_0))) and (select_ln128_fu_544_p3 = ap_const_lv2_0) and (icmp_ln113_fu_526_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            filter_buff_0_1_2_we0 <= ap_const_logic_1;
        else 
            filter_buff_0_1_2_we0 <= ap_const_logic_0;
        end if; 
    end process;

    filter_buff_0_2_0_address0 <= zext_ln128_fu_566_p1(3 - 1 downto 0);

    filter_buff_0_2_0_ce0_assign_proc : process(wgt_TVALID, ap_CS_fsm_state2, icmp_ln113_fu_526_p2)
    begin
        if ((not(((wgt_TVALID = ap_const_logic_0) and (icmp_ln113_fu_526_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            filter_buff_0_2_0_ce0 <= ap_const_logic_1;
        else 
            filter_buff_0_2_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    filter_buff_0_2_0_d0 <= bitcast_ln125_fu_703_p1;

    filter_buff_0_2_0_we0_assign_proc : process(wgt_TVALID, ap_CS_fsm_state2, icmp_ln113_fu_526_p2, select_ln128_fu_544_p3)
    begin
        if ((not(((wgt_TVALID = ap_const_logic_0) and (icmp_ln113_fu_526_p2 = ap_const_lv1_0))) and (select_ln128_fu_544_p3 = ap_const_lv2_0) and (icmp_ln113_fu_526_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            filter_buff_0_2_0_we0 <= ap_const_logic_1;
        else 
            filter_buff_0_2_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    filter_buff_0_2_1_address0 <= zext_ln128_fu_566_p1(3 - 1 downto 0);

    filter_buff_0_2_1_ce0_assign_proc : process(wgt_TVALID, ap_CS_fsm_state2, icmp_ln113_fu_526_p2)
    begin
        if ((not(((wgt_TVALID = ap_const_logic_0) and (icmp_ln113_fu_526_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            filter_buff_0_2_1_ce0 <= ap_const_logic_1;
        else 
            filter_buff_0_2_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    filter_buff_0_2_1_d0 <= bitcast_ln126_fu_720_p1;

    filter_buff_0_2_1_we0_assign_proc : process(wgt_TVALID, ap_CS_fsm_state2, icmp_ln113_fu_526_p2, select_ln128_fu_544_p3)
    begin
        if ((not(((wgt_TVALID = ap_const_logic_0) and (icmp_ln113_fu_526_p2 = ap_const_lv1_0))) and (select_ln128_fu_544_p3 = ap_const_lv2_0) and (icmp_ln113_fu_526_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            filter_buff_0_2_1_we0 <= ap_const_logic_1;
        else 
            filter_buff_0_2_1_we0 <= ap_const_logic_0;
        end if; 
    end process;

    filter_buff_0_2_2_address0 <= zext_ln128_fu_566_p1(3 - 1 downto 0);

    filter_buff_0_2_2_ce0_assign_proc : process(wgt_TVALID, ap_CS_fsm_state2, icmp_ln113_fu_526_p2)
    begin
        if ((not(((wgt_TVALID = ap_const_logic_0) and (icmp_ln113_fu_526_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            filter_buff_0_2_2_ce0 <= ap_const_logic_1;
        else 
            filter_buff_0_2_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    filter_buff_0_2_2_d0 <= bitcast_ln127_fu_737_p1;

    filter_buff_0_2_2_we0_assign_proc : process(wgt_TVALID, ap_CS_fsm_state2, icmp_ln113_fu_526_p2, select_ln128_fu_544_p3)
    begin
        if ((not(((wgt_TVALID = ap_const_logic_0) and (icmp_ln113_fu_526_p2 = ap_const_lv1_0))) and (select_ln128_fu_544_p3 = ap_const_lv2_0) and (icmp_ln113_fu_526_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            filter_buff_0_2_2_we0 <= ap_const_logic_1;
        else 
            filter_buff_0_2_2_we0 <= ap_const_logic_0;
        end if; 
    end process;

    filter_buff_1_0_0_address0 <= zext_ln128_fu_566_p1(3 - 1 downto 0);

    filter_buff_1_0_0_ce0_assign_proc : process(wgt_TVALID, ap_CS_fsm_state2, icmp_ln113_fu_526_p2)
    begin
        if ((not(((wgt_TVALID = ap_const_logic_0) and (icmp_ln113_fu_526_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            filter_buff_1_0_0_ce0 <= ap_const_logic_1;
        else 
            filter_buff_1_0_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    filter_buff_1_0_0_d0 <= bitcast_ln119_fu_601_p1;

    filter_buff_1_0_0_we0_assign_proc : process(wgt_TVALID, ap_CS_fsm_state2, icmp_ln113_fu_526_p2, select_ln128_fu_544_p3)
    begin
        if ((not(((wgt_TVALID = ap_const_logic_0) and (icmp_ln113_fu_526_p2 = ap_const_lv1_0))) and (select_ln128_fu_544_p3 = ap_const_lv2_1) and (icmp_ln113_fu_526_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            filter_buff_1_0_0_we0 <= ap_const_logic_1;
        else 
            filter_buff_1_0_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    filter_buff_1_0_1_address0 <= zext_ln128_fu_566_p1(3 - 1 downto 0);

    filter_buff_1_0_1_ce0_assign_proc : process(wgt_TVALID, ap_CS_fsm_state2, icmp_ln113_fu_526_p2)
    begin
        if ((not(((wgt_TVALID = ap_const_logic_0) and (icmp_ln113_fu_526_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            filter_buff_1_0_1_ce0 <= ap_const_logic_1;
        else 
            filter_buff_1_0_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    filter_buff_1_0_1_d0 <= bitcast_ln120_fu_618_p1;

    filter_buff_1_0_1_we0_assign_proc : process(wgt_TVALID, ap_CS_fsm_state2, icmp_ln113_fu_526_p2, select_ln128_fu_544_p3)
    begin
        if ((not(((wgt_TVALID = ap_const_logic_0) and (icmp_ln113_fu_526_p2 = ap_const_lv1_0))) and (select_ln128_fu_544_p3 = ap_const_lv2_1) and (icmp_ln113_fu_526_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            filter_buff_1_0_1_we0 <= ap_const_logic_1;
        else 
            filter_buff_1_0_1_we0 <= ap_const_logic_0;
        end if; 
    end process;

    filter_buff_1_0_2_address0 <= zext_ln128_fu_566_p1(3 - 1 downto 0);

    filter_buff_1_0_2_ce0_assign_proc : process(wgt_TVALID, ap_CS_fsm_state2, icmp_ln113_fu_526_p2)
    begin
        if ((not(((wgt_TVALID = ap_const_logic_0) and (icmp_ln113_fu_526_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            filter_buff_1_0_2_ce0 <= ap_const_logic_1;
        else 
            filter_buff_1_0_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    filter_buff_1_0_2_d0 <= bitcast_ln121_fu_635_p1;

    filter_buff_1_0_2_we0_assign_proc : process(wgt_TVALID, ap_CS_fsm_state2, icmp_ln113_fu_526_p2, select_ln128_fu_544_p3)
    begin
        if ((not(((wgt_TVALID = ap_const_logic_0) and (icmp_ln113_fu_526_p2 = ap_const_lv1_0))) and (select_ln128_fu_544_p3 = ap_const_lv2_1) and (icmp_ln113_fu_526_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            filter_buff_1_0_2_we0 <= ap_const_logic_1;
        else 
            filter_buff_1_0_2_we0 <= ap_const_logic_0;
        end if; 
    end process;

    filter_buff_1_1_0_address0 <= zext_ln128_fu_566_p1(3 - 1 downto 0);

    filter_buff_1_1_0_ce0_assign_proc : process(wgt_TVALID, ap_CS_fsm_state2, icmp_ln113_fu_526_p2)
    begin
        if ((not(((wgt_TVALID = ap_const_logic_0) and (icmp_ln113_fu_526_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            filter_buff_1_1_0_ce0 <= ap_const_logic_1;
        else 
            filter_buff_1_1_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    filter_buff_1_1_0_d0 <= bitcast_ln122_fu_652_p1;

    filter_buff_1_1_0_we0_assign_proc : process(wgt_TVALID, ap_CS_fsm_state2, icmp_ln113_fu_526_p2, select_ln128_fu_544_p3)
    begin
        if ((not(((wgt_TVALID = ap_const_logic_0) and (icmp_ln113_fu_526_p2 = ap_const_lv1_0))) and (select_ln128_fu_544_p3 = ap_const_lv2_1) and (icmp_ln113_fu_526_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            filter_buff_1_1_0_we0 <= ap_const_logic_1;
        else 
            filter_buff_1_1_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    filter_buff_1_1_1_address0 <= zext_ln128_fu_566_p1(3 - 1 downto 0);

    filter_buff_1_1_1_ce0_assign_proc : process(wgt_TVALID, ap_CS_fsm_state2, icmp_ln113_fu_526_p2)
    begin
        if ((not(((wgt_TVALID = ap_const_logic_0) and (icmp_ln113_fu_526_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            filter_buff_1_1_1_ce0 <= ap_const_logic_1;
        else 
            filter_buff_1_1_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    filter_buff_1_1_1_d0 <= bitcast_ln123_fu_669_p1;

    filter_buff_1_1_1_we0_assign_proc : process(wgt_TVALID, ap_CS_fsm_state2, icmp_ln113_fu_526_p2, select_ln128_fu_544_p3)
    begin
        if ((not(((wgt_TVALID = ap_const_logic_0) and (icmp_ln113_fu_526_p2 = ap_const_lv1_0))) and (select_ln128_fu_544_p3 = ap_const_lv2_1) and (icmp_ln113_fu_526_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            filter_buff_1_1_1_we0 <= ap_const_logic_1;
        else 
            filter_buff_1_1_1_we0 <= ap_const_logic_0;
        end if; 
    end process;

    filter_buff_1_1_2_address0 <= zext_ln128_fu_566_p1(3 - 1 downto 0);

    filter_buff_1_1_2_ce0_assign_proc : process(wgt_TVALID, ap_CS_fsm_state2, icmp_ln113_fu_526_p2)
    begin
        if ((not(((wgt_TVALID = ap_const_logic_0) and (icmp_ln113_fu_526_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            filter_buff_1_1_2_ce0 <= ap_const_logic_1;
        else 
            filter_buff_1_1_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    filter_buff_1_1_2_d0 <= bitcast_ln124_fu_686_p1;

    filter_buff_1_1_2_we0_assign_proc : process(wgt_TVALID, ap_CS_fsm_state2, icmp_ln113_fu_526_p2, select_ln128_fu_544_p3)
    begin
        if ((not(((wgt_TVALID = ap_const_logic_0) and (icmp_ln113_fu_526_p2 = ap_const_lv1_0))) and (select_ln128_fu_544_p3 = ap_const_lv2_1) and (icmp_ln113_fu_526_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            filter_buff_1_1_2_we0 <= ap_const_logic_1;
        else 
            filter_buff_1_1_2_we0 <= ap_const_logic_0;
        end if; 
    end process;

    filter_buff_1_2_0_address0 <= zext_ln128_fu_566_p1(3 - 1 downto 0);

    filter_buff_1_2_0_ce0_assign_proc : process(wgt_TVALID, ap_CS_fsm_state2, icmp_ln113_fu_526_p2)
    begin
        if ((not(((wgt_TVALID = ap_const_logic_0) and (icmp_ln113_fu_526_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            filter_buff_1_2_0_ce0 <= ap_const_logic_1;
        else 
            filter_buff_1_2_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    filter_buff_1_2_0_d0 <= bitcast_ln125_fu_703_p1;

    filter_buff_1_2_0_we0_assign_proc : process(wgt_TVALID, ap_CS_fsm_state2, icmp_ln113_fu_526_p2, select_ln128_fu_544_p3)
    begin
        if ((not(((wgt_TVALID = ap_const_logic_0) and (icmp_ln113_fu_526_p2 = ap_const_lv1_0))) and (select_ln128_fu_544_p3 = ap_const_lv2_1) and (icmp_ln113_fu_526_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            filter_buff_1_2_0_we0 <= ap_const_logic_1;
        else 
            filter_buff_1_2_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    filter_buff_1_2_1_address0 <= zext_ln128_fu_566_p1(3 - 1 downto 0);

    filter_buff_1_2_1_ce0_assign_proc : process(wgt_TVALID, ap_CS_fsm_state2, icmp_ln113_fu_526_p2)
    begin
        if ((not(((wgt_TVALID = ap_const_logic_0) and (icmp_ln113_fu_526_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            filter_buff_1_2_1_ce0 <= ap_const_logic_1;
        else 
            filter_buff_1_2_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    filter_buff_1_2_1_d0 <= bitcast_ln126_fu_720_p1;

    filter_buff_1_2_1_we0_assign_proc : process(wgt_TVALID, ap_CS_fsm_state2, icmp_ln113_fu_526_p2, select_ln128_fu_544_p3)
    begin
        if ((not(((wgt_TVALID = ap_const_logic_0) and (icmp_ln113_fu_526_p2 = ap_const_lv1_0))) and (select_ln128_fu_544_p3 = ap_const_lv2_1) and (icmp_ln113_fu_526_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            filter_buff_1_2_1_we0 <= ap_const_logic_1;
        else 
            filter_buff_1_2_1_we0 <= ap_const_logic_0;
        end if; 
    end process;

    filter_buff_1_2_2_address0 <= zext_ln128_fu_566_p1(3 - 1 downto 0);

    filter_buff_1_2_2_ce0_assign_proc : process(wgt_TVALID, ap_CS_fsm_state2, icmp_ln113_fu_526_p2)
    begin
        if ((not(((wgt_TVALID = ap_const_logic_0) and (icmp_ln113_fu_526_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            filter_buff_1_2_2_ce0 <= ap_const_logic_1;
        else 
            filter_buff_1_2_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    filter_buff_1_2_2_d0 <= bitcast_ln127_fu_737_p1;

    filter_buff_1_2_2_we0_assign_proc : process(wgt_TVALID, ap_CS_fsm_state2, icmp_ln113_fu_526_p2, select_ln128_fu_544_p3)
    begin
        if ((not(((wgt_TVALID = ap_const_logic_0) and (icmp_ln113_fu_526_p2 = ap_const_lv1_0))) and (select_ln128_fu_544_p3 = ap_const_lv2_1) and (icmp_ln113_fu_526_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            filter_buff_1_2_2_we0 <= ap_const_logic_1;
        else 
            filter_buff_1_2_2_we0 <= ap_const_logic_0;
        end if; 
    end process;

    filter_buff_2_0_0_address0 <= zext_ln128_fu_566_p1(3 - 1 downto 0);

    filter_buff_2_0_0_ce0_assign_proc : process(wgt_TVALID, ap_CS_fsm_state2, icmp_ln113_fu_526_p2)
    begin
        if ((not(((wgt_TVALID = ap_const_logic_0) and (icmp_ln113_fu_526_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            filter_buff_2_0_0_ce0 <= ap_const_logic_1;
        else 
            filter_buff_2_0_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    filter_buff_2_0_0_d0 <= bitcast_ln119_fu_601_p1;

    filter_buff_2_0_0_we0_assign_proc : process(wgt_TVALID, ap_CS_fsm_state2, icmp_ln113_fu_526_p2, select_ln128_fu_544_p3)
    begin
        if ((not((select_ln128_fu_544_p3 = ap_const_lv2_0)) and not((select_ln128_fu_544_p3 = ap_const_lv2_1)) and not(((wgt_TVALID = ap_const_logic_0) and (icmp_ln113_fu_526_p2 = ap_const_lv1_0))) and (icmp_ln113_fu_526_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            filter_buff_2_0_0_we0 <= ap_const_logic_1;
        else 
            filter_buff_2_0_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    filter_buff_2_0_1_address0 <= zext_ln128_fu_566_p1(3 - 1 downto 0);

    filter_buff_2_0_1_ce0_assign_proc : process(wgt_TVALID, ap_CS_fsm_state2, icmp_ln113_fu_526_p2)
    begin
        if ((not(((wgt_TVALID = ap_const_logic_0) and (icmp_ln113_fu_526_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            filter_buff_2_0_1_ce0 <= ap_const_logic_1;
        else 
            filter_buff_2_0_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    filter_buff_2_0_1_d0 <= bitcast_ln120_fu_618_p1;

    filter_buff_2_0_1_we0_assign_proc : process(wgt_TVALID, ap_CS_fsm_state2, icmp_ln113_fu_526_p2, select_ln128_fu_544_p3)
    begin
        if ((not((select_ln128_fu_544_p3 = ap_const_lv2_0)) and not((select_ln128_fu_544_p3 = ap_const_lv2_1)) and not(((wgt_TVALID = ap_const_logic_0) and (icmp_ln113_fu_526_p2 = ap_const_lv1_0))) and (icmp_ln113_fu_526_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            filter_buff_2_0_1_we0 <= ap_const_logic_1;
        else 
            filter_buff_2_0_1_we0 <= ap_const_logic_0;
        end if; 
    end process;

    filter_buff_2_0_2_address0 <= zext_ln128_fu_566_p1(3 - 1 downto 0);

    filter_buff_2_0_2_ce0_assign_proc : process(wgt_TVALID, ap_CS_fsm_state2, icmp_ln113_fu_526_p2)
    begin
        if ((not(((wgt_TVALID = ap_const_logic_0) and (icmp_ln113_fu_526_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            filter_buff_2_0_2_ce0 <= ap_const_logic_1;
        else 
            filter_buff_2_0_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    filter_buff_2_0_2_d0 <= bitcast_ln121_fu_635_p1;

    filter_buff_2_0_2_we0_assign_proc : process(wgt_TVALID, ap_CS_fsm_state2, icmp_ln113_fu_526_p2, select_ln128_fu_544_p3)
    begin
        if ((not((select_ln128_fu_544_p3 = ap_const_lv2_0)) and not((select_ln128_fu_544_p3 = ap_const_lv2_1)) and not(((wgt_TVALID = ap_const_logic_0) and (icmp_ln113_fu_526_p2 = ap_const_lv1_0))) and (icmp_ln113_fu_526_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            filter_buff_2_0_2_we0 <= ap_const_logic_1;
        else 
            filter_buff_2_0_2_we0 <= ap_const_logic_0;
        end if; 
    end process;

    filter_buff_2_1_0_address0 <= zext_ln128_fu_566_p1(3 - 1 downto 0);

    filter_buff_2_1_0_ce0_assign_proc : process(wgt_TVALID, ap_CS_fsm_state2, icmp_ln113_fu_526_p2)
    begin
        if ((not(((wgt_TVALID = ap_const_logic_0) and (icmp_ln113_fu_526_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            filter_buff_2_1_0_ce0 <= ap_const_logic_1;
        else 
            filter_buff_2_1_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    filter_buff_2_1_0_d0 <= bitcast_ln122_fu_652_p1;

    filter_buff_2_1_0_we0_assign_proc : process(wgt_TVALID, ap_CS_fsm_state2, icmp_ln113_fu_526_p2, select_ln128_fu_544_p3)
    begin
        if ((not((select_ln128_fu_544_p3 = ap_const_lv2_0)) and not((select_ln128_fu_544_p3 = ap_const_lv2_1)) and not(((wgt_TVALID = ap_const_logic_0) and (icmp_ln113_fu_526_p2 = ap_const_lv1_0))) and (icmp_ln113_fu_526_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            filter_buff_2_1_0_we0 <= ap_const_logic_1;
        else 
            filter_buff_2_1_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    filter_buff_2_1_1_address0 <= zext_ln128_fu_566_p1(3 - 1 downto 0);

    filter_buff_2_1_1_ce0_assign_proc : process(wgt_TVALID, ap_CS_fsm_state2, icmp_ln113_fu_526_p2)
    begin
        if ((not(((wgt_TVALID = ap_const_logic_0) and (icmp_ln113_fu_526_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            filter_buff_2_1_1_ce0 <= ap_const_logic_1;
        else 
            filter_buff_2_1_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    filter_buff_2_1_1_d0 <= bitcast_ln123_fu_669_p1;

    filter_buff_2_1_1_we0_assign_proc : process(wgt_TVALID, ap_CS_fsm_state2, icmp_ln113_fu_526_p2, select_ln128_fu_544_p3)
    begin
        if ((not((select_ln128_fu_544_p3 = ap_const_lv2_0)) and not((select_ln128_fu_544_p3 = ap_const_lv2_1)) and not(((wgt_TVALID = ap_const_logic_0) and (icmp_ln113_fu_526_p2 = ap_const_lv1_0))) and (icmp_ln113_fu_526_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            filter_buff_2_1_1_we0 <= ap_const_logic_1;
        else 
            filter_buff_2_1_1_we0 <= ap_const_logic_0;
        end if; 
    end process;

    filter_buff_2_1_2_address0 <= zext_ln128_fu_566_p1(3 - 1 downto 0);

    filter_buff_2_1_2_ce0_assign_proc : process(wgt_TVALID, ap_CS_fsm_state2, icmp_ln113_fu_526_p2)
    begin
        if ((not(((wgt_TVALID = ap_const_logic_0) and (icmp_ln113_fu_526_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            filter_buff_2_1_2_ce0 <= ap_const_logic_1;
        else 
            filter_buff_2_1_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    filter_buff_2_1_2_d0 <= bitcast_ln124_fu_686_p1;

    filter_buff_2_1_2_we0_assign_proc : process(wgt_TVALID, ap_CS_fsm_state2, icmp_ln113_fu_526_p2, select_ln128_fu_544_p3)
    begin
        if ((not((select_ln128_fu_544_p3 = ap_const_lv2_0)) and not((select_ln128_fu_544_p3 = ap_const_lv2_1)) and not(((wgt_TVALID = ap_const_logic_0) and (icmp_ln113_fu_526_p2 = ap_const_lv1_0))) and (icmp_ln113_fu_526_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            filter_buff_2_1_2_we0 <= ap_const_logic_1;
        else 
            filter_buff_2_1_2_we0 <= ap_const_logic_0;
        end if; 
    end process;

    filter_buff_2_2_0_address0 <= zext_ln128_fu_566_p1(3 - 1 downto 0);

    filter_buff_2_2_0_ce0_assign_proc : process(wgt_TVALID, ap_CS_fsm_state2, icmp_ln113_fu_526_p2)
    begin
        if ((not(((wgt_TVALID = ap_const_logic_0) and (icmp_ln113_fu_526_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            filter_buff_2_2_0_ce0 <= ap_const_logic_1;
        else 
            filter_buff_2_2_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    filter_buff_2_2_0_d0 <= bitcast_ln125_fu_703_p1;

    filter_buff_2_2_0_we0_assign_proc : process(wgt_TVALID, ap_CS_fsm_state2, icmp_ln113_fu_526_p2, select_ln128_fu_544_p3)
    begin
        if ((not((select_ln128_fu_544_p3 = ap_const_lv2_0)) and not((select_ln128_fu_544_p3 = ap_const_lv2_1)) and not(((wgt_TVALID = ap_const_logic_0) and (icmp_ln113_fu_526_p2 = ap_const_lv1_0))) and (icmp_ln113_fu_526_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            filter_buff_2_2_0_we0 <= ap_const_logic_1;
        else 
            filter_buff_2_2_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    filter_buff_2_2_1_address0 <= zext_ln128_fu_566_p1(3 - 1 downto 0);

    filter_buff_2_2_1_ce0_assign_proc : process(wgt_TVALID, ap_CS_fsm_state2, icmp_ln113_fu_526_p2)
    begin
        if ((not(((wgt_TVALID = ap_const_logic_0) and (icmp_ln113_fu_526_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            filter_buff_2_2_1_ce0 <= ap_const_logic_1;
        else 
            filter_buff_2_2_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    filter_buff_2_2_1_d0 <= bitcast_ln126_fu_720_p1;

    filter_buff_2_2_1_we0_assign_proc : process(wgt_TVALID, ap_CS_fsm_state2, icmp_ln113_fu_526_p2, select_ln128_fu_544_p3)
    begin
        if ((not((select_ln128_fu_544_p3 = ap_const_lv2_0)) and not((select_ln128_fu_544_p3 = ap_const_lv2_1)) and not(((wgt_TVALID = ap_const_logic_0) and (icmp_ln113_fu_526_p2 = ap_const_lv1_0))) and (icmp_ln113_fu_526_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            filter_buff_2_2_1_we0 <= ap_const_logic_1;
        else 
            filter_buff_2_2_1_we0 <= ap_const_logic_0;
        end if; 
    end process;

    filter_buff_2_2_2_address0 <= zext_ln128_fu_566_p1(3 - 1 downto 0);

    filter_buff_2_2_2_ce0_assign_proc : process(wgt_TVALID, ap_CS_fsm_state2, icmp_ln113_fu_526_p2)
    begin
        if ((not(((wgt_TVALID = ap_const_logic_0) and (icmp_ln113_fu_526_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            filter_buff_2_2_2_ce0 <= ap_const_logic_1;
        else 
            filter_buff_2_2_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    filter_buff_2_2_2_d0 <= bitcast_ln127_fu_737_p1;

    filter_buff_2_2_2_we0_assign_proc : process(wgt_TVALID, ap_CS_fsm_state2, icmp_ln113_fu_526_p2, select_ln128_fu_544_p3)
    begin
        if ((not((select_ln128_fu_544_p3 = ap_const_lv2_0)) and not((select_ln128_fu_544_p3 = ap_const_lv2_1)) and not(((wgt_TVALID = ap_const_logic_0) and (icmp_ln113_fu_526_p2 = ap_const_lv1_0))) and (icmp_ln113_fu_526_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            filter_buff_2_2_2_we0 <= ap_const_logic_1;
        else 
            filter_buff_2_2_2_we0 <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln113_fu_526_p2 <= "1" when (indvar_flatten_reg_493 = ap_const_lv5_12) else "0";
    icmp_ln115_fu_538_p2 <= "1" when (n_0_reg_515 = ap_const_lv2_3) else "0";
    n_fu_744_p2 <= std_logic_vector(unsigned(select_ln128_fu_544_p3) + unsigned(ap_const_lv2_1));
    select_ln128_1_fu_558_p3 <= 
        add_ln113_1_fu_552_p2 when (icmp_ln115_fu_538_p2(0) = '1') else 
        m_0_reg_504;
    select_ln128_fu_544_p3 <= 
        ap_const_lv2_0 when (icmp_ln115_fu_538_p2(0) = '1') else 
        n_0_reg_515;
    trunc_ln119_fu_597_p1 <= wgt_TDATA(32 - 1 downto 0);

    wgt_TDATA_blk_n_assign_proc : process(wgt_TVALID, ap_CS_fsm_state2, icmp_ln113_fu_526_p2)
    begin
        if (((icmp_ln113_fu_526_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            wgt_TDATA_blk_n <= wgt_TVALID;
        else 
            wgt_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    wgt_TREADY_assign_proc : process(wgt_TVALID, ap_CS_fsm_state2, icmp_ln113_fu_526_p2)
    begin
        if ((not(((wgt_TVALID = ap_const_logic_0) and (icmp_ln113_fu_526_p2 = ap_const_lv1_0))) and (icmp_ln113_fu_526_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            wgt_TREADY <= ap_const_logic_1;
        else 
            wgt_TREADY <= ap_const_logic_0;
        end if; 
    end process;

    wgt_f1_load_new6_fu_608_p4 <= wgt_TDATA(63 downto 32);
    wgt_f2_load_new_fu_625_p4 <= wgt_TDATA(95 downto 64);
    wgt_f3_load_new_fu_642_p4 <= wgt_TDATA(127 downto 96);
    wgt_f4_load_new_fu_659_p4 <= wgt_TDATA(159 downto 128);
    wgt_f5_load_new_fu_676_p4 <= wgt_TDATA(191 downto 160);
    wgt_f6_load_new_fu_693_p4 <= wgt_TDATA(223 downto 192);
    wgt_f7_load_new_fu_710_p4 <= wgt_TDATA(255 downto 224);
    wgt_f8_load_new_fu_727_p4 <= wgt_TDATA(287 downto 256);
    zext_ln128_fu_566_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln128_1_fu_558_p3),64));
end behav;
