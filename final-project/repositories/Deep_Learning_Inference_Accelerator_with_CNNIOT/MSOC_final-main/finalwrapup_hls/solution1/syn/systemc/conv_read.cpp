// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "conv_read.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic conv_read::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic conv_read::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<3> conv_read::ap_ST_fsm_state1 = "1";
const sc_lv<3> conv_read::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<3> conv_read::ap_ST_fsm_state4 = "100";
const bool conv_read::ap_const_boolean_1 = true;
const sc_lv<32> conv_read::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> conv_read::ap_const_lv32_1 = "1";
const bool conv_read::ap_const_boolean_0 = false;
const sc_lv<1> conv_read::ap_const_lv1_0 = "0";
const sc_lv<1> conv_read::ap_const_lv1_1 = "1";
const sc_lv<6> conv_read::ap_const_lv6_0 = "000000";
const sc_lv<32> conv_read::ap_const_lv32_2 = "10";
const sc_lv<32> conv_read::ap_const_lv32_38 = "111000";
const sc_lv<6> conv_read::ap_const_lv6_38 = "111000";
const sc_lv<6> conv_read::ap_const_lv6_1 = "1";

conv_read::conv_read(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln199_fu_329_p2);
    sensitive << ( cofm_counter_read );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_01001);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_state3_io );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_state3_io );

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state3_io);
    sensitive << ( cofm_TREADY );
    sensitive << ( icmp_ln199_reg_482 );

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter1);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state2);
    sensitive << ( icmp_ln199_fu_335_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_ap_phi_mux_cofm_counter_1_phi_fu_323_p4);
    sensitive << ( enable_read_read_fu_82_p2 );
    sensitive << ( add_ln199_reg_477 );
    sensitive << ( cofm_counter_1_reg_320 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_ap_return);
    sensitive << ( ap_phi_mux_cofm_counter_1_phi_fu_323_p4 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_return_preg );

    SC_METHOD(thread_bitcast_ln202_fu_367_p1);
    sensitive << ( ofm_buff0_0_q0 );

    SC_METHOD(thread_bitcast_ln203_fu_371_p1);
    sensitive << ( ofm_buff0_1_q0 );

    SC_METHOD(thread_bitcast_ln204_fu_375_p1);
    sensitive << ( ofm_buff0_2_q0 );

    SC_METHOD(thread_bitcast_ln205_fu_379_p1);
    sensitive << ( ofm_buff0_3_q0 );

    SC_METHOD(thread_bitcast_ln206_fu_383_p1);
    sensitive << ( ofm_buff0_4_q0 );

    SC_METHOD(thread_bitcast_ln207_fu_387_p1);
    sensitive << ( ofm_buff0_5_q0 );

    SC_METHOD(thread_bitcast_ln208_fu_391_p1);
    sensitive << ( ofm_buff0_6_q0 );

    SC_METHOD(thread_bitcast_ln209_fu_395_p1);
    sensitive << ( ofm_buff0_7_q0 );

    SC_METHOD(thread_bitcast_ln210_fu_399_p1);
    sensitive << ( ofm_buff0_8_q0 );

    SC_METHOD(thread_bitcast_ln211_fu_403_p1);
    sensitive << ( ofm_buff0_9_q0 );

    SC_METHOD(thread_bitcast_ln212_fu_407_p1);
    sensitive << ( ofm_buff0_10_q0 );

    SC_METHOD(thread_bitcast_ln213_fu_411_p1);
    sensitive << ( ofm_buff0_11_q0 );

    SC_METHOD(thread_bitcast_ln214_fu_415_p1);
    sensitive << ( ofm_buff0_12_q0 );

    SC_METHOD(thread_bitcast_ln215_fu_419_p1);
    sensitive << ( ofm_buff0_13_q0 );

    SC_METHOD(thread_bitcast_ln216_fu_423_p1);
    sensitive << ( ofm_buff0_14_q0 );

    SC_METHOD(thread_bitcast_ln217_fu_427_p1);
    sensitive << ( ofm_buff0_15_q0 );

    SC_METHOD(thread_cofm_TDATA);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln199_reg_482 );
    sensitive << ( ap_block_pp0_stage0_01001 );
    sensitive << ( bitcast_ln217_fu_427_p1 );
    sensitive << ( bitcast_ln216_fu_423_p1 );
    sensitive << ( bitcast_ln215_fu_419_p1 );
    sensitive << ( bitcast_ln214_fu_415_p1 );
    sensitive << ( bitcast_ln213_fu_411_p1 );
    sensitive << ( bitcast_ln212_fu_407_p1 );
    sensitive << ( bitcast_ln211_fu_403_p1 );
    sensitive << ( bitcast_ln210_fu_399_p1 );
    sensitive << ( bitcast_ln209_fu_395_p1 );
    sensitive << ( bitcast_ln208_fu_391_p1 );
    sensitive << ( bitcast_ln207_fu_387_p1 );
    sensitive << ( bitcast_ln206_fu_383_p1 );
    sensitive << ( bitcast_ln205_fu_379_p1 );
    sensitive << ( bitcast_ln204_fu_375_p1 );
    sensitive << ( bitcast_ln203_fu_371_p1 );
    sensitive << ( bitcast_ln202_fu_367_p1 );

    SC_METHOD(thread_cofm_TDATA_blk_n);
    sensitive << ( cofm_TREADY );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln199_reg_482 );

    SC_METHOD(thread_cofm_TVALID);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln199_reg_482 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_enable_read_read_fu_82_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( enable );

    SC_METHOD(thread_icmp_ln199_fu_335_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( j_0_reg_309 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_j_fu_341_p2);
    sensitive << ( j_0_reg_309 );

    SC_METHOD(thread_ofm_buff0_0_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( zext_ln202_fu_347_p1 );

    SC_METHOD(thread_ofm_buff0_0_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_ofm_buff0_10_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( zext_ln202_fu_347_p1 );

    SC_METHOD(thread_ofm_buff0_10_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_ofm_buff0_11_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( zext_ln202_fu_347_p1 );

    SC_METHOD(thread_ofm_buff0_11_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_ofm_buff0_12_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( zext_ln202_fu_347_p1 );

    SC_METHOD(thread_ofm_buff0_12_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_ofm_buff0_13_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( zext_ln202_fu_347_p1 );

    SC_METHOD(thread_ofm_buff0_13_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_ofm_buff0_14_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( zext_ln202_fu_347_p1 );

    SC_METHOD(thread_ofm_buff0_14_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_ofm_buff0_15_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( zext_ln202_fu_347_p1 );

    SC_METHOD(thread_ofm_buff0_15_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_ofm_buff0_1_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( zext_ln202_fu_347_p1 );

    SC_METHOD(thread_ofm_buff0_1_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_ofm_buff0_2_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( zext_ln202_fu_347_p1 );

    SC_METHOD(thread_ofm_buff0_2_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_ofm_buff0_3_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( zext_ln202_fu_347_p1 );

    SC_METHOD(thread_ofm_buff0_3_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_ofm_buff0_4_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( zext_ln202_fu_347_p1 );

    SC_METHOD(thread_ofm_buff0_4_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_ofm_buff0_5_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( zext_ln202_fu_347_p1 );

    SC_METHOD(thread_ofm_buff0_5_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_ofm_buff0_6_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( zext_ln202_fu_347_p1 );

    SC_METHOD(thread_ofm_buff0_6_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_ofm_buff0_7_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( zext_ln202_fu_347_p1 );

    SC_METHOD(thread_ofm_buff0_7_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_ofm_buff0_8_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( zext_ln202_fu_347_p1 );

    SC_METHOD(thread_ofm_buff0_8_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_ofm_buff0_9_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( zext_ln202_fu_347_p1 );

    SC_METHOD(thread_ofm_buff0_9_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_zext_ln202_fu_347_p1);
    sensitive << ( j_0_reg_309 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( enable_read_read_fu_82_p2 );
    sensitive << ( icmp_ln199_fu_335_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_subdone );

    ap_CS_fsm = "001";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_return_preg = "00000000000000000000000000000000";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "conv_read_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, cofm_TDATA, "(port)cofm_TDATA");
    sc_trace(mVcdFile, cofm_TVALID, "(port)cofm_TVALID");
    sc_trace(mVcdFile, cofm_TREADY, "(port)cofm_TREADY");
    sc_trace(mVcdFile, ofm_buff0_0_address0, "(port)ofm_buff0_0_address0");
    sc_trace(mVcdFile, ofm_buff0_0_ce0, "(port)ofm_buff0_0_ce0");
    sc_trace(mVcdFile, ofm_buff0_0_q0, "(port)ofm_buff0_0_q0");
    sc_trace(mVcdFile, ofm_buff0_1_address0, "(port)ofm_buff0_1_address0");
    sc_trace(mVcdFile, ofm_buff0_1_ce0, "(port)ofm_buff0_1_ce0");
    sc_trace(mVcdFile, ofm_buff0_1_q0, "(port)ofm_buff0_1_q0");
    sc_trace(mVcdFile, ofm_buff0_2_address0, "(port)ofm_buff0_2_address0");
    sc_trace(mVcdFile, ofm_buff0_2_ce0, "(port)ofm_buff0_2_ce0");
    sc_trace(mVcdFile, ofm_buff0_2_q0, "(port)ofm_buff0_2_q0");
    sc_trace(mVcdFile, ofm_buff0_3_address0, "(port)ofm_buff0_3_address0");
    sc_trace(mVcdFile, ofm_buff0_3_ce0, "(port)ofm_buff0_3_ce0");
    sc_trace(mVcdFile, ofm_buff0_3_q0, "(port)ofm_buff0_3_q0");
    sc_trace(mVcdFile, ofm_buff0_4_address0, "(port)ofm_buff0_4_address0");
    sc_trace(mVcdFile, ofm_buff0_4_ce0, "(port)ofm_buff0_4_ce0");
    sc_trace(mVcdFile, ofm_buff0_4_q0, "(port)ofm_buff0_4_q0");
    sc_trace(mVcdFile, ofm_buff0_5_address0, "(port)ofm_buff0_5_address0");
    sc_trace(mVcdFile, ofm_buff0_5_ce0, "(port)ofm_buff0_5_ce0");
    sc_trace(mVcdFile, ofm_buff0_5_q0, "(port)ofm_buff0_5_q0");
    sc_trace(mVcdFile, ofm_buff0_6_address0, "(port)ofm_buff0_6_address0");
    sc_trace(mVcdFile, ofm_buff0_6_ce0, "(port)ofm_buff0_6_ce0");
    sc_trace(mVcdFile, ofm_buff0_6_q0, "(port)ofm_buff0_6_q0");
    sc_trace(mVcdFile, ofm_buff0_7_address0, "(port)ofm_buff0_7_address0");
    sc_trace(mVcdFile, ofm_buff0_7_ce0, "(port)ofm_buff0_7_ce0");
    sc_trace(mVcdFile, ofm_buff0_7_q0, "(port)ofm_buff0_7_q0");
    sc_trace(mVcdFile, ofm_buff0_8_address0, "(port)ofm_buff0_8_address0");
    sc_trace(mVcdFile, ofm_buff0_8_ce0, "(port)ofm_buff0_8_ce0");
    sc_trace(mVcdFile, ofm_buff0_8_q0, "(port)ofm_buff0_8_q0");
    sc_trace(mVcdFile, ofm_buff0_9_address0, "(port)ofm_buff0_9_address0");
    sc_trace(mVcdFile, ofm_buff0_9_ce0, "(port)ofm_buff0_9_ce0");
    sc_trace(mVcdFile, ofm_buff0_9_q0, "(port)ofm_buff0_9_q0");
    sc_trace(mVcdFile, ofm_buff0_10_address0, "(port)ofm_buff0_10_address0");
    sc_trace(mVcdFile, ofm_buff0_10_ce0, "(port)ofm_buff0_10_ce0");
    sc_trace(mVcdFile, ofm_buff0_10_q0, "(port)ofm_buff0_10_q0");
    sc_trace(mVcdFile, ofm_buff0_11_address0, "(port)ofm_buff0_11_address0");
    sc_trace(mVcdFile, ofm_buff0_11_ce0, "(port)ofm_buff0_11_ce0");
    sc_trace(mVcdFile, ofm_buff0_11_q0, "(port)ofm_buff0_11_q0");
    sc_trace(mVcdFile, ofm_buff0_12_address0, "(port)ofm_buff0_12_address0");
    sc_trace(mVcdFile, ofm_buff0_12_ce0, "(port)ofm_buff0_12_ce0");
    sc_trace(mVcdFile, ofm_buff0_12_q0, "(port)ofm_buff0_12_q0");
    sc_trace(mVcdFile, ofm_buff0_13_address0, "(port)ofm_buff0_13_address0");
    sc_trace(mVcdFile, ofm_buff0_13_ce0, "(port)ofm_buff0_13_ce0");
    sc_trace(mVcdFile, ofm_buff0_13_q0, "(port)ofm_buff0_13_q0");
    sc_trace(mVcdFile, ofm_buff0_14_address0, "(port)ofm_buff0_14_address0");
    sc_trace(mVcdFile, ofm_buff0_14_ce0, "(port)ofm_buff0_14_ce0");
    sc_trace(mVcdFile, ofm_buff0_14_q0, "(port)ofm_buff0_14_q0");
    sc_trace(mVcdFile, ofm_buff0_15_address0, "(port)ofm_buff0_15_address0");
    sc_trace(mVcdFile, ofm_buff0_15_ce0, "(port)ofm_buff0_15_ce0");
    sc_trace(mVcdFile, ofm_buff0_15_q0, "(port)ofm_buff0_15_q0");
    sc_trace(mVcdFile, cofm_counter_read, "(port)cofm_counter_read");
    sc_trace(mVcdFile, enable, "(port)enable");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, cofm_TDATA_blk_n, "cofm_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, icmp_ln199_reg_482, "icmp_ln199_reg_482");
    sc_trace(mVcdFile, j_0_reg_309, "j_0_reg_309");
    sc_trace(mVcdFile, enable_read_read_fu_82_p2, "enable_read_read_fu_82_p2");
    sc_trace(mVcdFile, add_ln199_fu_329_p2, "add_ln199_fu_329_p2");
    sc_trace(mVcdFile, add_ln199_reg_477, "add_ln199_reg_477");
    sc_trace(mVcdFile, icmp_ln199_fu_335_p2, "icmp_ln199_fu_335_p2");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter1, "ap_block_state3_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state3_io, "ap_block_state3_io");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, j_fu_341_p2, "j_fu_341_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state2, "ap_condition_pp0_exit_iter0_state2");
    sc_trace(mVcdFile, ap_phi_mux_cofm_counter_1_phi_fu_323_p4, "ap_phi_mux_cofm_counter_1_phi_fu_323_p4");
    sc_trace(mVcdFile, cofm_counter_1_reg_320, "cofm_counter_1_reg_320");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, zext_ln202_fu_347_p1, "zext_ln202_fu_347_p1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, bitcast_ln217_fu_427_p1, "bitcast_ln217_fu_427_p1");
    sc_trace(mVcdFile, bitcast_ln216_fu_423_p1, "bitcast_ln216_fu_423_p1");
    sc_trace(mVcdFile, bitcast_ln215_fu_419_p1, "bitcast_ln215_fu_419_p1");
    sc_trace(mVcdFile, bitcast_ln214_fu_415_p1, "bitcast_ln214_fu_415_p1");
    sc_trace(mVcdFile, bitcast_ln213_fu_411_p1, "bitcast_ln213_fu_411_p1");
    sc_trace(mVcdFile, bitcast_ln212_fu_407_p1, "bitcast_ln212_fu_407_p1");
    sc_trace(mVcdFile, bitcast_ln211_fu_403_p1, "bitcast_ln211_fu_403_p1");
    sc_trace(mVcdFile, bitcast_ln210_fu_399_p1, "bitcast_ln210_fu_399_p1");
    sc_trace(mVcdFile, bitcast_ln209_fu_395_p1, "bitcast_ln209_fu_395_p1");
    sc_trace(mVcdFile, bitcast_ln208_fu_391_p1, "bitcast_ln208_fu_391_p1");
    sc_trace(mVcdFile, bitcast_ln207_fu_387_p1, "bitcast_ln207_fu_387_p1");
    sc_trace(mVcdFile, bitcast_ln206_fu_383_p1, "bitcast_ln206_fu_383_p1");
    sc_trace(mVcdFile, bitcast_ln205_fu_379_p1, "bitcast_ln205_fu_379_p1");
    sc_trace(mVcdFile, bitcast_ln204_fu_375_p1, "bitcast_ln204_fu_375_p1");
    sc_trace(mVcdFile, bitcast_ln203_fu_371_p1, "bitcast_ln203_fu_371_p1");
    sc_trace(mVcdFile, bitcast_ln202_fu_367_p1, "bitcast_ln202_fu_367_p1");
    sc_trace(mVcdFile, ap_return_preg, "ap_return_preg");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
}

conv_read::~conv_read() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void conv_read::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
                    esl_seteq<1,1,1>(enable_read_read_fu_82_p2.read(), ap_const_lv1_1))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state2.read() ^ ap_const_logic_1);
        } else if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
                    esl_seteq<1,1,1>(enable_read_read_fu_82_p2.read(), ap_const_lv1_1))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_preg = ap_const_lv32_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
            ap_return_preg = ap_phi_mux_cofm_counter_1_phi_fu_323_p4.read();
        }
    }
    if ((esl_seteq<1,1,1>(enable_read_read_fu_82_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        cofm_counter_1_reg_320 = add_ln199_reg_477.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, enable_read_read_fu_82_p2.read()))) {
        cofm_counter_1_reg_320 = cofm_counter_read.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(enable_read_read_fu_82_p2.read(), ap_const_lv1_1))) {
        j_0_reg_309 = ap_const_lv6_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln199_fu_335_p2.read()))) {
        j_0_reg_309 = j_fu_341_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(enable_read_read_fu_82_p2.read(), ap_const_lv1_1))) {
        add_ln199_reg_477 = add_ln199_fu_329_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln199_reg_482 = icmp_ln199_fu_335_p2.read();
    }
}

void conv_read::thread_add_ln199_fu_329_p2() {
    add_ln199_fu_329_p2 = (!cofm_counter_read.read().is_01() || !ap_const_lv32_38.is_01())? sc_lv<32>(): (sc_biguint<32>(cofm_counter_read.read()) + sc_biguint<32>(ap_const_lv32_38));
}

void conv_read::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void conv_read::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void conv_read::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[2];
}

void conv_read::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void conv_read::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void conv_read::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()));
}

void conv_read::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read()));
}

void conv_read::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void conv_read::thread_ap_block_state3_io() {
    ap_block_state3_io = (esl_seteq<1,1,1>(icmp_ln199_reg_482.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, cofm_TREADY.read()));
}

void conv_read::thread_ap_block_state3_pp0_stage0_iter1() {
    ap_block_state3_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void conv_read::thread_ap_condition_pp0_exit_iter0_state2() {
    if (esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln199_fu_335_p2.read())) {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_0;
    }
}

void conv_read::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void conv_read::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void conv_read::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void conv_read::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void conv_read::thread_ap_phi_mux_cofm_counter_1_phi_fu_323_p4() {
    if ((esl_seteq<1,1,1>(enable_read_read_fu_82_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        ap_phi_mux_cofm_counter_1_phi_fu_323_p4 = add_ln199_reg_477.read();
    } else {
        ap_phi_mux_cofm_counter_1_phi_fu_323_p4 = cofm_counter_1_reg_320.read();
    }
}

void conv_read::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void conv_read::thread_ap_return() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        ap_return = ap_phi_mux_cofm_counter_1_phi_fu_323_p4.read();
    } else {
        ap_return = ap_return_preg.read();
    }
}

void conv_read::thread_bitcast_ln202_fu_367_p1() {
    bitcast_ln202_fu_367_p1 = ofm_buff0_0_q0.read();
}

void conv_read::thread_bitcast_ln203_fu_371_p1() {
    bitcast_ln203_fu_371_p1 = ofm_buff0_1_q0.read();
}

void conv_read::thread_bitcast_ln204_fu_375_p1() {
    bitcast_ln204_fu_375_p1 = ofm_buff0_2_q0.read();
}

void conv_read::thread_bitcast_ln205_fu_379_p1() {
    bitcast_ln205_fu_379_p1 = ofm_buff0_3_q0.read();
}

void conv_read::thread_bitcast_ln206_fu_383_p1() {
    bitcast_ln206_fu_383_p1 = ofm_buff0_4_q0.read();
}

void conv_read::thread_bitcast_ln207_fu_387_p1() {
    bitcast_ln207_fu_387_p1 = ofm_buff0_5_q0.read();
}

void conv_read::thread_bitcast_ln208_fu_391_p1() {
    bitcast_ln208_fu_391_p1 = ofm_buff0_6_q0.read();
}

void conv_read::thread_bitcast_ln209_fu_395_p1() {
    bitcast_ln209_fu_395_p1 = ofm_buff0_7_q0.read();
}

void conv_read::thread_bitcast_ln210_fu_399_p1() {
    bitcast_ln210_fu_399_p1 = ofm_buff0_8_q0.read();
}

void conv_read::thread_bitcast_ln211_fu_403_p1() {
    bitcast_ln211_fu_403_p1 = ofm_buff0_9_q0.read();
}

void conv_read::thread_bitcast_ln212_fu_407_p1() {
    bitcast_ln212_fu_407_p1 = ofm_buff0_10_q0.read();
}

void conv_read::thread_bitcast_ln213_fu_411_p1() {
    bitcast_ln213_fu_411_p1 = ofm_buff0_11_q0.read();
}

void conv_read::thread_bitcast_ln214_fu_415_p1() {
    bitcast_ln214_fu_415_p1 = ofm_buff0_12_q0.read();
}

void conv_read::thread_bitcast_ln215_fu_419_p1() {
    bitcast_ln215_fu_419_p1 = ofm_buff0_13_q0.read();
}

void conv_read::thread_bitcast_ln216_fu_423_p1() {
    bitcast_ln216_fu_423_p1 = ofm_buff0_14_q0.read();
}

void conv_read::thread_bitcast_ln217_fu_427_p1() {
    bitcast_ln217_fu_427_p1 = ofm_buff0_15_q0.read();
}

void conv_read::thread_cofm_TDATA() {
    cofm_TDATA = esl_concat<480,32>(esl_concat<448,32>(esl_concat<416,32>(esl_concat<384,32>(esl_concat<352,32>(esl_concat<320,32>(esl_concat<288,32>(esl_concat<256,32>(esl_concat<224,32>(esl_concat<192,32>(esl_concat<160,32>(esl_concat<128,32>(esl_concat<96,32>(esl_concat<64,32>(esl_concat<32,32>(bitcast_ln217_fu_427_p1.read(), bitcast_ln216_fu_423_p1.read()), bitcast_ln215_fu_419_p1.read()), bitcast_ln214_fu_415_p1.read()), bitcast_ln213_fu_411_p1.read()), bitcast_ln212_fu_407_p1.read()), bitcast_ln211_fu_403_p1.read()), bitcast_ln210_fu_399_p1.read()), bitcast_ln209_fu_395_p1.read()), bitcast_ln208_fu_391_p1.read()), bitcast_ln207_fu_387_p1.read()), bitcast_ln206_fu_383_p1.read()), bitcast_ln205_fu_379_p1.read()), bitcast_ln204_fu_375_p1.read()), bitcast_ln203_fu_371_p1.read()), bitcast_ln202_fu_367_p1.read());
}

void conv_read::thread_cofm_TDATA_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln199_reg_482.read(), ap_const_lv1_0))) {
        cofm_TDATA_blk_n = cofm_TREADY.read();
    } else {
        cofm_TDATA_blk_n = ap_const_logic_1;
    }
}

void conv_read::thread_cofm_TVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(icmp_ln199_reg_482.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        cofm_TVALID = ap_const_logic_1;
    } else {
        cofm_TVALID = ap_const_logic_0;
    }
}

void conv_read::thread_enable_read_read_fu_82_p2() {
    enable_read_read_fu_82_p2 =  (sc_lv<1>) (enable.read());
}

void conv_read::thread_icmp_ln199_fu_335_p2() {
    icmp_ln199_fu_335_p2 = (!j_0_reg_309.read().is_01() || !ap_const_lv6_38.is_01())? sc_lv<1>(): sc_lv<1>(j_0_reg_309.read() == ap_const_lv6_38);
}

void conv_read::thread_j_fu_341_p2() {
    j_fu_341_p2 = (!j_0_reg_309.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(j_0_reg_309.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void conv_read::thread_ofm_buff0_0_address0() {
    ofm_buff0_0_address0 =  (sc_lv<6>) (zext_ln202_fu_347_p1.read());
}

void conv_read::thread_ofm_buff0_0_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        ofm_buff0_0_ce0 = ap_const_logic_1;
    } else {
        ofm_buff0_0_ce0 = ap_const_logic_0;
    }
}

void conv_read::thread_ofm_buff0_10_address0() {
    ofm_buff0_10_address0 =  (sc_lv<6>) (zext_ln202_fu_347_p1.read());
}

void conv_read::thread_ofm_buff0_10_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        ofm_buff0_10_ce0 = ap_const_logic_1;
    } else {
        ofm_buff0_10_ce0 = ap_const_logic_0;
    }
}

void conv_read::thread_ofm_buff0_11_address0() {
    ofm_buff0_11_address0 =  (sc_lv<6>) (zext_ln202_fu_347_p1.read());
}

void conv_read::thread_ofm_buff0_11_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        ofm_buff0_11_ce0 = ap_const_logic_1;
    } else {
        ofm_buff0_11_ce0 = ap_const_logic_0;
    }
}

void conv_read::thread_ofm_buff0_12_address0() {
    ofm_buff0_12_address0 =  (sc_lv<6>) (zext_ln202_fu_347_p1.read());
}

void conv_read::thread_ofm_buff0_12_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        ofm_buff0_12_ce0 = ap_const_logic_1;
    } else {
        ofm_buff0_12_ce0 = ap_const_logic_0;
    }
}

void conv_read::thread_ofm_buff0_13_address0() {
    ofm_buff0_13_address0 =  (sc_lv<6>) (zext_ln202_fu_347_p1.read());
}

void conv_read::thread_ofm_buff0_13_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        ofm_buff0_13_ce0 = ap_const_logic_1;
    } else {
        ofm_buff0_13_ce0 = ap_const_logic_0;
    }
}

void conv_read::thread_ofm_buff0_14_address0() {
    ofm_buff0_14_address0 =  (sc_lv<6>) (zext_ln202_fu_347_p1.read());
}

void conv_read::thread_ofm_buff0_14_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        ofm_buff0_14_ce0 = ap_const_logic_1;
    } else {
        ofm_buff0_14_ce0 = ap_const_logic_0;
    }
}

void conv_read::thread_ofm_buff0_15_address0() {
    ofm_buff0_15_address0 =  (sc_lv<6>) (zext_ln202_fu_347_p1.read());
}

void conv_read::thread_ofm_buff0_15_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        ofm_buff0_15_ce0 = ap_const_logic_1;
    } else {
        ofm_buff0_15_ce0 = ap_const_logic_0;
    }
}

void conv_read::thread_ofm_buff0_1_address0() {
    ofm_buff0_1_address0 =  (sc_lv<6>) (zext_ln202_fu_347_p1.read());
}

void conv_read::thread_ofm_buff0_1_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        ofm_buff0_1_ce0 = ap_const_logic_1;
    } else {
        ofm_buff0_1_ce0 = ap_const_logic_0;
    }
}

void conv_read::thread_ofm_buff0_2_address0() {
    ofm_buff0_2_address0 =  (sc_lv<6>) (zext_ln202_fu_347_p1.read());
}

void conv_read::thread_ofm_buff0_2_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        ofm_buff0_2_ce0 = ap_const_logic_1;
    } else {
        ofm_buff0_2_ce0 = ap_const_logic_0;
    }
}

void conv_read::thread_ofm_buff0_3_address0() {
    ofm_buff0_3_address0 =  (sc_lv<6>) (zext_ln202_fu_347_p1.read());
}

void conv_read::thread_ofm_buff0_3_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        ofm_buff0_3_ce0 = ap_const_logic_1;
    } else {
        ofm_buff0_3_ce0 = ap_const_logic_0;
    }
}

void conv_read::thread_ofm_buff0_4_address0() {
    ofm_buff0_4_address0 =  (sc_lv<6>) (zext_ln202_fu_347_p1.read());
}

void conv_read::thread_ofm_buff0_4_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        ofm_buff0_4_ce0 = ap_const_logic_1;
    } else {
        ofm_buff0_4_ce0 = ap_const_logic_0;
    }
}

void conv_read::thread_ofm_buff0_5_address0() {
    ofm_buff0_5_address0 =  (sc_lv<6>) (zext_ln202_fu_347_p1.read());
}

void conv_read::thread_ofm_buff0_5_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        ofm_buff0_5_ce0 = ap_const_logic_1;
    } else {
        ofm_buff0_5_ce0 = ap_const_logic_0;
    }
}

void conv_read::thread_ofm_buff0_6_address0() {
    ofm_buff0_6_address0 =  (sc_lv<6>) (zext_ln202_fu_347_p1.read());
}

void conv_read::thread_ofm_buff0_6_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        ofm_buff0_6_ce0 = ap_const_logic_1;
    } else {
        ofm_buff0_6_ce0 = ap_const_logic_0;
    }
}

void conv_read::thread_ofm_buff0_7_address0() {
    ofm_buff0_7_address0 =  (sc_lv<6>) (zext_ln202_fu_347_p1.read());
}

void conv_read::thread_ofm_buff0_7_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        ofm_buff0_7_ce0 = ap_const_logic_1;
    } else {
        ofm_buff0_7_ce0 = ap_const_logic_0;
    }
}

void conv_read::thread_ofm_buff0_8_address0() {
    ofm_buff0_8_address0 =  (sc_lv<6>) (zext_ln202_fu_347_p1.read());
}

void conv_read::thread_ofm_buff0_8_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        ofm_buff0_8_ce0 = ap_const_logic_1;
    } else {
        ofm_buff0_8_ce0 = ap_const_logic_0;
    }
}

void conv_read::thread_ofm_buff0_9_address0() {
    ofm_buff0_9_address0 =  (sc_lv<6>) (zext_ln202_fu_347_p1.read());
}

void conv_read::thread_ofm_buff0_9_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        ofm_buff0_9_ce0 = ap_const_logic_1;
    } else {
        ofm_buff0_9_ce0 = ap_const_logic_0;
    }
}

void conv_read::thread_zext_ln202_fu_347_p1() {
    zext_ln202_fu_347_p1 = esl_zext<64,6>(j_0_reg_309.read());
}

void conv_read::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(enable_read_read_fu_82_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_lv1_0, enable_read_read_fu_82_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln199_fu_335_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln199_fu_335_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm = "XXX";
            break;
    }
}

}

