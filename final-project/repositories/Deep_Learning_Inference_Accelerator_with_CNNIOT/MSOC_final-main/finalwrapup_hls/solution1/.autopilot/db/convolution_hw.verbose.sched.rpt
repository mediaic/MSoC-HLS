

================================================================
== Vivado HLS Report for 'convolution_hw'
================================================================
* Date:           Thu Jan 21 20:27:19 2021

* Version:        2019.2 (Build 2704478 on Wed Nov 06 22:10:23 MST 2019)
* Project:        finalwrapup_hls
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  | 10.00 ns | 8.400 ns |   1.25 ns  |
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+-----------+-----+---------+---------+
    |  Latency (cycles) |  Latency (absolute)  |    Interval   | Pipeline|
    |   min   |   max   |    min   |    max    | min |   max   |   Type  |
    +---------+---------+----------+-----------+-----+---------+---------+
    |      374|  5720551| 3.740 us | 57.206 ms |  374|  5720551|   none  |
    +---------+---------+----------+-----------+-----+---------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+---------+---------+------------+-----------+-----------+------+----------+
        |          |  Latency (cycles) |  Iteration |  Initiation Interval  | Trip |          |
        | Loop Name|   min   |   max   |   Latency  |  achieved |   target  | Count| Pipelined|
        +----------+---------+---------+------------+-----------+-----------+------+----------+
        |- Loop 1  |      112|  5720232| 2 ~ 102147 |          -|          -|    56|    no    |
        +----------+---------+---------+------------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 5
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 5 4 
4 --> 3 
5 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 3.25>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%cifm_counter_8 = alloca i32"   --->   Operation 6 'alloca' 'cifm_counter_8' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%cofm_counter_8 = alloca i32"   --->   Operation 7 'alloca' 'cofm_counter_8' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%ifm_buff0_0 = alloca [58 x float], align 4" [finalwrapup.cpp:604]   --->   Operation 8 'alloca' 'ifm_buff0_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%ifm_buff0_1 = alloca [58 x float], align 4" [finalwrapup.cpp:604]   --->   Operation 9 'alloca' 'ifm_buff0_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%ifm_buff0_2 = alloca [58 x float], align 4" [finalwrapup.cpp:604]   --->   Operation 10 'alloca' 'ifm_buff0_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%ifm_buff0_3 = alloca [58 x float], align 4" [finalwrapup.cpp:604]   --->   Operation 11 'alloca' 'ifm_buff0_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%ifm_buff0_4 = alloca [58 x float], align 4" [finalwrapup.cpp:604]   --->   Operation 12 'alloca' 'ifm_buff0_4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%ifm_buff0_5 = alloca [58 x float], align 4" [finalwrapup.cpp:604]   --->   Operation 13 'alloca' 'ifm_buff0_5' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%ifm_buff0_6 = alloca [58 x float], align 4" [finalwrapup.cpp:604]   --->   Operation 14 'alloca' 'ifm_buff0_6' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%ifm_buff0_7 = alloca [58 x float], align 4" [finalwrapup.cpp:604]   --->   Operation 15 'alloca' 'ifm_buff0_7' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%ifm_buff0_8 = alloca [58 x float], align 4" [finalwrapup.cpp:604]   --->   Operation 16 'alloca' 'ifm_buff0_8' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%ifm_buff0_9 = alloca [58 x float], align 4" [finalwrapup.cpp:604]   --->   Operation 17 'alloca' 'ifm_buff0_9' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%ifm_buff0_10 = alloca [58 x float], align 4" [finalwrapup.cpp:604]   --->   Operation 18 'alloca' 'ifm_buff0_10' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%ifm_buff0_11 = alloca [58 x float], align 4" [finalwrapup.cpp:604]   --->   Operation 19 'alloca' 'ifm_buff0_11' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%ifm_buff0_12 = alloca [58 x float], align 4" [finalwrapup.cpp:604]   --->   Operation 20 'alloca' 'ifm_buff0_12' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%ifm_buff0_13 = alloca [58 x float], align 4" [finalwrapup.cpp:604]   --->   Operation 21 'alloca' 'ifm_buff0_13' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%ifm_buff0_14 = alloca [58 x float], align 4" [finalwrapup.cpp:604]   --->   Operation 22 'alloca' 'ifm_buff0_14' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%ifm_buff0_15 = alloca [58 x float], align 4" [finalwrapup.cpp:604]   --->   Operation 23 'alloca' 'ifm_buff0_15' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%ifm_buff1_0 = alloca [58 x float], align 4" [finalwrapup.cpp:606]   --->   Operation 24 'alloca' 'ifm_buff1_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%ifm_buff1_1 = alloca [58 x float], align 4" [finalwrapup.cpp:606]   --->   Operation 25 'alloca' 'ifm_buff1_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%ifm_buff1_2 = alloca [58 x float], align 4" [finalwrapup.cpp:606]   --->   Operation 26 'alloca' 'ifm_buff1_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%ifm_buff1_3 = alloca [58 x float], align 4" [finalwrapup.cpp:606]   --->   Operation 27 'alloca' 'ifm_buff1_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%ifm_buff1_4 = alloca [58 x float], align 4" [finalwrapup.cpp:606]   --->   Operation 28 'alloca' 'ifm_buff1_4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%ifm_buff1_5 = alloca [58 x float], align 4" [finalwrapup.cpp:606]   --->   Operation 29 'alloca' 'ifm_buff1_5' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%ifm_buff1_6 = alloca [58 x float], align 4" [finalwrapup.cpp:606]   --->   Operation 30 'alloca' 'ifm_buff1_6' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%ifm_buff1_7 = alloca [58 x float], align 4" [finalwrapup.cpp:606]   --->   Operation 31 'alloca' 'ifm_buff1_7' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%ifm_buff1_8 = alloca [58 x float], align 4" [finalwrapup.cpp:606]   --->   Operation 32 'alloca' 'ifm_buff1_8' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%ifm_buff1_9 = alloca [58 x float], align 4" [finalwrapup.cpp:606]   --->   Operation 33 'alloca' 'ifm_buff1_9' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%ifm_buff1_10 = alloca [58 x float], align 4" [finalwrapup.cpp:606]   --->   Operation 34 'alloca' 'ifm_buff1_10' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%ifm_buff1_11 = alloca [58 x float], align 4" [finalwrapup.cpp:606]   --->   Operation 35 'alloca' 'ifm_buff1_11' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%ifm_buff1_12 = alloca [58 x float], align 4" [finalwrapup.cpp:606]   --->   Operation 36 'alloca' 'ifm_buff1_12' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%ifm_buff1_13 = alloca [58 x float], align 4" [finalwrapup.cpp:606]   --->   Operation 37 'alloca' 'ifm_buff1_13' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%ifm_buff1_14 = alloca [58 x float], align 4" [finalwrapup.cpp:606]   --->   Operation 38 'alloca' 'ifm_buff1_14' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "%ifm_buff1_15 = alloca [58 x float], align 4" [finalwrapup.cpp:606]   --->   Operation 39 'alloca' 'ifm_buff1_15' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 40 [1/1] (0.00ns)   --->   "%ifm_buff2_0 = alloca [58 x float], align 4" [finalwrapup.cpp:608]   --->   Operation 40 'alloca' 'ifm_buff2_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 41 [1/1] (0.00ns)   --->   "%ifm_buff2_1 = alloca [58 x float], align 4" [finalwrapup.cpp:608]   --->   Operation 41 'alloca' 'ifm_buff2_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 42 [1/1] (0.00ns)   --->   "%ifm_buff2_2 = alloca [58 x float], align 4" [finalwrapup.cpp:608]   --->   Operation 42 'alloca' 'ifm_buff2_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 43 [1/1] (0.00ns)   --->   "%ifm_buff2_3 = alloca [58 x float], align 4" [finalwrapup.cpp:608]   --->   Operation 43 'alloca' 'ifm_buff2_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 44 [1/1] (0.00ns)   --->   "%ifm_buff2_4 = alloca [58 x float], align 4" [finalwrapup.cpp:608]   --->   Operation 44 'alloca' 'ifm_buff2_4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 45 [1/1] (0.00ns)   --->   "%ifm_buff2_5 = alloca [58 x float], align 4" [finalwrapup.cpp:608]   --->   Operation 45 'alloca' 'ifm_buff2_5' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 46 [1/1] (0.00ns)   --->   "%ifm_buff2_6 = alloca [58 x float], align 4" [finalwrapup.cpp:608]   --->   Operation 46 'alloca' 'ifm_buff2_6' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 47 [1/1] (0.00ns)   --->   "%ifm_buff2_7 = alloca [58 x float], align 4" [finalwrapup.cpp:608]   --->   Operation 47 'alloca' 'ifm_buff2_7' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 48 [1/1] (0.00ns)   --->   "%ifm_buff2_8 = alloca [58 x float], align 4" [finalwrapup.cpp:608]   --->   Operation 48 'alloca' 'ifm_buff2_8' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 49 [1/1] (0.00ns)   --->   "%ifm_buff2_9 = alloca [58 x float], align 4" [finalwrapup.cpp:608]   --->   Operation 49 'alloca' 'ifm_buff2_9' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 50 [1/1] (0.00ns)   --->   "%ifm_buff2_10 = alloca [58 x float], align 4" [finalwrapup.cpp:608]   --->   Operation 50 'alloca' 'ifm_buff2_10' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 51 [1/1] (0.00ns)   --->   "%ifm_buff2_11 = alloca [58 x float], align 4" [finalwrapup.cpp:608]   --->   Operation 51 'alloca' 'ifm_buff2_11' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 52 [1/1] (0.00ns)   --->   "%ifm_buff2_12 = alloca [58 x float], align 4" [finalwrapup.cpp:608]   --->   Operation 52 'alloca' 'ifm_buff2_12' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 53 [1/1] (0.00ns)   --->   "%ifm_buff2_13 = alloca [58 x float], align 4" [finalwrapup.cpp:608]   --->   Operation 53 'alloca' 'ifm_buff2_13' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 54 [1/1] (0.00ns)   --->   "%ifm_buff2_14 = alloca [58 x float], align 4" [finalwrapup.cpp:608]   --->   Operation 54 'alloca' 'ifm_buff2_14' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 55 [1/1] (0.00ns)   --->   "%ifm_buff2_15 = alloca [58 x float], align 4" [finalwrapup.cpp:608]   --->   Operation 55 'alloca' 'ifm_buff2_15' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 56 [1/1] (0.00ns)   --->   "%ifm_buff3_0 = alloca [58 x float], align 4" [finalwrapup.cpp:610]   --->   Operation 56 'alloca' 'ifm_buff3_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 57 [1/1] (0.00ns)   --->   "%ifm_buff3_1 = alloca [58 x float], align 4" [finalwrapup.cpp:610]   --->   Operation 57 'alloca' 'ifm_buff3_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 58 [1/1] (0.00ns)   --->   "%ifm_buff3_2 = alloca [58 x float], align 4" [finalwrapup.cpp:610]   --->   Operation 58 'alloca' 'ifm_buff3_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 59 [1/1] (0.00ns)   --->   "%ifm_buff3_3 = alloca [58 x float], align 4" [finalwrapup.cpp:610]   --->   Operation 59 'alloca' 'ifm_buff3_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 60 [1/1] (0.00ns)   --->   "%ifm_buff3_4 = alloca [58 x float], align 4" [finalwrapup.cpp:610]   --->   Operation 60 'alloca' 'ifm_buff3_4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 61 [1/1] (0.00ns)   --->   "%ifm_buff3_5 = alloca [58 x float], align 4" [finalwrapup.cpp:610]   --->   Operation 61 'alloca' 'ifm_buff3_5' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 62 [1/1] (0.00ns)   --->   "%ifm_buff3_6 = alloca [58 x float], align 4" [finalwrapup.cpp:610]   --->   Operation 62 'alloca' 'ifm_buff3_6' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 63 [1/1] (0.00ns)   --->   "%ifm_buff3_7 = alloca [58 x float], align 4" [finalwrapup.cpp:610]   --->   Operation 63 'alloca' 'ifm_buff3_7' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 64 [1/1] (0.00ns)   --->   "%ifm_buff3_8 = alloca [58 x float], align 4" [finalwrapup.cpp:610]   --->   Operation 64 'alloca' 'ifm_buff3_8' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 65 [1/1] (0.00ns)   --->   "%ifm_buff3_9 = alloca [58 x float], align 4" [finalwrapup.cpp:610]   --->   Operation 65 'alloca' 'ifm_buff3_9' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 66 [1/1] (0.00ns)   --->   "%ifm_buff3_10 = alloca [58 x float], align 4" [finalwrapup.cpp:610]   --->   Operation 66 'alloca' 'ifm_buff3_10' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 67 [1/1] (0.00ns)   --->   "%ifm_buff3_11 = alloca [58 x float], align 4" [finalwrapup.cpp:610]   --->   Operation 67 'alloca' 'ifm_buff3_11' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 68 [1/1] (0.00ns)   --->   "%ifm_buff3_12 = alloca [58 x float], align 4" [finalwrapup.cpp:610]   --->   Operation 68 'alloca' 'ifm_buff3_12' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 69 [1/1] (0.00ns)   --->   "%ifm_buff3_13 = alloca [58 x float], align 4" [finalwrapup.cpp:610]   --->   Operation 69 'alloca' 'ifm_buff3_13' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 70 [1/1] (0.00ns)   --->   "%ifm_buff3_14 = alloca [58 x float], align 4" [finalwrapup.cpp:610]   --->   Operation 70 'alloca' 'ifm_buff3_14' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 71 [1/1] (0.00ns)   --->   "%ifm_buff3_15 = alloca [58 x float], align 4" [finalwrapup.cpp:610]   --->   Operation 71 'alloca' 'ifm_buff3_15' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 72 [1/1] (0.00ns)   --->   "%filter_buff_0_0_0 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 72 'alloca' 'filter_buff_0_0_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 73 [1/1] (0.00ns)   --->   "%filter_buff_0_0_1 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 73 'alloca' 'filter_buff_0_0_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 74 [1/1] (0.00ns)   --->   "%filter_buff_0_0_2 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 74 'alloca' 'filter_buff_0_0_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 75 [1/1] (0.00ns)   --->   "%filter_buff_0_1_0 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 75 'alloca' 'filter_buff_0_1_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 76 [1/1] (0.00ns)   --->   "%filter_buff_0_1_1 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 76 'alloca' 'filter_buff_0_1_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 77 [1/1] (0.00ns)   --->   "%filter_buff_0_1_2 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 77 'alloca' 'filter_buff_0_1_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 78 [1/1] (0.00ns)   --->   "%filter_buff_0_2_0 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 78 'alloca' 'filter_buff_0_2_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 79 [1/1] (0.00ns)   --->   "%filter_buff_0_2_1 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 79 'alloca' 'filter_buff_0_2_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 80 [1/1] (0.00ns)   --->   "%filter_buff_0_2_2 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 80 'alloca' 'filter_buff_0_2_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 81 [1/1] (0.00ns)   --->   "%filter_buff_1_0_0 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 81 'alloca' 'filter_buff_1_0_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 82 [1/1] (0.00ns)   --->   "%filter_buff_1_0_1 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 82 'alloca' 'filter_buff_1_0_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 83 [1/1] (0.00ns)   --->   "%filter_buff_1_0_2 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 83 'alloca' 'filter_buff_1_0_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 84 [1/1] (0.00ns)   --->   "%filter_buff_1_1_0 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 84 'alloca' 'filter_buff_1_1_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 85 [1/1] (0.00ns)   --->   "%filter_buff_1_1_1 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 85 'alloca' 'filter_buff_1_1_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 86 [1/1] (0.00ns)   --->   "%filter_buff_1_1_2 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 86 'alloca' 'filter_buff_1_1_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 87 [1/1] (0.00ns)   --->   "%filter_buff_1_2_0 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 87 'alloca' 'filter_buff_1_2_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 88 [1/1] (0.00ns)   --->   "%filter_buff_1_2_1 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 88 'alloca' 'filter_buff_1_2_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 89 [1/1] (0.00ns)   --->   "%filter_buff_1_2_2 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 89 'alloca' 'filter_buff_1_2_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 90 [1/1] (0.00ns)   --->   "%filter_buff_2_0_0 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 90 'alloca' 'filter_buff_2_0_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 91 [1/1] (0.00ns)   --->   "%filter_buff_2_0_1 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 91 'alloca' 'filter_buff_2_0_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 92 [1/1] (0.00ns)   --->   "%filter_buff_2_0_2 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 92 'alloca' 'filter_buff_2_0_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 93 [1/1] (0.00ns)   --->   "%filter_buff_2_1_0 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 93 'alloca' 'filter_buff_2_1_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 94 [1/1] (0.00ns)   --->   "%filter_buff_2_1_1 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 94 'alloca' 'filter_buff_2_1_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 95 [1/1] (0.00ns)   --->   "%filter_buff_2_1_2 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 95 'alloca' 'filter_buff_2_1_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 96 [1/1] (0.00ns)   --->   "%filter_buff_2_2_0 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 96 'alloca' 'filter_buff_2_2_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 97 [1/1] (0.00ns)   --->   "%filter_buff_2_2_1 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 97 'alloca' 'filter_buff_2_2_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 98 [1/1] (0.00ns)   --->   "%filter_buff_2_2_2 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 98 'alloca' 'filter_buff_2_2_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 99 [1/1] (0.00ns)   --->   "%filter_buff_3_0_0 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 99 'alloca' 'filter_buff_3_0_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 100 [1/1] (0.00ns)   --->   "%filter_buff_3_0_1 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 100 'alloca' 'filter_buff_3_0_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 101 [1/1] (0.00ns)   --->   "%filter_buff_3_0_2 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 101 'alloca' 'filter_buff_3_0_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 102 [1/1] (0.00ns)   --->   "%filter_buff_3_1_0 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 102 'alloca' 'filter_buff_3_1_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 103 [1/1] (0.00ns)   --->   "%filter_buff_3_1_1 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 103 'alloca' 'filter_buff_3_1_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 104 [1/1] (0.00ns)   --->   "%filter_buff_3_1_2 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 104 'alloca' 'filter_buff_3_1_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 105 [1/1] (0.00ns)   --->   "%filter_buff_3_2_0 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 105 'alloca' 'filter_buff_3_2_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 106 [1/1] (0.00ns)   --->   "%filter_buff_3_2_1 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 106 'alloca' 'filter_buff_3_2_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 107 [1/1] (0.00ns)   --->   "%filter_buff_3_2_2 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 107 'alloca' 'filter_buff_3_2_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 108 [1/1] (0.00ns)   --->   "%filter_buff_4_0_0 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 108 'alloca' 'filter_buff_4_0_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 109 [1/1] (0.00ns)   --->   "%filter_buff_4_0_1 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 109 'alloca' 'filter_buff_4_0_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 110 [1/1] (0.00ns)   --->   "%filter_buff_4_0_2 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 110 'alloca' 'filter_buff_4_0_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 111 [1/1] (0.00ns)   --->   "%filter_buff_4_1_0 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 111 'alloca' 'filter_buff_4_1_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 112 [1/1] (0.00ns)   --->   "%filter_buff_4_1_1 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 112 'alloca' 'filter_buff_4_1_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 113 [1/1] (0.00ns)   --->   "%filter_buff_4_1_2 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 113 'alloca' 'filter_buff_4_1_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 114 [1/1] (0.00ns)   --->   "%filter_buff_4_2_0 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 114 'alloca' 'filter_buff_4_2_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 115 [1/1] (0.00ns)   --->   "%filter_buff_4_2_1 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 115 'alloca' 'filter_buff_4_2_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 116 [1/1] (0.00ns)   --->   "%filter_buff_4_2_2 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 116 'alloca' 'filter_buff_4_2_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 117 [1/1] (0.00ns)   --->   "%filter_buff_5_0_0 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 117 'alloca' 'filter_buff_5_0_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 118 [1/1] (0.00ns)   --->   "%filter_buff_5_0_1 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 118 'alloca' 'filter_buff_5_0_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 119 [1/1] (0.00ns)   --->   "%filter_buff_5_0_2 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 119 'alloca' 'filter_buff_5_0_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 120 [1/1] (0.00ns)   --->   "%filter_buff_5_1_0 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 120 'alloca' 'filter_buff_5_1_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 121 [1/1] (0.00ns)   --->   "%filter_buff_5_1_1 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 121 'alloca' 'filter_buff_5_1_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 122 [1/1] (0.00ns)   --->   "%filter_buff_5_1_2 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 122 'alloca' 'filter_buff_5_1_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 123 [1/1] (0.00ns)   --->   "%filter_buff_5_2_0 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 123 'alloca' 'filter_buff_5_2_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 124 [1/1] (0.00ns)   --->   "%filter_buff_5_2_1 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 124 'alloca' 'filter_buff_5_2_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 125 [1/1] (0.00ns)   --->   "%filter_buff_5_2_2 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 125 'alloca' 'filter_buff_5_2_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 126 [1/1] (0.00ns)   --->   "%filter_buff_6_0_0 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 126 'alloca' 'filter_buff_6_0_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 127 [1/1] (0.00ns)   --->   "%filter_buff_6_0_1 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 127 'alloca' 'filter_buff_6_0_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 128 [1/1] (0.00ns)   --->   "%filter_buff_6_0_2 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 128 'alloca' 'filter_buff_6_0_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 129 [1/1] (0.00ns)   --->   "%filter_buff_6_1_0 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 129 'alloca' 'filter_buff_6_1_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 130 [1/1] (0.00ns)   --->   "%filter_buff_6_1_1 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 130 'alloca' 'filter_buff_6_1_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 131 [1/1] (0.00ns)   --->   "%filter_buff_6_1_2 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 131 'alloca' 'filter_buff_6_1_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 132 [1/1] (0.00ns)   --->   "%filter_buff_6_2_0 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 132 'alloca' 'filter_buff_6_2_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 133 [1/1] (0.00ns)   --->   "%filter_buff_6_2_1 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 133 'alloca' 'filter_buff_6_2_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 134 [1/1] (0.00ns)   --->   "%filter_buff_6_2_2 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 134 'alloca' 'filter_buff_6_2_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 135 [1/1] (0.00ns)   --->   "%filter_buff_7_0_0 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 135 'alloca' 'filter_buff_7_0_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 136 [1/1] (0.00ns)   --->   "%filter_buff_7_0_1 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 136 'alloca' 'filter_buff_7_0_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 137 [1/1] (0.00ns)   --->   "%filter_buff_7_0_2 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 137 'alloca' 'filter_buff_7_0_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 138 [1/1] (0.00ns)   --->   "%filter_buff_7_1_0 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 138 'alloca' 'filter_buff_7_1_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 139 [1/1] (0.00ns)   --->   "%filter_buff_7_1_1 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 139 'alloca' 'filter_buff_7_1_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 140 [1/1] (0.00ns)   --->   "%filter_buff_7_1_2 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 140 'alloca' 'filter_buff_7_1_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 141 [1/1] (0.00ns)   --->   "%filter_buff_7_2_0 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 141 'alloca' 'filter_buff_7_2_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 142 [1/1] (0.00ns)   --->   "%filter_buff_7_2_1 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 142 'alloca' 'filter_buff_7_2_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 143 [1/1] (0.00ns)   --->   "%filter_buff_7_2_2 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 143 'alloca' 'filter_buff_7_2_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 144 [1/1] (0.00ns)   --->   "%filter_buff_8_0_0 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 144 'alloca' 'filter_buff_8_0_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 145 [1/1] (0.00ns)   --->   "%filter_buff_8_0_1 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 145 'alloca' 'filter_buff_8_0_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 146 [1/1] (0.00ns)   --->   "%filter_buff_8_0_2 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 146 'alloca' 'filter_buff_8_0_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 147 [1/1] (0.00ns)   --->   "%filter_buff_8_1_0 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 147 'alloca' 'filter_buff_8_1_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 148 [1/1] (0.00ns)   --->   "%filter_buff_8_1_1 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 148 'alloca' 'filter_buff_8_1_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 149 [1/1] (0.00ns)   --->   "%filter_buff_8_1_2 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 149 'alloca' 'filter_buff_8_1_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 150 [1/1] (0.00ns)   --->   "%filter_buff_8_2_0 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 150 'alloca' 'filter_buff_8_2_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 151 [1/1] (0.00ns)   --->   "%filter_buff_8_2_1 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 151 'alloca' 'filter_buff_8_2_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 152 [1/1] (0.00ns)   --->   "%filter_buff_8_2_2 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 152 'alloca' 'filter_buff_8_2_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 153 [1/1] (0.00ns)   --->   "%filter_buff_9_0_0 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 153 'alloca' 'filter_buff_9_0_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 154 [1/1] (0.00ns)   --->   "%filter_buff_9_0_1 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 154 'alloca' 'filter_buff_9_0_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 155 [1/1] (0.00ns)   --->   "%filter_buff_9_0_2 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 155 'alloca' 'filter_buff_9_0_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 156 [1/1] (0.00ns)   --->   "%filter_buff_9_1_0 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 156 'alloca' 'filter_buff_9_1_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 157 [1/1] (0.00ns)   --->   "%filter_buff_9_1_1 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 157 'alloca' 'filter_buff_9_1_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 158 [1/1] (0.00ns)   --->   "%filter_buff_9_1_2 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 158 'alloca' 'filter_buff_9_1_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 159 [1/1] (0.00ns)   --->   "%filter_buff_9_2_0 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 159 'alloca' 'filter_buff_9_2_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 160 [1/1] (0.00ns)   --->   "%filter_buff_9_2_1 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 160 'alloca' 'filter_buff_9_2_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 161 [1/1] (0.00ns)   --->   "%filter_buff_9_2_2 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 161 'alloca' 'filter_buff_9_2_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 162 [1/1] (0.00ns)   --->   "%filter_buff_10_0_0 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 162 'alloca' 'filter_buff_10_0_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 163 [1/1] (0.00ns)   --->   "%filter_buff_10_0_1 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 163 'alloca' 'filter_buff_10_0_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 164 [1/1] (0.00ns)   --->   "%filter_buff_10_0_2 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 164 'alloca' 'filter_buff_10_0_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 165 [1/1] (0.00ns)   --->   "%filter_buff_10_1_0 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 165 'alloca' 'filter_buff_10_1_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 166 [1/1] (0.00ns)   --->   "%filter_buff_10_1_1 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 166 'alloca' 'filter_buff_10_1_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 167 [1/1] (0.00ns)   --->   "%filter_buff_10_1_2 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 167 'alloca' 'filter_buff_10_1_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 168 [1/1] (0.00ns)   --->   "%filter_buff_10_2_0 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 168 'alloca' 'filter_buff_10_2_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 169 [1/1] (0.00ns)   --->   "%filter_buff_10_2_1 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 169 'alloca' 'filter_buff_10_2_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 170 [1/1] (0.00ns)   --->   "%filter_buff_10_2_2 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 170 'alloca' 'filter_buff_10_2_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 171 [1/1] (0.00ns)   --->   "%filter_buff_11_0_0 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 171 'alloca' 'filter_buff_11_0_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 172 [1/1] (0.00ns)   --->   "%filter_buff_11_0_1 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 172 'alloca' 'filter_buff_11_0_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 173 [1/1] (0.00ns)   --->   "%filter_buff_11_0_2 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 173 'alloca' 'filter_buff_11_0_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 174 [1/1] (0.00ns)   --->   "%filter_buff_11_1_0 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 174 'alloca' 'filter_buff_11_1_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 175 [1/1] (0.00ns)   --->   "%filter_buff_11_1_1 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 175 'alloca' 'filter_buff_11_1_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 176 [1/1] (0.00ns)   --->   "%filter_buff_11_1_2 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 176 'alloca' 'filter_buff_11_1_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 177 [1/1] (0.00ns)   --->   "%filter_buff_11_2_0 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 177 'alloca' 'filter_buff_11_2_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 178 [1/1] (0.00ns)   --->   "%filter_buff_11_2_1 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 178 'alloca' 'filter_buff_11_2_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 179 [1/1] (0.00ns)   --->   "%filter_buff_11_2_2 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 179 'alloca' 'filter_buff_11_2_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 180 [1/1] (0.00ns)   --->   "%filter_buff_12_0_0 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 180 'alloca' 'filter_buff_12_0_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 181 [1/1] (0.00ns)   --->   "%filter_buff_12_0_1 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 181 'alloca' 'filter_buff_12_0_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 182 [1/1] (0.00ns)   --->   "%filter_buff_12_0_2 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 182 'alloca' 'filter_buff_12_0_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 183 [1/1] (0.00ns)   --->   "%filter_buff_12_1_0 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 183 'alloca' 'filter_buff_12_1_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 184 [1/1] (0.00ns)   --->   "%filter_buff_12_1_1 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 184 'alloca' 'filter_buff_12_1_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 185 [1/1] (0.00ns)   --->   "%filter_buff_12_1_2 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 185 'alloca' 'filter_buff_12_1_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 186 [1/1] (0.00ns)   --->   "%filter_buff_12_2_0 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 186 'alloca' 'filter_buff_12_2_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 187 [1/1] (0.00ns)   --->   "%filter_buff_12_2_1 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 187 'alloca' 'filter_buff_12_2_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 188 [1/1] (0.00ns)   --->   "%filter_buff_12_2_2 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 188 'alloca' 'filter_buff_12_2_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 189 [1/1] (0.00ns)   --->   "%filter_buff_13_0_0 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 189 'alloca' 'filter_buff_13_0_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 190 [1/1] (0.00ns)   --->   "%filter_buff_13_0_1 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 190 'alloca' 'filter_buff_13_0_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 191 [1/1] (0.00ns)   --->   "%filter_buff_13_0_2 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 191 'alloca' 'filter_buff_13_0_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 192 [1/1] (0.00ns)   --->   "%filter_buff_13_1_0 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 192 'alloca' 'filter_buff_13_1_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 193 [1/1] (0.00ns)   --->   "%filter_buff_13_1_1 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 193 'alloca' 'filter_buff_13_1_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 194 [1/1] (0.00ns)   --->   "%filter_buff_13_1_2 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 194 'alloca' 'filter_buff_13_1_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 195 [1/1] (0.00ns)   --->   "%filter_buff_13_2_0 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 195 'alloca' 'filter_buff_13_2_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 196 [1/1] (0.00ns)   --->   "%filter_buff_13_2_1 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 196 'alloca' 'filter_buff_13_2_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 197 [1/1] (0.00ns)   --->   "%filter_buff_13_2_2 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 197 'alloca' 'filter_buff_13_2_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 198 [1/1] (0.00ns)   --->   "%filter_buff_14_0_0 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 198 'alloca' 'filter_buff_14_0_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 199 [1/1] (0.00ns)   --->   "%filter_buff_14_0_1 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 199 'alloca' 'filter_buff_14_0_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 200 [1/1] (0.00ns)   --->   "%filter_buff_14_0_2 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 200 'alloca' 'filter_buff_14_0_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 201 [1/1] (0.00ns)   --->   "%filter_buff_14_1_0 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 201 'alloca' 'filter_buff_14_1_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 202 [1/1] (0.00ns)   --->   "%filter_buff_14_1_1 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 202 'alloca' 'filter_buff_14_1_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 203 [1/1] (0.00ns)   --->   "%filter_buff_14_1_2 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 203 'alloca' 'filter_buff_14_1_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 204 [1/1] (0.00ns)   --->   "%filter_buff_14_2_0 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 204 'alloca' 'filter_buff_14_2_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 205 [1/1] (0.00ns)   --->   "%filter_buff_14_2_1 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 205 'alloca' 'filter_buff_14_2_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 206 [1/1] (0.00ns)   --->   "%filter_buff_14_2_2 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 206 'alloca' 'filter_buff_14_2_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 207 [1/1] (0.00ns)   --->   "%filter_buff_15_0_0 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 207 'alloca' 'filter_buff_15_0_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 208 [1/1] (0.00ns)   --->   "%filter_buff_15_0_1 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 208 'alloca' 'filter_buff_15_0_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 209 [1/1] (0.00ns)   --->   "%filter_buff_15_0_2 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 209 'alloca' 'filter_buff_15_0_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 210 [1/1] (0.00ns)   --->   "%filter_buff_15_1_0 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 210 'alloca' 'filter_buff_15_1_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 211 [1/1] (0.00ns)   --->   "%filter_buff_15_1_1 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 211 'alloca' 'filter_buff_15_1_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 212 [1/1] (0.00ns)   --->   "%filter_buff_15_1_2 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 212 'alloca' 'filter_buff_15_1_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 213 [1/1] (0.00ns)   --->   "%filter_buff_15_2_0 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 213 'alloca' 'filter_buff_15_2_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 214 [1/1] (0.00ns)   --->   "%filter_buff_15_2_1 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 214 'alloca' 'filter_buff_15_2_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 215 [1/1] (0.00ns)   --->   "%filter_buff_15_2_2 = alloca [16 x float], align 4" [finalwrapup.cpp:613]   --->   Operation 215 'alloca' 'filter_buff_15_2_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 216 [1/1] (0.00ns)   --->   "%ofm_buff0_0 = alloca [56 x float], align 4" [finalwrapup.cpp:619]   --->   Operation 216 'alloca' 'ofm_buff0_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 217 [1/1] (0.00ns)   --->   "%ofm_buff0_1 = alloca [56 x float], align 4" [finalwrapup.cpp:619]   --->   Operation 217 'alloca' 'ofm_buff0_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 218 [1/1] (0.00ns)   --->   "%ofm_buff0_2 = alloca [56 x float], align 4" [finalwrapup.cpp:619]   --->   Operation 218 'alloca' 'ofm_buff0_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 219 [1/1] (0.00ns)   --->   "%ofm_buff0_3 = alloca [56 x float], align 4" [finalwrapup.cpp:619]   --->   Operation 219 'alloca' 'ofm_buff0_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 220 [1/1] (0.00ns)   --->   "%ofm_buff0_4 = alloca [56 x float], align 4" [finalwrapup.cpp:619]   --->   Operation 220 'alloca' 'ofm_buff0_4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 221 [1/1] (0.00ns)   --->   "%ofm_buff0_5 = alloca [56 x float], align 4" [finalwrapup.cpp:619]   --->   Operation 221 'alloca' 'ofm_buff0_5' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 222 [1/1] (0.00ns)   --->   "%ofm_buff0_6 = alloca [56 x float], align 4" [finalwrapup.cpp:619]   --->   Operation 222 'alloca' 'ofm_buff0_6' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 223 [1/1] (0.00ns)   --->   "%ofm_buff0_7 = alloca [56 x float], align 4" [finalwrapup.cpp:619]   --->   Operation 223 'alloca' 'ofm_buff0_7' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 224 [1/1] (0.00ns)   --->   "%ofm_buff0_8 = alloca [56 x float], align 4" [finalwrapup.cpp:619]   --->   Operation 224 'alloca' 'ofm_buff0_8' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 225 [1/1] (0.00ns)   --->   "%ofm_buff0_9 = alloca [56 x float], align 4" [finalwrapup.cpp:619]   --->   Operation 225 'alloca' 'ofm_buff0_9' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 226 [1/1] (0.00ns)   --->   "%ofm_buff0_10 = alloca [56 x float], align 4" [finalwrapup.cpp:619]   --->   Operation 226 'alloca' 'ofm_buff0_10' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 227 [1/1] (0.00ns)   --->   "%ofm_buff0_11 = alloca [56 x float], align 4" [finalwrapup.cpp:619]   --->   Operation 227 'alloca' 'ofm_buff0_11' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 228 [1/1] (0.00ns)   --->   "%ofm_buff0_12 = alloca [56 x float], align 4" [finalwrapup.cpp:619]   --->   Operation 228 'alloca' 'ofm_buff0_12' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 229 [1/1] (0.00ns)   --->   "%ofm_buff0_13 = alloca [56 x float], align 4" [finalwrapup.cpp:619]   --->   Operation 229 'alloca' 'ofm_buff0_13' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 230 [1/1] (0.00ns)   --->   "%ofm_buff0_14 = alloca [56 x float], align 4" [finalwrapup.cpp:619]   --->   Operation 230 'alloca' 'ofm_buff0_14' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 231 [1/1] (0.00ns)   --->   "%ofm_buff0_15 = alloca [56 x float], align 4" [finalwrapup.cpp:619]   --->   Operation 231 'alloca' 'ofm_buff0_15' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 232 [1/1] (0.00ns)   --->   "%ofm_buff1_0 = alloca [56 x float], align 4" [finalwrapup.cpp:620]   --->   Operation 232 'alloca' 'ofm_buff1_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 233 [1/1] (0.00ns)   --->   "%ofm_buff1_1 = alloca [56 x float], align 4" [finalwrapup.cpp:620]   --->   Operation 233 'alloca' 'ofm_buff1_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 234 [1/1] (0.00ns)   --->   "%ofm_buff1_2 = alloca [56 x float], align 4" [finalwrapup.cpp:620]   --->   Operation 234 'alloca' 'ofm_buff1_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 235 [1/1] (0.00ns)   --->   "%ofm_buff1_3 = alloca [56 x float], align 4" [finalwrapup.cpp:620]   --->   Operation 235 'alloca' 'ofm_buff1_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 236 [1/1] (0.00ns)   --->   "%ofm_buff1_4 = alloca [56 x float], align 4" [finalwrapup.cpp:620]   --->   Operation 236 'alloca' 'ofm_buff1_4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 237 [1/1] (0.00ns)   --->   "%ofm_buff1_5 = alloca [56 x float], align 4" [finalwrapup.cpp:620]   --->   Operation 237 'alloca' 'ofm_buff1_5' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 238 [1/1] (0.00ns)   --->   "%ofm_buff1_6 = alloca [56 x float], align 4" [finalwrapup.cpp:620]   --->   Operation 238 'alloca' 'ofm_buff1_6' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 239 [1/1] (0.00ns)   --->   "%ofm_buff1_7 = alloca [56 x float], align 4" [finalwrapup.cpp:620]   --->   Operation 239 'alloca' 'ofm_buff1_7' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 240 [1/1] (0.00ns)   --->   "%ofm_buff1_8 = alloca [56 x float], align 4" [finalwrapup.cpp:620]   --->   Operation 240 'alloca' 'ofm_buff1_8' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 241 [1/1] (0.00ns)   --->   "%ofm_buff1_9 = alloca [56 x float], align 4" [finalwrapup.cpp:620]   --->   Operation 241 'alloca' 'ofm_buff1_9' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 242 [1/1] (0.00ns)   --->   "%ofm_buff1_10 = alloca [56 x float], align 4" [finalwrapup.cpp:620]   --->   Operation 242 'alloca' 'ofm_buff1_10' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 243 [1/1] (0.00ns)   --->   "%ofm_buff1_11 = alloca [56 x float], align 4" [finalwrapup.cpp:620]   --->   Operation 243 'alloca' 'ofm_buff1_11' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 244 [1/1] (0.00ns)   --->   "%ofm_buff1_12 = alloca [56 x float], align 4" [finalwrapup.cpp:620]   --->   Operation 244 'alloca' 'ofm_buff1_12' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 245 [1/1] (0.00ns)   --->   "%ofm_buff1_13 = alloca [56 x float], align 4" [finalwrapup.cpp:620]   --->   Operation 245 'alloca' 'ofm_buff1_13' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 246 [1/1] (0.00ns)   --->   "%ofm_buff1_14 = alloca [56 x float], align 4" [finalwrapup.cpp:620]   --->   Operation 246 'alloca' 'ofm_buff1_14' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 247 [1/1] (0.00ns)   --->   "%ofm_buff1_15 = alloca [56 x float], align 4" [finalwrapup.cpp:620]   --->   Operation 247 'alloca' 'ofm_buff1_15' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 248 [2/2] (3.25ns)   --->   "call fastcc void @load_cifm_data(i512* %cifm, [58 x float]* %ifm_buff1_0, [58 x float]* %ifm_buff1_1, [58 x float]* %ifm_buff1_2, [58 x float]* %ifm_buff1_3, [58 x float]* %ifm_buff1_4, [58 x float]* %ifm_buff1_5, [58 x float]* %ifm_buff1_6, [58 x float]* %ifm_buff1_7, [58 x float]* %ifm_buff1_8, [58 x float]* %ifm_buff1_9, [58 x float]* %ifm_buff1_10, [58 x float]* %ifm_buff1_11, [58 x float]* %ifm_buff1_12, [58 x float]* %ifm_buff1_13, [58 x float]* %ifm_buff1_14, [58 x float]* %ifm_buff1_15, [58 x float]* %ifm_buff2_0, [58 x float]* %ifm_buff2_1, [58 x float]* %ifm_buff2_2, [58 x float]* %ifm_buff2_3, [58 x float]* %ifm_buff2_4, [58 x float]* %ifm_buff2_5, [58 x float]* %ifm_buff2_6, [58 x float]* %ifm_buff2_7, [58 x float]* %ifm_buff2_8, [58 x float]* %ifm_buff2_9, [58 x float]* %ifm_buff2_10, [58 x float]* %ifm_buff2_11, [58 x float]* %ifm_buff2_12, [58 x float]* %ifm_buff2_13, [58 x float]* %ifm_buff2_14, [58 x float]* %ifm_buff2_15, [58 x float]* %ifm_buff3_0, [58 x float]* %ifm_buff3_1, [58 x float]* %ifm_buff3_2, [58 x float]* %ifm_buff3_3, [58 x float]* %ifm_buff3_4, [58 x float]* %ifm_buff3_5, [58 x float]* %ifm_buff3_6, [58 x float]* %ifm_buff3_7, [58 x float]* %ifm_buff3_8, [58 x float]* %ifm_buff3_9, [58 x float]* %ifm_buff3_10, [58 x float]* %ifm_buff3_11, [58 x float]* %ifm_buff3_12, [58 x float]* %ifm_buff3_13, [58 x float]* %ifm_buff3_14, [58 x float]* %ifm_buff3_15)" [finalwrapup.cpp:636]   --->   Operation 248 'call' <Predicate = true> <Delay = 3.25> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 249 [2/2] (2.32ns)   --->   "call fastcc void @load_filter_buffer(i512* %tran_wgt, [16 x float]* %filter_buff_0_0_0, [16 x float]* %filter_buff_0_0_1, [16 x float]* %filter_buff_0_0_2, [16 x float]* %filter_buff_0_1_0, [16 x float]* %filter_buff_0_1_1, [16 x float]* %filter_buff_0_1_2, [16 x float]* %filter_buff_0_2_0, [16 x float]* %filter_buff_0_2_1, [16 x float]* %filter_buff_0_2_2, [16 x float]* %filter_buff_1_0_0, [16 x float]* %filter_buff_1_0_1, [16 x float]* %filter_buff_1_0_2, [16 x float]* %filter_buff_1_1_0, [16 x float]* %filter_buff_1_1_1, [16 x float]* %filter_buff_1_1_2, [16 x float]* %filter_buff_1_2_0, [16 x float]* %filter_buff_1_2_1, [16 x float]* %filter_buff_1_2_2, [16 x float]* %filter_buff_2_0_0, [16 x float]* %filter_buff_2_0_1, [16 x float]* %filter_buff_2_0_2, [16 x float]* %filter_buff_2_1_0, [16 x float]* %filter_buff_2_1_1, [16 x float]* %filter_buff_2_1_2, [16 x float]* %filter_buff_2_2_0, [16 x float]* %filter_buff_2_2_1, [16 x float]* %filter_buff_2_2_2, [16 x float]* %filter_buff_3_0_0, [16 x float]* %filter_buff_3_0_1, [16 x float]* %filter_buff_3_0_2, [16 x float]* %filter_buff_3_1_0, [16 x float]* %filter_buff_3_1_1, [16 x float]* %filter_buff_3_1_2, [16 x float]* %filter_buff_3_2_0, [16 x float]* %filter_buff_3_2_1, [16 x float]* %filter_buff_3_2_2, [16 x float]* %filter_buff_4_0_0, [16 x float]* %filter_buff_4_0_1, [16 x float]* %filter_buff_4_0_2, [16 x float]* %filter_buff_4_1_0, [16 x float]* %filter_buff_4_1_1, [16 x float]* %filter_buff_4_1_2, [16 x float]* %filter_buff_4_2_0, [16 x float]* %filter_buff_4_2_1, [16 x float]* %filter_buff_4_2_2, [16 x float]* %filter_buff_5_0_0, [16 x float]* %filter_buff_5_0_1, [16 x float]* %filter_buff_5_0_2, [16 x float]* %filter_buff_5_1_0, [16 x float]* %filter_buff_5_1_1, [16 x float]* %filter_buff_5_1_2, [16 x float]* %filter_buff_5_2_0, [16 x float]* %filter_buff_5_2_1, [16 x float]* %filter_buff_5_2_2, [16 x float]* %filter_buff_6_0_0, [16 x float]* %filter_buff_6_0_1, [16 x float]* %filter_buff_6_0_2, [16 x float]* %filter_buff_6_1_0, [16 x float]* %filter_buff_6_1_1, [16 x float]* %filter_buff_6_1_2, [16 x float]* %filter_buff_6_2_0, [16 x float]* %filter_buff_6_2_1, [16 x float]* %filter_buff_6_2_2, [16 x float]* %filter_buff_7_0_0, [16 x float]* %filter_buff_7_0_1, [16 x float]* %filter_buff_7_0_2, [16 x float]* %filter_buff_7_1_0, [16 x float]* %filter_buff_7_1_1, [16 x float]* %filter_buff_7_1_2, [16 x float]* %filter_buff_7_2_0, [16 x float]* %filter_buff_7_2_1, [16 x float]* %filter_buff_7_2_2, [16 x float]* %filter_buff_8_0_0, [16 x float]* %filter_buff_8_0_1, [16 x float]* %filter_buff_8_0_2, [16 x float]* %filter_buff_8_1_0, [16 x float]* %filter_buff_8_1_1, [16 x float]* %filter_buff_8_1_2, [16 x float]* %filter_buff_8_2_0, [16 x float]* %filter_buff_8_2_1, [16 x float]* %filter_buff_8_2_2, [16 x float]* %filter_buff_9_0_0, [16 x float]* %filter_buff_9_0_1, [16 x float]* %filter_buff_9_0_2, [16 x float]* %filter_buff_9_1_0, [16 x float]* %filter_buff_9_1_1, [16 x float]* %filter_buff_9_1_2, [16 x float]* %filter_buff_9_2_0, [16 x float]* %filter_buff_9_2_1, [16 x float]* %filter_buff_9_2_2, [16 x float]* %filter_buff_10_0_0, [16 x float]* %filter_buff_10_0_1, [16 x float]* %filter_buff_10_0_2, [16 x float]* %filter_buff_10_1_0, [16 x float]* %filter_buff_10_1_1, [16 x float]* %filter_buff_10_1_2, [16 x float]* %filter_buff_10_2_0, [16 x float]* %filter_buff_10_2_1, [16 x float]* %filter_buff_10_2_2, [16 x float]* %filter_buff_11_0_0, [16 x float]* %filter_buff_11_0_1, [16 x float]* %filter_buff_11_0_2, [16 x float]* %filter_buff_11_1_0, [16 x float]* %filter_buff_11_1_1, [16 x float]* %filter_buff_11_1_2, [16 x float]* %filter_buff_11_2_0, [16 x float]* %filter_buff_11_2_1, [16 x float]* %filter_buff_11_2_2, [16 x float]* %filter_buff_12_0_0, [16 x float]* %filter_buff_12_0_1, [16 x float]* %filter_buff_12_0_2, [16 x float]* %filter_buff_12_1_0, [16 x float]* %filter_buff_12_1_1, [16 x float]* %filter_buff_12_1_2, [16 x float]* %filter_buff_12_2_0, [16 x float]* %filter_buff_12_2_1, [16 x float]* %filter_buff_12_2_2, [16 x float]* %filter_buff_13_0_0, [16 x float]* %filter_buff_13_0_1, [16 x float]* %filter_buff_13_0_2, [16 x float]* %filter_buff_13_1_0, [16 x float]* %filter_buff_13_1_1, [16 x float]* %filter_buff_13_1_2, [16 x float]* %filter_buff_13_2_0, [16 x float]* %filter_buff_13_2_1, [16 x float]* %filter_buff_13_2_2, [16 x float]* %filter_buff_14_0_0, [16 x float]* %filter_buff_14_0_1, [16 x float]* %filter_buff_14_0_2, [16 x float]* %filter_buff_14_1_0, [16 x float]* %filter_buff_14_1_1, [16 x float]* %filter_buff_14_1_2, [16 x float]* %filter_buff_14_2_0, [16 x float]* %filter_buff_14_2_1, [16 x float]* %filter_buff_14_2_2, [16 x float]* %filter_buff_15_0_0, [16 x float]* %filter_buff_15_0_1, [16 x float]* %filter_buff_15_0_2, [16 x float]* %filter_buff_15_1_0, [16 x float]* %filter_buff_15_1_1, [16 x float]* %filter_buff_15_1_2, [16 x float]* %filter_buff_15_2_0, [16 x float]* %filter_buff_15_2_1, [16 x float]* %filter_buff_15_2_2)" [finalwrapup.cpp:637]   --->   Operation 249 'call' <Predicate = true> <Delay = 2.32> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 250 [1/1] (1.90ns)   --->   "store i32 0, i32* %cofm_counter_8" [finalwrapup.cpp:644]   --->   Operation 250 'store' <Predicate = true> <Delay = 1.90>
ST_1 : Operation 251 [1/1] (1.90ns)   --->   "store i32 174, i32* %cifm_counter_8" [finalwrapup.cpp:644]   --->   Operation 251 'store' <Predicate = true> <Delay = 1.90>

State 2 <SV = 1> <Delay = 1.76>
ST_2 : Operation 252 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i512* %cifm, [5 x i8]* @p_str15, i32 0, i32 0, [5 x i8]* @p_str16, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind"   --->   Operation 252 'specinterface' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 253 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i512* %cofm, [5 x i8]* @p_str15, i32 0, i32 0, [5 x i8]* @p_str16, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind"   --->   Operation 253 'specinterface' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 254 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i512* %tran_wgt, [5 x i8]* @p_str15, i32 0, i32 0, [5 x i8]* @p_str16, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind"   --->   Operation 254 'specinterface' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 255 [1/2] (0.00ns)   --->   "call fastcc void @load_cifm_data(i512* %cifm, [58 x float]* %ifm_buff1_0, [58 x float]* %ifm_buff1_1, [58 x float]* %ifm_buff1_2, [58 x float]* %ifm_buff1_3, [58 x float]* %ifm_buff1_4, [58 x float]* %ifm_buff1_5, [58 x float]* %ifm_buff1_6, [58 x float]* %ifm_buff1_7, [58 x float]* %ifm_buff1_8, [58 x float]* %ifm_buff1_9, [58 x float]* %ifm_buff1_10, [58 x float]* %ifm_buff1_11, [58 x float]* %ifm_buff1_12, [58 x float]* %ifm_buff1_13, [58 x float]* %ifm_buff1_14, [58 x float]* %ifm_buff1_15, [58 x float]* %ifm_buff2_0, [58 x float]* %ifm_buff2_1, [58 x float]* %ifm_buff2_2, [58 x float]* %ifm_buff2_3, [58 x float]* %ifm_buff2_4, [58 x float]* %ifm_buff2_5, [58 x float]* %ifm_buff2_6, [58 x float]* %ifm_buff2_7, [58 x float]* %ifm_buff2_8, [58 x float]* %ifm_buff2_9, [58 x float]* %ifm_buff2_10, [58 x float]* %ifm_buff2_11, [58 x float]* %ifm_buff2_12, [58 x float]* %ifm_buff2_13, [58 x float]* %ifm_buff2_14, [58 x float]* %ifm_buff2_15, [58 x float]* %ifm_buff3_0, [58 x float]* %ifm_buff3_1, [58 x float]* %ifm_buff3_2, [58 x float]* %ifm_buff3_3, [58 x float]* %ifm_buff3_4, [58 x float]* %ifm_buff3_5, [58 x float]* %ifm_buff3_6, [58 x float]* %ifm_buff3_7, [58 x float]* %ifm_buff3_8, [58 x float]* %ifm_buff3_9, [58 x float]* %ifm_buff3_10, [58 x float]* %ifm_buff3_11, [58 x float]* %ifm_buff3_12, [58 x float]* %ifm_buff3_13, [58 x float]* %ifm_buff3_14, [58 x float]* %ifm_buff3_15)" [finalwrapup.cpp:636]   --->   Operation 255 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 256 [1/2] (0.00ns)   --->   "call fastcc void @load_filter_buffer(i512* %tran_wgt, [16 x float]* %filter_buff_0_0_0, [16 x float]* %filter_buff_0_0_1, [16 x float]* %filter_buff_0_0_2, [16 x float]* %filter_buff_0_1_0, [16 x float]* %filter_buff_0_1_1, [16 x float]* %filter_buff_0_1_2, [16 x float]* %filter_buff_0_2_0, [16 x float]* %filter_buff_0_2_1, [16 x float]* %filter_buff_0_2_2, [16 x float]* %filter_buff_1_0_0, [16 x float]* %filter_buff_1_0_1, [16 x float]* %filter_buff_1_0_2, [16 x float]* %filter_buff_1_1_0, [16 x float]* %filter_buff_1_1_1, [16 x float]* %filter_buff_1_1_2, [16 x float]* %filter_buff_1_2_0, [16 x float]* %filter_buff_1_2_1, [16 x float]* %filter_buff_1_2_2, [16 x float]* %filter_buff_2_0_0, [16 x float]* %filter_buff_2_0_1, [16 x float]* %filter_buff_2_0_2, [16 x float]* %filter_buff_2_1_0, [16 x float]* %filter_buff_2_1_1, [16 x float]* %filter_buff_2_1_2, [16 x float]* %filter_buff_2_2_0, [16 x float]* %filter_buff_2_2_1, [16 x float]* %filter_buff_2_2_2, [16 x float]* %filter_buff_3_0_0, [16 x float]* %filter_buff_3_0_1, [16 x float]* %filter_buff_3_0_2, [16 x float]* %filter_buff_3_1_0, [16 x float]* %filter_buff_3_1_1, [16 x float]* %filter_buff_3_1_2, [16 x float]* %filter_buff_3_2_0, [16 x float]* %filter_buff_3_2_1, [16 x float]* %filter_buff_3_2_2, [16 x float]* %filter_buff_4_0_0, [16 x float]* %filter_buff_4_0_1, [16 x float]* %filter_buff_4_0_2, [16 x float]* %filter_buff_4_1_0, [16 x float]* %filter_buff_4_1_1, [16 x float]* %filter_buff_4_1_2, [16 x float]* %filter_buff_4_2_0, [16 x float]* %filter_buff_4_2_1, [16 x float]* %filter_buff_4_2_2, [16 x float]* %filter_buff_5_0_0, [16 x float]* %filter_buff_5_0_1, [16 x float]* %filter_buff_5_0_2, [16 x float]* %filter_buff_5_1_0, [16 x float]* %filter_buff_5_1_1, [16 x float]* %filter_buff_5_1_2, [16 x float]* %filter_buff_5_2_0, [16 x float]* %filter_buff_5_2_1, [16 x float]* %filter_buff_5_2_2, [16 x float]* %filter_buff_6_0_0, [16 x float]* %filter_buff_6_0_1, [16 x float]* %filter_buff_6_0_2, [16 x float]* %filter_buff_6_1_0, [16 x float]* %filter_buff_6_1_1, [16 x float]* %filter_buff_6_1_2, [16 x float]* %filter_buff_6_2_0, [16 x float]* %filter_buff_6_2_1, [16 x float]* %filter_buff_6_2_2, [16 x float]* %filter_buff_7_0_0, [16 x float]* %filter_buff_7_0_1, [16 x float]* %filter_buff_7_0_2, [16 x float]* %filter_buff_7_1_0, [16 x float]* %filter_buff_7_1_1, [16 x float]* %filter_buff_7_1_2, [16 x float]* %filter_buff_7_2_0, [16 x float]* %filter_buff_7_2_1, [16 x float]* %filter_buff_7_2_2, [16 x float]* %filter_buff_8_0_0, [16 x float]* %filter_buff_8_0_1, [16 x float]* %filter_buff_8_0_2, [16 x float]* %filter_buff_8_1_0, [16 x float]* %filter_buff_8_1_1, [16 x float]* %filter_buff_8_1_2, [16 x float]* %filter_buff_8_2_0, [16 x float]* %filter_buff_8_2_1, [16 x float]* %filter_buff_8_2_2, [16 x float]* %filter_buff_9_0_0, [16 x float]* %filter_buff_9_0_1, [16 x float]* %filter_buff_9_0_2, [16 x float]* %filter_buff_9_1_0, [16 x float]* %filter_buff_9_1_1, [16 x float]* %filter_buff_9_1_2, [16 x float]* %filter_buff_9_2_0, [16 x float]* %filter_buff_9_2_1, [16 x float]* %filter_buff_9_2_2, [16 x float]* %filter_buff_10_0_0, [16 x float]* %filter_buff_10_0_1, [16 x float]* %filter_buff_10_0_2, [16 x float]* %filter_buff_10_1_0, [16 x float]* %filter_buff_10_1_1, [16 x float]* %filter_buff_10_1_2, [16 x float]* %filter_buff_10_2_0, [16 x float]* %filter_buff_10_2_1, [16 x float]* %filter_buff_10_2_2, [16 x float]* %filter_buff_11_0_0, [16 x float]* %filter_buff_11_0_1, [16 x float]* %filter_buff_11_0_2, [16 x float]* %filter_buff_11_1_0, [16 x float]* %filter_buff_11_1_1, [16 x float]* %filter_buff_11_1_2, [16 x float]* %filter_buff_11_2_0, [16 x float]* %filter_buff_11_2_1, [16 x float]* %filter_buff_11_2_2, [16 x float]* %filter_buff_12_0_0, [16 x float]* %filter_buff_12_0_1, [16 x float]* %filter_buff_12_0_2, [16 x float]* %filter_buff_12_1_0, [16 x float]* %filter_buff_12_1_1, [16 x float]* %filter_buff_12_1_2, [16 x float]* %filter_buff_12_2_0, [16 x float]* %filter_buff_12_2_1, [16 x float]* %filter_buff_12_2_2, [16 x float]* %filter_buff_13_0_0, [16 x float]* %filter_buff_13_0_1, [16 x float]* %filter_buff_13_0_2, [16 x float]* %filter_buff_13_1_0, [16 x float]* %filter_buff_13_1_1, [16 x float]* %filter_buff_13_1_2, [16 x float]* %filter_buff_13_2_0, [16 x float]* %filter_buff_13_2_1, [16 x float]* %filter_buff_13_2_2, [16 x float]* %filter_buff_14_0_0, [16 x float]* %filter_buff_14_0_1, [16 x float]* %filter_buff_14_0_2, [16 x float]* %filter_buff_14_1_0, [16 x float]* %filter_buff_14_1_1, [16 x float]* %filter_buff_14_1_2, [16 x float]* %filter_buff_14_2_0, [16 x float]* %filter_buff_14_2_1, [16 x float]* %filter_buff_14_2_2, [16 x float]* %filter_buff_15_0_0, [16 x float]* %filter_buff_15_0_1, [16 x float]* %filter_buff_15_0_2, [16 x float]* %filter_buff_15_1_0, [16 x float]* %filter_buff_15_1_1, [16 x float]* %filter_buff_15_1_2, [16 x float]* %filter_buff_15_2_0, [16 x float]* %filter_buff_15_2_1, [16 x float]* %filter_buff_15_2_2)" [finalwrapup.cpp:637]   --->   Operation 256 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 257 [1/1] (1.76ns)   --->   "br label %1" [finalwrapup.cpp:644]   --->   Operation 257 'br' <Predicate = true> <Delay = 1.76>

State 3 <SV = 2> <Delay = 6.54>
ST_3 : Operation 258 [1/1] (0.00ns)   --->   "%rotate_counter_0 = phi i16 [ 0, %0 ], [ %select_ln687, %._crit_edge ]" [finalwrapup.cpp:687]   --->   Operation 258 'phi' 'rotate_counter_0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 259 [1/1] (0.00ns)   --->   "%row_0 = phi i6 [ 0, %0 ], [ %row, %._crit_edge ]"   --->   Operation 259 'phi' 'row_0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 260 [1/1] (1.42ns)   --->   "%icmp_ln644 = icmp eq i6 %row_0, -8" [finalwrapup.cpp:644]   --->   Operation 260 'icmp' 'icmp_ln644' <Predicate = true> <Delay = 1.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 261 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopTripCount(i64 56, i64 56, i64 56)"   --->   Operation 261 'speclooptripcount' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 262 [1/1] (1.82ns)   --->   "%row = add i6 %row_0, 1" [finalwrapup.cpp:644]   --->   Operation 262 'add' 'row' <Predicate = true> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 263 [1/1] (0.00ns)   --->   "br i1 %icmp_ln644, label %10, label %2" [finalwrapup.cpp:644]   --->   Operation 263 'br' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 264 [1/1] (2.42ns)   --->   "%icmp_ln648 = icmp eq i16 %rotate_counter_0, 0" [finalwrapup.cpp:648]   --->   Operation 264 'icmp' 'icmp_ln648' <Predicate = (!icmp_ln644)> <Delay = 2.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 265 [1/1] (0.00ns)   --->   "br i1 %icmp_ln648, label %3, label %4" [finalwrapup.cpp:648]   --->   Operation 265 'br' <Predicate = (!icmp_ln644)> <Delay = 0.00>
ST_3 : Operation 266 [1/1] (2.42ns)   --->   "%icmp_ln658 = icmp eq i16 %rotate_counter_0, 1" [finalwrapup.cpp:658]   --->   Operation 266 'icmp' 'icmp_ln658' <Predicate = (!icmp_ln644 & !icmp_ln648)> <Delay = 2.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 267 [1/1] (0.00ns)   --->   "br i1 %icmp_ln658, label %5, label %6" [finalwrapup.cpp:658]   --->   Operation 267 'br' <Predicate = (!icmp_ln644 & !icmp_ln648)> <Delay = 0.00>
ST_3 : Operation 268 [1/1] (2.42ns)   --->   "%icmp_ln667 = icmp eq i16 %rotate_counter_0, 2" [finalwrapup.cpp:667]   --->   Operation 268 'icmp' 'icmp_ln667' <Predicate = (!icmp_ln644 & !icmp_ln648 & !icmp_ln658)> <Delay = 2.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 269 [1/1] (0.00ns)   --->   "br i1 %icmp_ln667, label %7, label %8" [finalwrapup.cpp:667]   --->   Operation 269 'br' <Predicate = (!icmp_ln644 & !icmp_ln648 & !icmp_ln658)> <Delay = 0.00>
ST_3 : Operation 270 [1/1] (2.42ns)   --->   "%icmp_ln676 = icmp eq i16 %rotate_counter_0, 3" [finalwrapup.cpp:676]   --->   Operation 270 'icmp' 'icmp_ln676' <Predicate = (!icmp_ln644 & !icmp_ln648 & !icmp_ln658 & !icmp_ln667)> <Delay = 2.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 271 [1/1] (0.00ns)   --->   "br i1 %icmp_ln676, label %9, label %._crit_edge" [finalwrapup.cpp:676]   --->   Operation 271 'br' <Predicate = (!icmp_ln644 & !icmp_ln648 & !icmp_ln658 & !icmp_ln667)> <Delay = 0.00>
ST_3 : Operation 272 [1/1] (0.00ns)   --->   "%cifm_counter_8_load_3 = load i32* %cifm_counter_8" [finalwrapup.cpp:678]   --->   Operation 272 'load' 'cifm_counter_8_load_3' <Predicate = (!icmp_ln644 & !icmp_ln648 & !icmp_ln658 & !icmp_ln667 & icmp_ln676)> <Delay = 0.00>
ST_3 : Operation 273 [1/1] (0.00ns)   --->   "%cofm_counter_8_load_4 = load i32* %cofm_counter_8" [finalwrapup.cpp:680]   --->   Operation 273 'load' 'cofm_counter_8_load_4' <Predicate = (!icmp_ln644 & !icmp_ln648 & !icmp_ln658 & !icmp_ln667 & icmp_ln676)> <Delay = 0.00>
ST_3 : Operation 274 [1/1] (1.42ns)   --->   "%icmp_ln678 = icmp ne i6 %row_0, -9" [finalwrapup.cpp:678]   --->   Operation 274 'icmp' 'icmp_ln678' <Predicate = (!icmp_ln644 & !icmp_ln648 & !icmp_ln658 & !icmp_ln667 & icmp_ln676)> <Delay = 1.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 275 [2/2] (5.11ns)   --->   "%cifm_counter_7 = call fastcc i32 @write_row_ifm(i512* %cifm, [58 x float]* %ifm_buff3_0, [58 x float]* %ifm_buff3_1, [58 x float]* %ifm_buff3_2, [58 x float]* %ifm_buff3_3, [58 x float]* %ifm_buff3_4, [58 x float]* %ifm_buff3_5, [58 x float]* %ifm_buff3_6, [58 x float]* %ifm_buff3_7, [58 x float]* %ifm_buff3_8, [58 x float]* %ifm_buff3_9, [58 x float]* %ifm_buff3_10, [58 x float]* %ifm_buff3_11, [58 x float]* %ifm_buff3_12, [58 x float]* %ifm_buff3_13, [58 x float]* %ifm_buff3_14, [58 x float]* %ifm_buff3_15, i32 %cifm_counter_8_load_3, i1 zeroext %icmp_ln678)" [finalwrapup.cpp:678]   --->   Operation 275 'call' 'cifm_counter_7' <Predicate = (!icmp_ln644 & !icmp_ln648 & !icmp_ln658 & !icmp_ln667 & icmp_ln676)> <Delay = 5.11> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_3 : Operation 276 [2/2] (1.86ns)   --->   "call fastcc void @conv_write([16 x float]* %filter_buff_0_0_0, [16 x float]* %filter_buff_0_0_1, [16 x float]* %filter_buff_0_0_2, [16 x float]* %filter_buff_0_1_0, [16 x float]* %filter_buff_0_1_1, [16 x float]* %filter_buff_0_1_2, [16 x float]* %filter_buff_0_2_0, [16 x float]* %filter_buff_0_2_1, [16 x float]* %filter_buff_0_2_2, [16 x float]* %filter_buff_1_0_0, [16 x float]* %filter_buff_1_0_1, [16 x float]* %filter_buff_1_0_2, [16 x float]* %filter_buff_1_1_0, [16 x float]* %filter_buff_1_1_1, [16 x float]* %filter_buff_1_1_2, [16 x float]* %filter_buff_1_2_0, [16 x float]* %filter_buff_1_2_1, [16 x float]* %filter_buff_1_2_2, [16 x float]* %filter_buff_2_0_0, [16 x float]* %filter_buff_2_0_1, [16 x float]* %filter_buff_2_0_2, [16 x float]* %filter_buff_2_1_0, [16 x float]* %filter_buff_2_1_1, [16 x float]* %filter_buff_2_1_2, [16 x float]* %filter_buff_2_2_0, [16 x float]* %filter_buff_2_2_1, [16 x float]* %filter_buff_2_2_2, [16 x float]* %filter_buff_3_0_0, [16 x float]* %filter_buff_3_0_1, [16 x float]* %filter_buff_3_0_2, [16 x float]* %filter_buff_3_1_0, [16 x float]* %filter_buff_3_1_1, [16 x float]* %filter_buff_3_1_2, [16 x float]* %filter_buff_3_2_0, [16 x float]* %filter_buff_3_2_1, [16 x float]* %filter_buff_3_2_2, [16 x float]* %filter_buff_4_0_0, [16 x float]* %filter_buff_4_0_1, [16 x float]* %filter_buff_4_0_2, [16 x float]* %filter_buff_4_1_0, [16 x float]* %filter_buff_4_1_1, [16 x float]* %filter_buff_4_1_2, [16 x float]* %filter_buff_4_2_0, [16 x float]* %filter_buff_4_2_1, [16 x float]* %filter_buff_4_2_2, [16 x float]* %filter_buff_5_0_0, [16 x float]* %filter_buff_5_0_1, [16 x float]* %filter_buff_5_0_2, [16 x float]* %filter_buff_5_1_0, [16 x float]* %filter_buff_5_1_1, [16 x float]* %filter_buff_5_1_2, [16 x float]* %filter_buff_5_2_0, [16 x float]* %filter_buff_5_2_1, [16 x float]* %filter_buff_5_2_2, [16 x float]* %filter_buff_6_0_0, [16 x float]* %filter_buff_6_0_1, [16 x float]* %filter_buff_6_0_2, [16 x float]* %filter_buff_6_1_0, [16 x float]* %filter_buff_6_1_1, [16 x float]* %filter_buff_6_1_2, [16 x float]* %filter_buff_6_2_0, [16 x float]* %filter_buff_6_2_1, [16 x float]* %filter_buff_6_2_2, [16 x float]* %filter_buff_7_0_0, [16 x float]* %filter_buff_7_0_1, [16 x float]* %filter_buff_7_0_2, [16 x float]* %filter_buff_7_1_0, [16 x float]* %filter_buff_7_1_1, [16 x float]* %filter_buff_7_1_2, [16 x float]* %filter_buff_7_2_0, [16 x float]* %filter_buff_7_2_1, [16 x float]* %filter_buff_7_2_2, [16 x float]* %filter_buff_8_0_0, [16 x float]* %filter_buff_8_0_1, [16 x float]* %filter_buff_8_0_2, [16 x float]* %filter_buff_8_1_0, [16 x float]* %filter_buff_8_1_1, [16 x float]* %filter_buff_8_1_2, [16 x float]* %filter_buff_8_2_0, [16 x float]* %filter_buff_8_2_1, [16 x float]* %filter_buff_8_2_2, [16 x float]* %filter_buff_9_0_0, [16 x float]* %filter_buff_9_0_1, [16 x float]* %filter_buff_9_0_2, [16 x float]* %filter_buff_9_1_0, [16 x float]* %filter_buff_9_1_1, [16 x float]* %filter_buff_9_1_2, [16 x float]* %filter_buff_9_2_0, [16 x float]* %filter_buff_9_2_1, [16 x float]* %filter_buff_9_2_2, [16 x float]* %filter_buff_10_0_0, [16 x float]* %filter_buff_10_0_1, [16 x float]* %filter_buff_10_0_2, [16 x float]* %filter_buff_10_1_0, [16 x float]* %filter_buff_10_1_1, [16 x float]* %filter_buff_10_1_2, [16 x float]* %filter_buff_10_2_0, [16 x float]* %filter_buff_10_2_1, [16 x float]* %filter_buff_10_2_2, [16 x float]* %filter_buff_11_0_0, [16 x float]* %filter_buff_11_0_1, [16 x float]* %filter_buff_11_0_2, [16 x float]* %filter_buff_11_1_0, [16 x float]* %filter_buff_11_1_1, [16 x float]* %filter_buff_11_1_2, [16 x float]* %filter_buff_11_2_0, [16 x float]* %filter_buff_11_2_1, [16 x float]* %filter_buff_11_2_2, [16 x float]* %filter_buff_12_0_0, [16 x float]* %filter_buff_12_0_1, [16 x float]* %filter_buff_12_0_2, [16 x float]* %filter_buff_12_1_0, [16 x float]* %filter_buff_12_1_1, [16 x float]* %filter_buff_12_1_2, [16 x float]* %filter_buff_12_2_0, [16 x float]* %filter_buff_12_2_1, [16 x float]* %filter_buff_12_2_2, [16 x float]* %filter_buff_13_0_0, [16 x float]* %filter_buff_13_0_1, [16 x float]* %filter_buff_13_0_2, [16 x float]* %filter_buff_13_1_0, [16 x float]* %filter_buff_13_1_1, [16 x float]* %filter_buff_13_1_2, [16 x float]* %filter_buff_13_2_0, [16 x float]* %filter_buff_13_2_1, [16 x float]* %filter_buff_13_2_2, [16 x float]* %filter_buff_14_0_0, [16 x float]* %filter_buff_14_0_1, [16 x float]* %filter_buff_14_0_2, [16 x float]* %filter_buff_14_1_0, [16 x float]* %filter_buff_14_1_1, [16 x float]* %filter_buff_14_1_2, [16 x float]* %filter_buff_14_2_0, [16 x float]* %filter_buff_14_2_1, [16 x float]* %filter_buff_14_2_2, [16 x float]* %filter_buff_15_0_0, [16 x float]* %filter_buff_15_0_1, [16 x float]* %filter_buff_15_0_2, [16 x float]* %filter_buff_15_1_0, [16 x float]* %filter_buff_15_1_1, [16 x float]* %filter_buff_15_1_2, [16 x float]* %filter_buff_15_2_0, [16 x float]* %filter_buff_15_2_1, [16 x float]* %filter_buff_15_2_2, [58 x float]* %ifm_buff0_0, [58 x float]* %ifm_buff0_1, [58 x float]* %ifm_buff0_2, [58 x float]* %ifm_buff0_3, [58 x float]* %ifm_buff0_4, [58 x float]* %ifm_buff0_5, [58 x float]* %ifm_buff0_6, [58 x float]* %ifm_buff0_7, [58 x float]* %ifm_buff0_8, [58 x float]* %ifm_buff0_9, [58 x float]* %ifm_buff0_10, [58 x float]* %ifm_buff0_11, [58 x float]* %ifm_buff0_12, [58 x float]* %ifm_buff0_13, [58 x float]* %ifm_buff0_14, [58 x float]* %ifm_buff0_15, [58 x float]* %ifm_buff1_0, [58 x float]* %ifm_buff1_1, [58 x float]* %ifm_buff1_2, [58 x float]* %ifm_buff1_3, [58 x float]* %ifm_buff1_4, [58 x float]* %ifm_buff1_5, [58 x float]* %ifm_buff1_6, [58 x float]* %ifm_buff1_7, [58 x float]* %ifm_buff1_8, [58 x float]* %ifm_buff1_9, [58 x float]* %ifm_buff1_10, [58 x float]* %ifm_buff1_11, [58 x float]* %ifm_buff1_12, [58 x float]* %ifm_buff1_13, [58 x float]* %ifm_buff1_14, [58 x float]* %ifm_buff1_15, [58 x float]* %ifm_buff2_0, [58 x float]* %ifm_buff2_1, [58 x float]* %ifm_buff2_2, [58 x float]* %ifm_buff2_3, [58 x float]* %ifm_buff2_4, [58 x float]* %ifm_buff2_5, [58 x float]* %ifm_buff2_6, [58 x float]* %ifm_buff2_7, [58 x float]* %ifm_buff2_8, [58 x float]* %ifm_buff2_9, [58 x float]* %ifm_buff2_10, [58 x float]* %ifm_buff2_11, [58 x float]* %ifm_buff2_12, [58 x float]* %ifm_buff2_13, [58 x float]* %ifm_buff2_14, [58 x float]* %ifm_buff2_15, [56 x float]* %ofm_buff1_0, [56 x float]* %ofm_buff1_1, [56 x float]* %ofm_buff1_2, [56 x float]* %ofm_buff1_3, [56 x float]* %ofm_buff1_4, [56 x float]* %ofm_buff1_5, [56 x float]* %ofm_buff1_6, [56 x float]* %ofm_buff1_7, [56 x float]* %ofm_buff1_8, [56 x float]* %ofm_buff1_9, [56 x float]* %ofm_buff1_10, [56 x float]* %ofm_buff1_11, [56 x float]* %ofm_buff1_12, [56 x float]* %ofm_buff1_13, [56 x float]* %ofm_buff1_14, [56 x float]* %ofm_buff1_15)" [finalwrapup.cpp:679]   --->   Operation 276 'call' <Predicate = (!icmp_ln644 & !icmp_ln648 & !icmp_ln658 & !icmp_ln667 & icmp_ln676)> <Delay = 1.86> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_3 : Operation 277 [2/2] (4.45ns)   --->   "%cofm_counter_7 = call fastcc i32 @conv_read(i512* %cofm, [56 x float]* %ofm_buff0_0, [56 x float]* %ofm_buff0_1, [56 x float]* %ofm_buff0_2, [56 x float]* %ofm_buff0_3, [56 x float]* %ofm_buff0_4, [56 x float]* %ofm_buff0_5, [56 x float]* %ofm_buff0_6, [56 x float]* %ofm_buff0_7, [56 x float]* %ofm_buff0_8, [56 x float]* %ofm_buff0_9, [56 x float]* %ofm_buff0_10, [56 x float]* %ofm_buff0_11, [56 x float]* %ofm_buff0_12, [56 x float]* %ofm_buff0_13, [56 x float]* %ofm_buff0_14, [56 x float]* %ofm_buff0_15, i32 %cofm_counter_8_load_4, i1 zeroext true)" [finalwrapup.cpp:680]   --->   Operation 277 'call' 'cofm_counter_7' <Predicate = (!icmp_ln644 & !icmp_ln648 & !icmp_ln658 & !icmp_ln667 & icmp_ln676)> <Delay = 4.45> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_3 : Operation 278 [1/1] (0.00ns)   --->   "%cifm_counter_8_load_2 = load i32* %cifm_counter_8" [finalwrapup.cpp:669]   --->   Operation 278 'load' 'cifm_counter_8_load_2' <Predicate = (!icmp_ln644 & !icmp_ln648 & !icmp_ln658 & icmp_ln667)> <Delay = 0.00>
ST_3 : Operation 279 [1/1] (0.00ns)   --->   "%cofm_counter_8_load_3 = load i32* %cofm_counter_8" [finalwrapup.cpp:671]   --->   Operation 279 'load' 'cofm_counter_8_load_3' <Predicate = (!icmp_ln644 & !icmp_ln648 & !icmp_ln658 & icmp_ln667)> <Delay = 0.00>
ST_3 : Operation 280 [2/2] (5.11ns)   --->   "%cifm_counter_6 = call fastcc i32 @write_row_ifm(i512* %cifm, [58 x float]* %ifm_buff2_0, [58 x float]* %ifm_buff2_1, [58 x float]* %ifm_buff2_2, [58 x float]* %ifm_buff2_3, [58 x float]* %ifm_buff2_4, [58 x float]* %ifm_buff2_5, [58 x float]* %ifm_buff2_6, [58 x float]* %ifm_buff2_7, [58 x float]* %ifm_buff2_8, [58 x float]* %ifm_buff2_9, [58 x float]* %ifm_buff2_10, [58 x float]* %ifm_buff2_11, [58 x float]* %ifm_buff2_12, [58 x float]* %ifm_buff2_13, [58 x float]* %ifm_buff2_14, [58 x float]* %ifm_buff2_15, i32 %cifm_counter_8_load_2, i1 zeroext true)" [finalwrapup.cpp:669]   --->   Operation 280 'call' 'cifm_counter_6' <Predicate = (!icmp_ln644 & !icmp_ln648 & !icmp_ln658 & icmp_ln667)> <Delay = 5.11> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_3 : Operation 281 [2/2] (1.86ns)   --->   "call fastcc void @conv_write([16 x float]* %filter_buff_0_0_0, [16 x float]* %filter_buff_0_0_1, [16 x float]* %filter_buff_0_0_2, [16 x float]* %filter_buff_0_1_0, [16 x float]* %filter_buff_0_1_1, [16 x float]* %filter_buff_0_1_2, [16 x float]* %filter_buff_0_2_0, [16 x float]* %filter_buff_0_2_1, [16 x float]* %filter_buff_0_2_2, [16 x float]* %filter_buff_1_0_0, [16 x float]* %filter_buff_1_0_1, [16 x float]* %filter_buff_1_0_2, [16 x float]* %filter_buff_1_1_0, [16 x float]* %filter_buff_1_1_1, [16 x float]* %filter_buff_1_1_2, [16 x float]* %filter_buff_1_2_0, [16 x float]* %filter_buff_1_2_1, [16 x float]* %filter_buff_1_2_2, [16 x float]* %filter_buff_2_0_0, [16 x float]* %filter_buff_2_0_1, [16 x float]* %filter_buff_2_0_2, [16 x float]* %filter_buff_2_1_0, [16 x float]* %filter_buff_2_1_1, [16 x float]* %filter_buff_2_1_2, [16 x float]* %filter_buff_2_2_0, [16 x float]* %filter_buff_2_2_1, [16 x float]* %filter_buff_2_2_2, [16 x float]* %filter_buff_3_0_0, [16 x float]* %filter_buff_3_0_1, [16 x float]* %filter_buff_3_0_2, [16 x float]* %filter_buff_3_1_0, [16 x float]* %filter_buff_3_1_1, [16 x float]* %filter_buff_3_1_2, [16 x float]* %filter_buff_3_2_0, [16 x float]* %filter_buff_3_2_1, [16 x float]* %filter_buff_3_2_2, [16 x float]* %filter_buff_4_0_0, [16 x float]* %filter_buff_4_0_1, [16 x float]* %filter_buff_4_0_2, [16 x float]* %filter_buff_4_1_0, [16 x float]* %filter_buff_4_1_1, [16 x float]* %filter_buff_4_1_2, [16 x float]* %filter_buff_4_2_0, [16 x float]* %filter_buff_4_2_1, [16 x float]* %filter_buff_4_2_2, [16 x float]* %filter_buff_5_0_0, [16 x float]* %filter_buff_5_0_1, [16 x float]* %filter_buff_5_0_2, [16 x float]* %filter_buff_5_1_0, [16 x float]* %filter_buff_5_1_1, [16 x float]* %filter_buff_5_1_2, [16 x float]* %filter_buff_5_2_0, [16 x float]* %filter_buff_5_2_1, [16 x float]* %filter_buff_5_2_2, [16 x float]* %filter_buff_6_0_0, [16 x float]* %filter_buff_6_0_1, [16 x float]* %filter_buff_6_0_2, [16 x float]* %filter_buff_6_1_0, [16 x float]* %filter_buff_6_1_1, [16 x float]* %filter_buff_6_1_2, [16 x float]* %filter_buff_6_2_0, [16 x float]* %filter_buff_6_2_1, [16 x float]* %filter_buff_6_2_2, [16 x float]* %filter_buff_7_0_0, [16 x float]* %filter_buff_7_0_1, [16 x float]* %filter_buff_7_0_2, [16 x float]* %filter_buff_7_1_0, [16 x float]* %filter_buff_7_1_1, [16 x float]* %filter_buff_7_1_2, [16 x float]* %filter_buff_7_2_0, [16 x float]* %filter_buff_7_2_1, [16 x float]* %filter_buff_7_2_2, [16 x float]* %filter_buff_8_0_0, [16 x float]* %filter_buff_8_0_1, [16 x float]* %filter_buff_8_0_2, [16 x float]* %filter_buff_8_1_0, [16 x float]* %filter_buff_8_1_1, [16 x float]* %filter_buff_8_1_2, [16 x float]* %filter_buff_8_2_0, [16 x float]* %filter_buff_8_2_1, [16 x float]* %filter_buff_8_2_2, [16 x float]* %filter_buff_9_0_0, [16 x float]* %filter_buff_9_0_1, [16 x float]* %filter_buff_9_0_2, [16 x float]* %filter_buff_9_1_0, [16 x float]* %filter_buff_9_1_1, [16 x float]* %filter_buff_9_1_2, [16 x float]* %filter_buff_9_2_0, [16 x float]* %filter_buff_9_2_1, [16 x float]* %filter_buff_9_2_2, [16 x float]* %filter_buff_10_0_0, [16 x float]* %filter_buff_10_0_1, [16 x float]* %filter_buff_10_0_2, [16 x float]* %filter_buff_10_1_0, [16 x float]* %filter_buff_10_1_1, [16 x float]* %filter_buff_10_1_2, [16 x float]* %filter_buff_10_2_0, [16 x float]* %filter_buff_10_2_1, [16 x float]* %filter_buff_10_2_2, [16 x float]* %filter_buff_11_0_0, [16 x float]* %filter_buff_11_0_1, [16 x float]* %filter_buff_11_0_2, [16 x float]* %filter_buff_11_1_0, [16 x float]* %filter_buff_11_1_1, [16 x float]* %filter_buff_11_1_2, [16 x float]* %filter_buff_11_2_0, [16 x float]* %filter_buff_11_2_1, [16 x float]* %filter_buff_11_2_2, [16 x float]* %filter_buff_12_0_0, [16 x float]* %filter_buff_12_0_1, [16 x float]* %filter_buff_12_0_2, [16 x float]* %filter_buff_12_1_0, [16 x float]* %filter_buff_12_1_1, [16 x float]* %filter_buff_12_1_2, [16 x float]* %filter_buff_12_2_0, [16 x float]* %filter_buff_12_2_1, [16 x float]* %filter_buff_12_2_2, [16 x float]* %filter_buff_13_0_0, [16 x float]* %filter_buff_13_0_1, [16 x float]* %filter_buff_13_0_2, [16 x float]* %filter_buff_13_1_0, [16 x float]* %filter_buff_13_1_1, [16 x float]* %filter_buff_13_1_2, [16 x float]* %filter_buff_13_2_0, [16 x float]* %filter_buff_13_2_1, [16 x float]* %filter_buff_13_2_2, [16 x float]* %filter_buff_14_0_0, [16 x float]* %filter_buff_14_0_1, [16 x float]* %filter_buff_14_0_2, [16 x float]* %filter_buff_14_1_0, [16 x float]* %filter_buff_14_1_1, [16 x float]* %filter_buff_14_1_2, [16 x float]* %filter_buff_14_2_0, [16 x float]* %filter_buff_14_2_1, [16 x float]* %filter_buff_14_2_2, [16 x float]* %filter_buff_15_0_0, [16 x float]* %filter_buff_15_0_1, [16 x float]* %filter_buff_15_0_2, [16 x float]* %filter_buff_15_1_0, [16 x float]* %filter_buff_15_1_1, [16 x float]* %filter_buff_15_1_2, [16 x float]* %filter_buff_15_2_0, [16 x float]* %filter_buff_15_2_1, [16 x float]* %filter_buff_15_2_2, [58 x float]* %ifm_buff3_0, [58 x float]* %ifm_buff3_1, [58 x float]* %ifm_buff3_2, [58 x float]* %ifm_buff3_3, [58 x float]* %ifm_buff3_4, [58 x float]* %ifm_buff3_5, [58 x float]* %ifm_buff3_6, [58 x float]* %ifm_buff3_7, [58 x float]* %ifm_buff3_8, [58 x float]* %ifm_buff3_9, [58 x float]* %ifm_buff3_10, [58 x float]* %ifm_buff3_11, [58 x float]* %ifm_buff3_12, [58 x float]* %ifm_buff3_13, [58 x float]* %ifm_buff3_14, [58 x float]* %ifm_buff3_15, [58 x float]* %ifm_buff0_0, [58 x float]* %ifm_buff0_1, [58 x float]* %ifm_buff0_2, [58 x float]* %ifm_buff0_3, [58 x float]* %ifm_buff0_4, [58 x float]* %ifm_buff0_5, [58 x float]* %ifm_buff0_6, [58 x float]* %ifm_buff0_7, [58 x float]* %ifm_buff0_8, [58 x float]* %ifm_buff0_9, [58 x float]* %ifm_buff0_10, [58 x float]* %ifm_buff0_11, [58 x float]* %ifm_buff0_12, [58 x float]* %ifm_buff0_13, [58 x float]* %ifm_buff0_14, [58 x float]* %ifm_buff0_15, [58 x float]* %ifm_buff1_0, [58 x float]* %ifm_buff1_1, [58 x float]* %ifm_buff1_2, [58 x float]* %ifm_buff1_3, [58 x float]* %ifm_buff1_4, [58 x float]* %ifm_buff1_5, [58 x float]* %ifm_buff1_6, [58 x float]* %ifm_buff1_7, [58 x float]* %ifm_buff1_8, [58 x float]* %ifm_buff1_9, [58 x float]* %ifm_buff1_10, [58 x float]* %ifm_buff1_11, [58 x float]* %ifm_buff1_12, [58 x float]* %ifm_buff1_13, [58 x float]* %ifm_buff1_14, [58 x float]* %ifm_buff1_15, [56 x float]* %ofm_buff0_0, [56 x float]* %ofm_buff0_1, [56 x float]* %ofm_buff0_2, [56 x float]* %ofm_buff0_3, [56 x float]* %ofm_buff0_4, [56 x float]* %ofm_buff0_5, [56 x float]* %ofm_buff0_6, [56 x float]* %ofm_buff0_7, [56 x float]* %ofm_buff0_8, [56 x float]* %ofm_buff0_9, [56 x float]* %ofm_buff0_10, [56 x float]* %ofm_buff0_11, [56 x float]* %ofm_buff0_12, [56 x float]* %ofm_buff0_13, [56 x float]* %ofm_buff0_14, [56 x float]* %ofm_buff0_15)" [finalwrapup.cpp:670]   --->   Operation 281 'call' <Predicate = (!icmp_ln644 & !icmp_ln648 & !icmp_ln658 & icmp_ln667)> <Delay = 1.86> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_3 : Operation 282 [2/2] (4.45ns)   --->   "%cofm_counter_6 = call fastcc i32 @conv_read(i512* %cofm, [56 x float]* %ofm_buff1_0, [56 x float]* %ofm_buff1_1, [56 x float]* %ofm_buff1_2, [56 x float]* %ofm_buff1_3, [56 x float]* %ofm_buff1_4, [56 x float]* %ofm_buff1_5, [56 x float]* %ofm_buff1_6, [56 x float]* %ofm_buff1_7, [56 x float]* %ofm_buff1_8, [56 x float]* %ofm_buff1_9, [56 x float]* %ofm_buff1_10, [56 x float]* %ofm_buff1_11, [56 x float]* %ofm_buff1_12, [56 x float]* %ofm_buff1_13, [56 x float]* %ofm_buff1_14, [56 x float]* %ofm_buff1_15, i32 %cofm_counter_8_load_3, i1 zeroext true)" [finalwrapup.cpp:671]   --->   Operation 282 'call' 'cofm_counter_6' <Predicate = (!icmp_ln644 & !icmp_ln648 & !icmp_ln658 & icmp_ln667)> <Delay = 4.45> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_3 : Operation 283 [1/1] (0.00ns)   --->   "%cifm_counter_8_load_1 = load i32* %cifm_counter_8" [finalwrapup.cpp:660]   --->   Operation 283 'load' 'cifm_counter_8_load_1' <Predicate = (!icmp_ln644 & !icmp_ln648 & icmp_ln658)> <Delay = 0.00>
ST_3 : Operation 284 [1/1] (0.00ns)   --->   "%cofm_counter_8_load_2 = load i32* %cofm_counter_8" [finalwrapup.cpp:662]   --->   Operation 284 'load' 'cofm_counter_8_load_2' <Predicate = (!icmp_ln644 & !icmp_ln648 & icmp_ln658)> <Delay = 0.00>
ST_3 : Operation 285 [2/2] (5.11ns)   --->   "%cifm_counter_5 = call fastcc i32 @write_row_ifm(i512* %cifm, [58 x float]* %ifm_buff1_0, [58 x float]* %ifm_buff1_1, [58 x float]* %ifm_buff1_2, [58 x float]* %ifm_buff1_3, [58 x float]* %ifm_buff1_4, [58 x float]* %ifm_buff1_5, [58 x float]* %ifm_buff1_6, [58 x float]* %ifm_buff1_7, [58 x float]* %ifm_buff1_8, [58 x float]* %ifm_buff1_9, [58 x float]* %ifm_buff1_10, [58 x float]* %ifm_buff1_11, [58 x float]* %ifm_buff1_12, [58 x float]* %ifm_buff1_13, [58 x float]* %ifm_buff1_14, [58 x float]* %ifm_buff1_15, i32 %cifm_counter_8_load_1, i1 zeroext true)" [finalwrapup.cpp:660]   --->   Operation 285 'call' 'cifm_counter_5' <Predicate = (!icmp_ln644 & !icmp_ln648 & icmp_ln658)> <Delay = 5.11> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_3 : Operation 286 [2/2] (1.86ns)   --->   "call fastcc void @conv_write([16 x float]* %filter_buff_0_0_0, [16 x float]* %filter_buff_0_0_1, [16 x float]* %filter_buff_0_0_2, [16 x float]* %filter_buff_0_1_0, [16 x float]* %filter_buff_0_1_1, [16 x float]* %filter_buff_0_1_2, [16 x float]* %filter_buff_0_2_0, [16 x float]* %filter_buff_0_2_1, [16 x float]* %filter_buff_0_2_2, [16 x float]* %filter_buff_1_0_0, [16 x float]* %filter_buff_1_0_1, [16 x float]* %filter_buff_1_0_2, [16 x float]* %filter_buff_1_1_0, [16 x float]* %filter_buff_1_1_1, [16 x float]* %filter_buff_1_1_2, [16 x float]* %filter_buff_1_2_0, [16 x float]* %filter_buff_1_2_1, [16 x float]* %filter_buff_1_2_2, [16 x float]* %filter_buff_2_0_0, [16 x float]* %filter_buff_2_0_1, [16 x float]* %filter_buff_2_0_2, [16 x float]* %filter_buff_2_1_0, [16 x float]* %filter_buff_2_1_1, [16 x float]* %filter_buff_2_1_2, [16 x float]* %filter_buff_2_2_0, [16 x float]* %filter_buff_2_2_1, [16 x float]* %filter_buff_2_2_2, [16 x float]* %filter_buff_3_0_0, [16 x float]* %filter_buff_3_0_1, [16 x float]* %filter_buff_3_0_2, [16 x float]* %filter_buff_3_1_0, [16 x float]* %filter_buff_3_1_1, [16 x float]* %filter_buff_3_1_2, [16 x float]* %filter_buff_3_2_0, [16 x float]* %filter_buff_3_2_1, [16 x float]* %filter_buff_3_2_2, [16 x float]* %filter_buff_4_0_0, [16 x float]* %filter_buff_4_0_1, [16 x float]* %filter_buff_4_0_2, [16 x float]* %filter_buff_4_1_0, [16 x float]* %filter_buff_4_1_1, [16 x float]* %filter_buff_4_1_2, [16 x float]* %filter_buff_4_2_0, [16 x float]* %filter_buff_4_2_1, [16 x float]* %filter_buff_4_2_2, [16 x float]* %filter_buff_5_0_0, [16 x float]* %filter_buff_5_0_1, [16 x float]* %filter_buff_5_0_2, [16 x float]* %filter_buff_5_1_0, [16 x float]* %filter_buff_5_1_1, [16 x float]* %filter_buff_5_1_2, [16 x float]* %filter_buff_5_2_0, [16 x float]* %filter_buff_5_2_1, [16 x float]* %filter_buff_5_2_2, [16 x float]* %filter_buff_6_0_0, [16 x float]* %filter_buff_6_0_1, [16 x float]* %filter_buff_6_0_2, [16 x float]* %filter_buff_6_1_0, [16 x float]* %filter_buff_6_1_1, [16 x float]* %filter_buff_6_1_2, [16 x float]* %filter_buff_6_2_0, [16 x float]* %filter_buff_6_2_1, [16 x float]* %filter_buff_6_2_2, [16 x float]* %filter_buff_7_0_0, [16 x float]* %filter_buff_7_0_1, [16 x float]* %filter_buff_7_0_2, [16 x float]* %filter_buff_7_1_0, [16 x float]* %filter_buff_7_1_1, [16 x float]* %filter_buff_7_1_2, [16 x float]* %filter_buff_7_2_0, [16 x float]* %filter_buff_7_2_1, [16 x float]* %filter_buff_7_2_2, [16 x float]* %filter_buff_8_0_0, [16 x float]* %filter_buff_8_0_1, [16 x float]* %filter_buff_8_0_2, [16 x float]* %filter_buff_8_1_0, [16 x float]* %filter_buff_8_1_1, [16 x float]* %filter_buff_8_1_2, [16 x float]* %filter_buff_8_2_0, [16 x float]* %filter_buff_8_2_1, [16 x float]* %filter_buff_8_2_2, [16 x float]* %filter_buff_9_0_0, [16 x float]* %filter_buff_9_0_1, [16 x float]* %filter_buff_9_0_2, [16 x float]* %filter_buff_9_1_0, [16 x float]* %filter_buff_9_1_1, [16 x float]* %filter_buff_9_1_2, [16 x float]* %filter_buff_9_2_0, [16 x float]* %filter_buff_9_2_1, [16 x float]* %filter_buff_9_2_2, [16 x float]* %filter_buff_10_0_0, [16 x float]* %filter_buff_10_0_1, [16 x float]* %filter_buff_10_0_2, [16 x float]* %filter_buff_10_1_0, [16 x float]* %filter_buff_10_1_1, [16 x float]* %filter_buff_10_1_2, [16 x float]* %filter_buff_10_2_0, [16 x float]* %filter_buff_10_2_1, [16 x float]* %filter_buff_10_2_2, [16 x float]* %filter_buff_11_0_0, [16 x float]* %filter_buff_11_0_1, [16 x float]* %filter_buff_11_0_2, [16 x float]* %filter_buff_11_1_0, [16 x float]* %filter_buff_11_1_1, [16 x float]* %filter_buff_11_1_2, [16 x float]* %filter_buff_11_2_0, [16 x float]* %filter_buff_11_2_1, [16 x float]* %filter_buff_11_2_2, [16 x float]* %filter_buff_12_0_0, [16 x float]* %filter_buff_12_0_1, [16 x float]* %filter_buff_12_0_2, [16 x float]* %filter_buff_12_1_0, [16 x float]* %filter_buff_12_1_1, [16 x float]* %filter_buff_12_1_2, [16 x float]* %filter_buff_12_2_0, [16 x float]* %filter_buff_12_2_1, [16 x float]* %filter_buff_12_2_2, [16 x float]* %filter_buff_13_0_0, [16 x float]* %filter_buff_13_0_1, [16 x float]* %filter_buff_13_0_2, [16 x float]* %filter_buff_13_1_0, [16 x float]* %filter_buff_13_1_1, [16 x float]* %filter_buff_13_1_2, [16 x float]* %filter_buff_13_2_0, [16 x float]* %filter_buff_13_2_1, [16 x float]* %filter_buff_13_2_2, [16 x float]* %filter_buff_14_0_0, [16 x float]* %filter_buff_14_0_1, [16 x float]* %filter_buff_14_0_2, [16 x float]* %filter_buff_14_1_0, [16 x float]* %filter_buff_14_1_1, [16 x float]* %filter_buff_14_1_2, [16 x float]* %filter_buff_14_2_0, [16 x float]* %filter_buff_14_2_1, [16 x float]* %filter_buff_14_2_2, [16 x float]* %filter_buff_15_0_0, [16 x float]* %filter_buff_15_0_1, [16 x float]* %filter_buff_15_0_2, [16 x float]* %filter_buff_15_1_0, [16 x float]* %filter_buff_15_1_1, [16 x float]* %filter_buff_15_1_2, [16 x float]* %filter_buff_15_2_0, [16 x float]* %filter_buff_15_2_1, [16 x float]* %filter_buff_15_2_2, [58 x float]* %ifm_buff2_0, [58 x float]* %ifm_buff2_1, [58 x float]* %ifm_buff2_2, [58 x float]* %ifm_buff2_3, [58 x float]* %ifm_buff2_4, [58 x float]* %ifm_buff2_5, [58 x float]* %ifm_buff2_6, [58 x float]* %ifm_buff2_7, [58 x float]* %ifm_buff2_8, [58 x float]* %ifm_buff2_9, [58 x float]* %ifm_buff2_10, [58 x float]* %ifm_buff2_11, [58 x float]* %ifm_buff2_12, [58 x float]* %ifm_buff2_13, [58 x float]* %ifm_buff2_14, [58 x float]* %ifm_buff2_15, [58 x float]* %ifm_buff3_0, [58 x float]* %ifm_buff3_1, [58 x float]* %ifm_buff3_2, [58 x float]* %ifm_buff3_3, [58 x float]* %ifm_buff3_4, [58 x float]* %ifm_buff3_5, [58 x float]* %ifm_buff3_6, [58 x float]* %ifm_buff3_7, [58 x float]* %ifm_buff3_8, [58 x float]* %ifm_buff3_9, [58 x float]* %ifm_buff3_10, [58 x float]* %ifm_buff3_11, [58 x float]* %ifm_buff3_12, [58 x float]* %ifm_buff3_13, [58 x float]* %ifm_buff3_14, [58 x float]* %ifm_buff3_15, [58 x float]* %ifm_buff0_0, [58 x float]* %ifm_buff0_1, [58 x float]* %ifm_buff0_2, [58 x float]* %ifm_buff0_3, [58 x float]* %ifm_buff0_4, [58 x float]* %ifm_buff0_5, [58 x float]* %ifm_buff0_6, [58 x float]* %ifm_buff0_7, [58 x float]* %ifm_buff0_8, [58 x float]* %ifm_buff0_9, [58 x float]* %ifm_buff0_10, [58 x float]* %ifm_buff0_11, [58 x float]* %ifm_buff0_12, [58 x float]* %ifm_buff0_13, [58 x float]* %ifm_buff0_14, [58 x float]* %ifm_buff0_15, [56 x float]* %ofm_buff1_0, [56 x float]* %ofm_buff1_1, [56 x float]* %ofm_buff1_2, [56 x float]* %ofm_buff1_3, [56 x float]* %ofm_buff1_4, [56 x float]* %ofm_buff1_5, [56 x float]* %ofm_buff1_6, [56 x float]* %ofm_buff1_7, [56 x float]* %ofm_buff1_8, [56 x float]* %ofm_buff1_9, [56 x float]* %ofm_buff1_10, [56 x float]* %ofm_buff1_11, [56 x float]* %ofm_buff1_12, [56 x float]* %ofm_buff1_13, [56 x float]* %ofm_buff1_14, [56 x float]* %ofm_buff1_15)" [finalwrapup.cpp:661]   --->   Operation 286 'call' <Predicate = (!icmp_ln644 & !icmp_ln648 & icmp_ln658)> <Delay = 1.86> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_3 : Operation 287 [2/2] (4.45ns)   --->   "%cofm_counter_5 = call fastcc i32 @conv_read(i512* %cofm, [56 x float]* %ofm_buff0_0, [56 x float]* %ofm_buff0_1, [56 x float]* %ofm_buff0_2, [56 x float]* %ofm_buff0_3, [56 x float]* %ofm_buff0_4, [56 x float]* %ofm_buff0_5, [56 x float]* %ofm_buff0_6, [56 x float]* %ofm_buff0_7, [56 x float]* %ofm_buff0_8, [56 x float]* %ofm_buff0_9, [56 x float]* %ofm_buff0_10, [56 x float]* %ofm_buff0_11, [56 x float]* %ofm_buff0_12, [56 x float]* %ofm_buff0_13, [56 x float]* %ofm_buff0_14, [56 x float]* %ofm_buff0_15, i32 %cofm_counter_8_load_2, i1 zeroext true)" [finalwrapup.cpp:662]   --->   Operation 287 'call' 'cofm_counter_5' <Predicate = (!icmp_ln644 & !icmp_ln648 & icmp_ln658)> <Delay = 4.45> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_3 : Operation 288 [1/1] (0.00ns)   --->   "%cifm_counter_8_load = load i32* %cifm_counter_8" [finalwrapup.cpp:650]   --->   Operation 288 'load' 'cifm_counter_8_load' <Predicate = (!icmp_ln644 & icmp_ln648)> <Delay = 0.00>
ST_3 : Operation 289 [1/1] (0.00ns)   --->   "%cofm_counter_8_load_1 = load i32* %cofm_counter_8" [finalwrapup.cpp:652]   --->   Operation 289 'load' 'cofm_counter_8_load_1' <Predicate = (!icmp_ln644 & icmp_ln648)> <Delay = 0.00>
ST_3 : Operation 290 [2/2] (5.11ns)   --->   "%cifm_counter = call fastcc i32 @write_row_ifm(i512* %cifm, [58 x float]* %ifm_buff0_0, [58 x float]* %ifm_buff0_1, [58 x float]* %ifm_buff0_2, [58 x float]* %ifm_buff0_3, [58 x float]* %ifm_buff0_4, [58 x float]* %ifm_buff0_5, [58 x float]* %ifm_buff0_6, [58 x float]* %ifm_buff0_7, [58 x float]* %ifm_buff0_8, [58 x float]* %ifm_buff0_9, [58 x float]* %ifm_buff0_10, [58 x float]* %ifm_buff0_11, [58 x float]* %ifm_buff0_12, [58 x float]* %ifm_buff0_13, [58 x float]* %ifm_buff0_14, [58 x float]* %ifm_buff0_15, i32 %cifm_counter_8_load, i1 zeroext true)" [finalwrapup.cpp:650]   --->   Operation 290 'call' 'cifm_counter' <Predicate = (!icmp_ln644 & icmp_ln648)> <Delay = 5.11> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_3 : Operation 291 [2/2] (1.86ns)   --->   "call fastcc void @conv_write([16 x float]* %filter_buff_0_0_0, [16 x float]* %filter_buff_0_0_1, [16 x float]* %filter_buff_0_0_2, [16 x float]* %filter_buff_0_1_0, [16 x float]* %filter_buff_0_1_1, [16 x float]* %filter_buff_0_1_2, [16 x float]* %filter_buff_0_2_0, [16 x float]* %filter_buff_0_2_1, [16 x float]* %filter_buff_0_2_2, [16 x float]* %filter_buff_1_0_0, [16 x float]* %filter_buff_1_0_1, [16 x float]* %filter_buff_1_0_2, [16 x float]* %filter_buff_1_1_0, [16 x float]* %filter_buff_1_1_1, [16 x float]* %filter_buff_1_1_2, [16 x float]* %filter_buff_1_2_0, [16 x float]* %filter_buff_1_2_1, [16 x float]* %filter_buff_1_2_2, [16 x float]* %filter_buff_2_0_0, [16 x float]* %filter_buff_2_0_1, [16 x float]* %filter_buff_2_0_2, [16 x float]* %filter_buff_2_1_0, [16 x float]* %filter_buff_2_1_1, [16 x float]* %filter_buff_2_1_2, [16 x float]* %filter_buff_2_2_0, [16 x float]* %filter_buff_2_2_1, [16 x float]* %filter_buff_2_2_2, [16 x float]* %filter_buff_3_0_0, [16 x float]* %filter_buff_3_0_1, [16 x float]* %filter_buff_3_0_2, [16 x float]* %filter_buff_3_1_0, [16 x float]* %filter_buff_3_1_1, [16 x float]* %filter_buff_3_1_2, [16 x float]* %filter_buff_3_2_0, [16 x float]* %filter_buff_3_2_1, [16 x float]* %filter_buff_3_2_2, [16 x float]* %filter_buff_4_0_0, [16 x float]* %filter_buff_4_0_1, [16 x float]* %filter_buff_4_0_2, [16 x float]* %filter_buff_4_1_0, [16 x float]* %filter_buff_4_1_1, [16 x float]* %filter_buff_4_1_2, [16 x float]* %filter_buff_4_2_0, [16 x float]* %filter_buff_4_2_1, [16 x float]* %filter_buff_4_2_2, [16 x float]* %filter_buff_5_0_0, [16 x float]* %filter_buff_5_0_1, [16 x float]* %filter_buff_5_0_2, [16 x float]* %filter_buff_5_1_0, [16 x float]* %filter_buff_5_1_1, [16 x float]* %filter_buff_5_1_2, [16 x float]* %filter_buff_5_2_0, [16 x float]* %filter_buff_5_2_1, [16 x float]* %filter_buff_5_2_2, [16 x float]* %filter_buff_6_0_0, [16 x float]* %filter_buff_6_0_1, [16 x float]* %filter_buff_6_0_2, [16 x float]* %filter_buff_6_1_0, [16 x float]* %filter_buff_6_1_1, [16 x float]* %filter_buff_6_1_2, [16 x float]* %filter_buff_6_2_0, [16 x float]* %filter_buff_6_2_1, [16 x float]* %filter_buff_6_2_2, [16 x float]* %filter_buff_7_0_0, [16 x float]* %filter_buff_7_0_1, [16 x float]* %filter_buff_7_0_2, [16 x float]* %filter_buff_7_1_0, [16 x float]* %filter_buff_7_1_1, [16 x float]* %filter_buff_7_1_2, [16 x float]* %filter_buff_7_2_0, [16 x float]* %filter_buff_7_2_1, [16 x float]* %filter_buff_7_2_2, [16 x float]* %filter_buff_8_0_0, [16 x float]* %filter_buff_8_0_1, [16 x float]* %filter_buff_8_0_2, [16 x float]* %filter_buff_8_1_0, [16 x float]* %filter_buff_8_1_1, [16 x float]* %filter_buff_8_1_2, [16 x float]* %filter_buff_8_2_0, [16 x float]* %filter_buff_8_2_1, [16 x float]* %filter_buff_8_2_2, [16 x float]* %filter_buff_9_0_0, [16 x float]* %filter_buff_9_0_1, [16 x float]* %filter_buff_9_0_2, [16 x float]* %filter_buff_9_1_0, [16 x float]* %filter_buff_9_1_1, [16 x float]* %filter_buff_9_1_2, [16 x float]* %filter_buff_9_2_0, [16 x float]* %filter_buff_9_2_1, [16 x float]* %filter_buff_9_2_2, [16 x float]* %filter_buff_10_0_0, [16 x float]* %filter_buff_10_0_1, [16 x float]* %filter_buff_10_0_2, [16 x float]* %filter_buff_10_1_0, [16 x float]* %filter_buff_10_1_1, [16 x float]* %filter_buff_10_1_2, [16 x float]* %filter_buff_10_2_0, [16 x float]* %filter_buff_10_2_1, [16 x float]* %filter_buff_10_2_2, [16 x float]* %filter_buff_11_0_0, [16 x float]* %filter_buff_11_0_1, [16 x float]* %filter_buff_11_0_2, [16 x float]* %filter_buff_11_1_0, [16 x float]* %filter_buff_11_1_1, [16 x float]* %filter_buff_11_1_2, [16 x float]* %filter_buff_11_2_0, [16 x float]* %filter_buff_11_2_1, [16 x float]* %filter_buff_11_2_2, [16 x float]* %filter_buff_12_0_0, [16 x float]* %filter_buff_12_0_1, [16 x float]* %filter_buff_12_0_2, [16 x float]* %filter_buff_12_1_0, [16 x float]* %filter_buff_12_1_1, [16 x float]* %filter_buff_12_1_2, [16 x float]* %filter_buff_12_2_0, [16 x float]* %filter_buff_12_2_1, [16 x float]* %filter_buff_12_2_2, [16 x float]* %filter_buff_13_0_0, [16 x float]* %filter_buff_13_0_1, [16 x float]* %filter_buff_13_0_2, [16 x float]* %filter_buff_13_1_0, [16 x float]* %filter_buff_13_1_1, [16 x float]* %filter_buff_13_1_2, [16 x float]* %filter_buff_13_2_0, [16 x float]* %filter_buff_13_2_1, [16 x float]* %filter_buff_13_2_2, [16 x float]* %filter_buff_14_0_0, [16 x float]* %filter_buff_14_0_1, [16 x float]* %filter_buff_14_0_2, [16 x float]* %filter_buff_14_1_0, [16 x float]* %filter_buff_14_1_1, [16 x float]* %filter_buff_14_1_2, [16 x float]* %filter_buff_14_2_0, [16 x float]* %filter_buff_14_2_1, [16 x float]* %filter_buff_14_2_2, [16 x float]* %filter_buff_15_0_0, [16 x float]* %filter_buff_15_0_1, [16 x float]* %filter_buff_15_0_2, [16 x float]* %filter_buff_15_1_0, [16 x float]* %filter_buff_15_1_1, [16 x float]* %filter_buff_15_1_2, [16 x float]* %filter_buff_15_2_0, [16 x float]* %filter_buff_15_2_1, [16 x float]* %filter_buff_15_2_2, [58 x float]* %ifm_buff1_0, [58 x float]* %ifm_buff1_1, [58 x float]* %ifm_buff1_2, [58 x float]* %ifm_buff1_3, [58 x float]* %ifm_buff1_4, [58 x float]* %ifm_buff1_5, [58 x float]* %ifm_buff1_6, [58 x float]* %ifm_buff1_7, [58 x float]* %ifm_buff1_8, [58 x float]* %ifm_buff1_9, [58 x float]* %ifm_buff1_10, [58 x float]* %ifm_buff1_11, [58 x float]* %ifm_buff1_12, [58 x float]* %ifm_buff1_13, [58 x float]* %ifm_buff1_14, [58 x float]* %ifm_buff1_15, [58 x float]* %ifm_buff2_0, [58 x float]* %ifm_buff2_1, [58 x float]* %ifm_buff2_2, [58 x float]* %ifm_buff2_3, [58 x float]* %ifm_buff2_4, [58 x float]* %ifm_buff2_5, [58 x float]* %ifm_buff2_6, [58 x float]* %ifm_buff2_7, [58 x float]* %ifm_buff2_8, [58 x float]* %ifm_buff2_9, [58 x float]* %ifm_buff2_10, [58 x float]* %ifm_buff2_11, [58 x float]* %ifm_buff2_12, [58 x float]* %ifm_buff2_13, [58 x float]* %ifm_buff2_14, [58 x float]* %ifm_buff2_15, [58 x float]* %ifm_buff3_0, [58 x float]* %ifm_buff3_1, [58 x float]* %ifm_buff3_2, [58 x float]* %ifm_buff3_3, [58 x float]* %ifm_buff3_4, [58 x float]* %ifm_buff3_5, [58 x float]* %ifm_buff3_6, [58 x float]* %ifm_buff3_7, [58 x float]* %ifm_buff3_8, [58 x float]* %ifm_buff3_9, [58 x float]* %ifm_buff3_10, [58 x float]* %ifm_buff3_11, [58 x float]* %ifm_buff3_12, [58 x float]* %ifm_buff3_13, [58 x float]* %ifm_buff3_14, [58 x float]* %ifm_buff3_15, [56 x float]* %ofm_buff0_0, [56 x float]* %ofm_buff0_1, [56 x float]* %ofm_buff0_2, [56 x float]* %ofm_buff0_3, [56 x float]* %ofm_buff0_4, [56 x float]* %ofm_buff0_5, [56 x float]* %ofm_buff0_6, [56 x float]* %ofm_buff0_7, [56 x float]* %ofm_buff0_8, [56 x float]* %ofm_buff0_9, [56 x float]* %ofm_buff0_10, [56 x float]* %ofm_buff0_11, [56 x float]* %ofm_buff0_12, [56 x float]* %ofm_buff0_13, [56 x float]* %ofm_buff0_14, [56 x float]* %ofm_buff0_15)" [finalwrapup.cpp:651]   --->   Operation 291 'call' <Predicate = (!icmp_ln644 & icmp_ln648)> <Delay = 1.86> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_3 : Operation 292 [1/1] (1.42ns)   --->   "%icmp_ln652 = icmp ne i6 %row_0, 0" [finalwrapup.cpp:652]   --->   Operation 292 'icmp' 'icmp_ln652' <Predicate = (!icmp_ln644 & icmp_ln648)> <Delay = 1.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 293 [2/2] (4.45ns)   --->   "%cofm_counter = call fastcc i32 @conv_read(i512* %cofm, [56 x float]* %ofm_buff1_0, [56 x float]* %ofm_buff1_1, [56 x float]* %ofm_buff1_2, [56 x float]* %ofm_buff1_3, [56 x float]* %ofm_buff1_4, [56 x float]* %ofm_buff1_5, [56 x float]* %ofm_buff1_6, [56 x float]* %ofm_buff1_7, [56 x float]* %ofm_buff1_8, [56 x float]* %ofm_buff1_9, [56 x float]* %ofm_buff1_10, [56 x float]* %ofm_buff1_11, [56 x float]* %ofm_buff1_12, [56 x float]* %ofm_buff1_13, [56 x float]* %ofm_buff1_14, [56 x float]* %ofm_buff1_15, i32 %cofm_counter_8_load_1, i1 zeroext %icmp_ln652)" [finalwrapup.cpp:652]   --->   Operation 293 'call' 'cofm_counter' <Predicate = (!icmp_ln644 & icmp_ln648)> <Delay = 4.45> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_3 : Operation 294 [1/1] (0.00ns)   --->   "%cofm_counter_8_load = load i32* %cofm_counter_8" [finalwrapup.cpp:692]   --->   Operation 294 'load' 'cofm_counter_8_load' <Predicate = (icmp_ln644)> <Delay = 0.00>
ST_3 : Operation 295 [2/2] (4.45ns)   --->   "%call_ret222799 = call fastcc i32 @conv_read(i512* %cofm, [56 x float]* %ofm_buff1_0, [56 x float]* %ofm_buff1_1, [56 x float]* %ofm_buff1_2, [56 x float]* %ofm_buff1_3, [56 x float]* %ofm_buff1_4, [56 x float]* %ofm_buff1_5, [56 x float]* %ofm_buff1_6, [56 x float]* %ofm_buff1_7, [56 x float]* %ofm_buff1_8, [56 x float]* %ofm_buff1_9, [56 x float]* %ofm_buff1_10, [56 x float]* %ofm_buff1_11, [56 x float]* %ofm_buff1_12, [56 x float]* %ofm_buff1_13, [56 x float]* %ofm_buff1_14, [56 x float]* %ofm_buff1_15, i32 %cofm_counter_8_load, i1 zeroext true)" [finalwrapup.cpp:692]   --->   Operation 295 'call' 'call_ret222799' <Predicate = (icmp_ln644)> <Delay = 4.45> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 4 <SV = 3> <Delay = 5.31>
ST_4 : Operation 296 [1/2] (1.76ns)   --->   "%cifm_counter_7 = call fastcc i32 @write_row_ifm(i512* %cifm, [58 x float]* %ifm_buff3_0, [58 x float]* %ifm_buff3_1, [58 x float]* %ifm_buff3_2, [58 x float]* %ifm_buff3_3, [58 x float]* %ifm_buff3_4, [58 x float]* %ifm_buff3_5, [58 x float]* %ifm_buff3_6, [58 x float]* %ifm_buff3_7, [58 x float]* %ifm_buff3_8, [58 x float]* %ifm_buff3_9, [58 x float]* %ifm_buff3_10, [58 x float]* %ifm_buff3_11, [58 x float]* %ifm_buff3_12, [58 x float]* %ifm_buff3_13, [58 x float]* %ifm_buff3_14, [58 x float]* %ifm_buff3_15, i32 %cifm_counter_8_load_3, i1 zeroext %icmp_ln678)" [finalwrapup.cpp:678]   --->   Operation 296 'call' 'cifm_counter_7' <Predicate = (!icmp_ln648 & !icmp_ln658 & !icmp_ln667 & icmp_ln676)> <Delay = 1.76> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_4 : Operation 297 [1/2] (0.00ns)   --->   "call fastcc void @conv_write([16 x float]* %filter_buff_0_0_0, [16 x float]* %filter_buff_0_0_1, [16 x float]* %filter_buff_0_0_2, [16 x float]* %filter_buff_0_1_0, [16 x float]* %filter_buff_0_1_1, [16 x float]* %filter_buff_0_1_2, [16 x float]* %filter_buff_0_2_0, [16 x float]* %filter_buff_0_2_1, [16 x float]* %filter_buff_0_2_2, [16 x float]* %filter_buff_1_0_0, [16 x float]* %filter_buff_1_0_1, [16 x float]* %filter_buff_1_0_2, [16 x float]* %filter_buff_1_1_0, [16 x float]* %filter_buff_1_1_1, [16 x float]* %filter_buff_1_1_2, [16 x float]* %filter_buff_1_2_0, [16 x float]* %filter_buff_1_2_1, [16 x float]* %filter_buff_1_2_2, [16 x float]* %filter_buff_2_0_0, [16 x float]* %filter_buff_2_0_1, [16 x float]* %filter_buff_2_0_2, [16 x float]* %filter_buff_2_1_0, [16 x float]* %filter_buff_2_1_1, [16 x float]* %filter_buff_2_1_2, [16 x float]* %filter_buff_2_2_0, [16 x float]* %filter_buff_2_2_1, [16 x float]* %filter_buff_2_2_2, [16 x float]* %filter_buff_3_0_0, [16 x float]* %filter_buff_3_0_1, [16 x float]* %filter_buff_3_0_2, [16 x float]* %filter_buff_3_1_0, [16 x float]* %filter_buff_3_1_1, [16 x float]* %filter_buff_3_1_2, [16 x float]* %filter_buff_3_2_0, [16 x float]* %filter_buff_3_2_1, [16 x float]* %filter_buff_3_2_2, [16 x float]* %filter_buff_4_0_0, [16 x float]* %filter_buff_4_0_1, [16 x float]* %filter_buff_4_0_2, [16 x float]* %filter_buff_4_1_0, [16 x float]* %filter_buff_4_1_1, [16 x float]* %filter_buff_4_1_2, [16 x float]* %filter_buff_4_2_0, [16 x float]* %filter_buff_4_2_1, [16 x float]* %filter_buff_4_2_2, [16 x float]* %filter_buff_5_0_0, [16 x float]* %filter_buff_5_0_1, [16 x float]* %filter_buff_5_0_2, [16 x float]* %filter_buff_5_1_0, [16 x float]* %filter_buff_5_1_1, [16 x float]* %filter_buff_5_1_2, [16 x float]* %filter_buff_5_2_0, [16 x float]* %filter_buff_5_2_1, [16 x float]* %filter_buff_5_2_2, [16 x float]* %filter_buff_6_0_0, [16 x float]* %filter_buff_6_0_1, [16 x float]* %filter_buff_6_0_2, [16 x float]* %filter_buff_6_1_0, [16 x float]* %filter_buff_6_1_1, [16 x float]* %filter_buff_6_1_2, [16 x float]* %filter_buff_6_2_0, [16 x float]* %filter_buff_6_2_1, [16 x float]* %filter_buff_6_2_2, [16 x float]* %filter_buff_7_0_0, [16 x float]* %filter_buff_7_0_1, [16 x float]* %filter_buff_7_0_2, [16 x float]* %filter_buff_7_1_0, [16 x float]* %filter_buff_7_1_1, [16 x float]* %filter_buff_7_1_2, [16 x float]* %filter_buff_7_2_0, [16 x float]* %filter_buff_7_2_1, [16 x float]* %filter_buff_7_2_2, [16 x float]* %filter_buff_8_0_0, [16 x float]* %filter_buff_8_0_1, [16 x float]* %filter_buff_8_0_2, [16 x float]* %filter_buff_8_1_0, [16 x float]* %filter_buff_8_1_1, [16 x float]* %filter_buff_8_1_2, [16 x float]* %filter_buff_8_2_0, [16 x float]* %filter_buff_8_2_1, [16 x float]* %filter_buff_8_2_2, [16 x float]* %filter_buff_9_0_0, [16 x float]* %filter_buff_9_0_1, [16 x float]* %filter_buff_9_0_2, [16 x float]* %filter_buff_9_1_0, [16 x float]* %filter_buff_9_1_1, [16 x float]* %filter_buff_9_1_2, [16 x float]* %filter_buff_9_2_0, [16 x float]* %filter_buff_9_2_1, [16 x float]* %filter_buff_9_2_2, [16 x float]* %filter_buff_10_0_0, [16 x float]* %filter_buff_10_0_1, [16 x float]* %filter_buff_10_0_2, [16 x float]* %filter_buff_10_1_0, [16 x float]* %filter_buff_10_1_1, [16 x float]* %filter_buff_10_1_2, [16 x float]* %filter_buff_10_2_0, [16 x float]* %filter_buff_10_2_1, [16 x float]* %filter_buff_10_2_2, [16 x float]* %filter_buff_11_0_0, [16 x float]* %filter_buff_11_0_1, [16 x float]* %filter_buff_11_0_2, [16 x float]* %filter_buff_11_1_0, [16 x float]* %filter_buff_11_1_1, [16 x float]* %filter_buff_11_1_2, [16 x float]* %filter_buff_11_2_0, [16 x float]* %filter_buff_11_2_1, [16 x float]* %filter_buff_11_2_2, [16 x float]* %filter_buff_12_0_0, [16 x float]* %filter_buff_12_0_1, [16 x float]* %filter_buff_12_0_2, [16 x float]* %filter_buff_12_1_0, [16 x float]* %filter_buff_12_1_1, [16 x float]* %filter_buff_12_1_2, [16 x float]* %filter_buff_12_2_0, [16 x float]* %filter_buff_12_2_1, [16 x float]* %filter_buff_12_2_2, [16 x float]* %filter_buff_13_0_0, [16 x float]* %filter_buff_13_0_1, [16 x float]* %filter_buff_13_0_2, [16 x float]* %filter_buff_13_1_0, [16 x float]* %filter_buff_13_1_1, [16 x float]* %filter_buff_13_1_2, [16 x float]* %filter_buff_13_2_0, [16 x float]* %filter_buff_13_2_1, [16 x float]* %filter_buff_13_2_2, [16 x float]* %filter_buff_14_0_0, [16 x float]* %filter_buff_14_0_1, [16 x float]* %filter_buff_14_0_2, [16 x float]* %filter_buff_14_1_0, [16 x float]* %filter_buff_14_1_1, [16 x float]* %filter_buff_14_1_2, [16 x float]* %filter_buff_14_2_0, [16 x float]* %filter_buff_14_2_1, [16 x float]* %filter_buff_14_2_2, [16 x float]* %filter_buff_15_0_0, [16 x float]* %filter_buff_15_0_1, [16 x float]* %filter_buff_15_0_2, [16 x float]* %filter_buff_15_1_0, [16 x float]* %filter_buff_15_1_1, [16 x float]* %filter_buff_15_1_2, [16 x float]* %filter_buff_15_2_0, [16 x float]* %filter_buff_15_2_1, [16 x float]* %filter_buff_15_2_2, [58 x float]* %ifm_buff0_0, [58 x float]* %ifm_buff0_1, [58 x float]* %ifm_buff0_2, [58 x float]* %ifm_buff0_3, [58 x float]* %ifm_buff0_4, [58 x float]* %ifm_buff0_5, [58 x float]* %ifm_buff0_6, [58 x float]* %ifm_buff0_7, [58 x float]* %ifm_buff0_8, [58 x float]* %ifm_buff0_9, [58 x float]* %ifm_buff0_10, [58 x float]* %ifm_buff0_11, [58 x float]* %ifm_buff0_12, [58 x float]* %ifm_buff0_13, [58 x float]* %ifm_buff0_14, [58 x float]* %ifm_buff0_15, [58 x float]* %ifm_buff1_0, [58 x float]* %ifm_buff1_1, [58 x float]* %ifm_buff1_2, [58 x float]* %ifm_buff1_3, [58 x float]* %ifm_buff1_4, [58 x float]* %ifm_buff1_5, [58 x float]* %ifm_buff1_6, [58 x float]* %ifm_buff1_7, [58 x float]* %ifm_buff1_8, [58 x float]* %ifm_buff1_9, [58 x float]* %ifm_buff1_10, [58 x float]* %ifm_buff1_11, [58 x float]* %ifm_buff1_12, [58 x float]* %ifm_buff1_13, [58 x float]* %ifm_buff1_14, [58 x float]* %ifm_buff1_15, [58 x float]* %ifm_buff2_0, [58 x float]* %ifm_buff2_1, [58 x float]* %ifm_buff2_2, [58 x float]* %ifm_buff2_3, [58 x float]* %ifm_buff2_4, [58 x float]* %ifm_buff2_5, [58 x float]* %ifm_buff2_6, [58 x float]* %ifm_buff2_7, [58 x float]* %ifm_buff2_8, [58 x float]* %ifm_buff2_9, [58 x float]* %ifm_buff2_10, [58 x float]* %ifm_buff2_11, [58 x float]* %ifm_buff2_12, [58 x float]* %ifm_buff2_13, [58 x float]* %ifm_buff2_14, [58 x float]* %ifm_buff2_15, [56 x float]* %ofm_buff1_0, [56 x float]* %ofm_buff1_1, [56 x float]* %ofm_buff1_2, [56 x float]* %ofm_buff1_3, [56 x float]* %ofm_buff1_4, [56 x float]* %ofm_buff1_5, [56 x float]* %ofm_buff1_6, [56 x float]* %ofm_buff1_7, [56 x float]* %ofm_buff1_8, [56 x float]* %ofm_buff1_9, [56 x float]* %ofm_buff1_10, [56 x float]* %ofm_buff1_11, [56 x float]* %ofm_buff1_12, [56 x float]* %ofm_buff1_13, [56 x float]* %ofm_buff1_14, [56 x float]* %ofm_buff1_15)" [finalwrapup.cpp:679]   --->   Operation 297 'call' <Predicate = (!icmp_ln648 & !icmp_ln658 & !icmp_ln667 & icmp_ln676)> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_4 : Operation 298 [1/2] (3.25ns)   --->   "%cofm_counter_7 = call fastcc i32 @conv_read(i512* %cofm, [56 x float]* %ofm_buff0_0, [56 x float]* %ofm_buff0_1, [56 x float]* %ofm_buff0_2, [56 x float]* %ofm_buff0_3, [56 x float]* %ofm_buff0_4, [56 x float]* %ofm_buff0_5, [56 x float]* %ofm_buff0_6, [56 x float]* %ofm_buff0_7, [56 x float]* %ofm_buff0_8, [56 x float]* %ofm_buff0_9, [56 x float]* %ofm_buff0_10, [56 x float]* %ofm_buff0_11, [56 x float]* %ofm_buff0_12, [56 x float]* %ofm_buff0_13, [56 x float]* %ofm_buff0_14, [56 x float]* %ofm_buff0_15, i32 %cofm_counter_8_load_4, i1 zeroext true)" [finalwrapup.cpp:680]   --->   Operation 298 'call' 'cofm_counter_7' <Predicate = (!icmp_ln648 & !icmp_ln658 & !icmp_ln667 & icmp_ln676)> <Delay = 3.25> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_4 : Operation 299 [1/1] (1.90ns)   --->   "store i32 %cofm_counter_7, i32* %cofm_counter_8" [finalwrapup.cpp:685]   --->   Operation 299 'store' <Predicate = (!icmp_ln648 & !icmp_ln658 & !icmp_ln667 & icmp_ln676)> <Delay = 1.90>
ST_4 : Operation 300 [1/1] (1.90ns)   --->   "store i32 %cifm_counter_7, i32* %cifm_counter_8" [finalwrapup.cpp:685]   --->   Operation 300 'store' <Predicate = (!icmp_ln648 & !icmp_ln658 & !icmp_ln667 & icmp_ln676)> <Delay = 1.90>
ST_4 : Operation 301 [1/1] (0.00ns)   --->   "br label %._crit_edge" [finalwrapup.cpp:685]   --->   Operation 301 'br' <Predicate = (!icmp_ln648 & !icmp_ln658 & !icmp_ln667 & icmp_ln676)> <Delay = 0.00>
ST_4 : Operation 302 [1/2] (1.76ns)   --->   "%cifm_counter_6 = call fastcc i32 @write_row_ifm(i512* %cifm, [58 x float]* %ifm_buff2_0, [58 x float]* %ifm_buff2_1, [58 x float]* %ifm_buff2_2, [58 x float]* %ifm_buff2_3, [58 x float]* %ifm_buff2_4, [58 x float]* %ifm_buff2_5, [58 x float]* %ifm_buff2_6, [58 x float]* %ifm_buff2_7, [58 x float]* %ifm_buff2_8, [58 x float]* %ifm_buff2_9, [58 x float]* %ifm_buff2_10, [58 x float]* %ifm_buff2_11, [58 x float]* %ifm_buff2_12, [58 x float]* %ifm_buff2_13, [58 x float]* %ifm_buff2_14, [58 x float]* %ifm_buff2_15, i32 %cifm_counter_8_load_2, i1 zeroext true)" [finalwrapup.cpp:669]   --->   Operation 302 'call' 'cifm_counter_6' <Predicate = (!icmp_ln648 & !icmp_ln658 & icmp_ln667)> <Delay = 1.76> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_4 : Operation 303 [1/2] (0.00ns)   --->   "call fastcc void @conv_write([16 x float]* %filter_buff_0_0_0, [16 x float]* %filter_buff_0_0_1, [16 x float]* %filter_buff_0_0_2, [16 x float]* %filter_buff_0_1_0, [16 x float]* %filter_buff_0_1_1, [16 x float]* %filter_buff_0_1_2, [16 x float]* %filter_buff_0_2_0, [16 x float]* %filter_buff_0_2_1, [16 x float]* %filter_buff_0_2_2, [16 x float]* %filter_buff_1_0_0, [16 x float]* %filter_buff_1_0_1, [16 x float]* %filter_buff_1_0_2, [16 x float]* %filter_buff_1_1_0, [16 x float]* %filter_buff_1_1_1, [16 x float]* %filter_buff_1_1_2, [16 x float]* %filter_buff_1_2_0, [16 x float]* %filter_buff_1_2_1, [16 x float]* %filter_buff_1_2_2, [16 x float]* %filter_buff_2_0_0, [16 x float]* %filter_buff_2_0_1, [16 x float]* %filter_buff_2_0_2, [16 x float]* %filter_buff_2_1_0, [16 x float]* %filter_buff_2_1_1, [16 x float]* %filter_buff_2_1_2, [16 x float]* %filter_buff_2_2_0, [16 x float]* %filter_buff_2_2_1, [16 x float]* %filter_buff_2_2_2, [16 x float]* %filter_buff_3_0_0, [16 x float]* %filter_buff_3_0_1, [16 x float]* %filter_buff_3_0_2, [16 x float]* %filter_buff_3_1_0, [16 x float]* %filter_buff_3_1_1, [16 x float]* %filter_buff_3_1_2, [16 x float]* %filter_buff_3_2_0, [16 x float]* %filter_buff_3_2_1, [16 x float]* %filter_buff_3_2_2, [16 x float]* %filter_buff_4_0_0, [16 x float]* %filter_buff_4_0_1, [16 x float]* %filter_buff_4_0_2, [16 x float]* %filter_buff_4_1_0, [16 x float]* %filter_buff_4_1_1, [16 x float]* %filter_buff_4_1_2, [16 x float]* %filter_buff_4_2_0, [16 x float]* %filter_buff_4_2_1, [16 x float]* %filter_buff_4_2_2, [16 x float]* %filter_buff_5_0_0, [16 x float]* %filter_buff_5_0_1, [16 x float]* %filter_buff_5_0_2, [16 x float]* %filter_buff_5_1_0, [16 x float]* %filter_buff_5_1_1, [16 x float]* %filter_buff_5_1_2, [16 x float]* %filter_buff_5_2_0, [16 x float]* %filter_buff_5_2_1, [16 x float]* %filter_buff_5_2_2, [16 x float]* %filter_buff_6_0_0, [16 x float]* %filter_buff_6_0_1, [16 x float]* %filter_buff_6_0_2, [16 x float]* %filter_buff_6_1_0, [16 x float]* %filter_buff_6_1_1, [16 x float]* %filter_buff_6_1_2, [16 x float]* %filter_buff_6_2_0, [16 x float]* %filter_buff_6_2_1, [16 x float]* %filter_buff_6_2_2, [16 x float]* %filter_buff_7_0_0, [16 x float]* %filter_buff_7_0_1, [16 x float]* %filter_buff_7_0_2, [16 x float]* %filter_buff_7_1_0, [16 x float]* %filter_buff_7_1_1, [16 x float]* %filter_buff_7_1_2, [16 x float]* %filter_buff_7_2_0, [16 x float]* %filter_buff_7_2_1, [16 x float]* %filter_buff_7_2_2, [16 x float]* %filter_buff_8_0_0, [16 x float]* %filter_buff_8_0_1, [16 x float]* %filter_buff_8_0_2, [16 x float]* %filter_buff_8_1_0, [16 x float]* %filter_buff_8_1_1, [16 x float]* %filter_buff_8_1_2, [16 x float]* %filter_buff_8_2_0, [16 x float]* %filter_buff_8_2_1, [16 x float]* %filter_buff_8_2_2, [16 x float]* %filter_buff_9_0_0, [16 x float]* %filter_buff_9_0_1, [16 x float]* %filter_buff_9_0_2, [16 x float]* %filter_buff_9_1_0, [16 x float]* %filter_buff_9_1_1, [16 x float]* %filter_buff_9_1_2, [16 x float]* %filter_buff_9_2_0, [16 x float]* %filter_buff_9_2_1, [16 x float]* %filter_buff_9_2_2, [16 x float]* %filter_buff_10_0_0, [16 x float]* %filter_buff_10_0_1, [16 x float]* %filter_buff_10_0_2, [16 x float]* %filter_buff_10_1_0, [16 x float]* %filter_buff_10_1_1, [16 x float]* %filter_buff_10_1_2, [16 x float]* %filter_buff_10_2_0, [16 x float]* %filter_buff_10_2_1, [16 x float]* %filter_buff_10_2_2, [16 x float]* %filter_buff_11_0_0, [16 x float]* %filter_buff_11_0_1, [16 x float]* %filter_buff_11_0_2, [16 x float]* %filter_buff_11_1_0, [16 x float]* %filter_buff_11_1_1, [16 x float]* %filter_buff_11_1_2, [16 x float]* %filter_buff_11_2_0, [16 x float]* %filter_buff_11_2_1, [16 x float]* %filter_buff_11_2_2, [16 x float]* %filter_buff_12_0_0, [16 x float]* %filter_buff_12_0_1, [16 x float]* %filter_buff_12_0_2, [16 x float]* %filter_buff_12_1_0, [16 x float]* %filter_buff_12_1_1, [16 x float]* %filter_buff_12_1_2, [16 x float]* %filter_buff_12_2_0, [16 x float]* %filter_buff_12_2_1, [16 x float]* %filter_buff_12_2_2, [16 x float]* %filter_buff_13_0_0, [16 x float]* %filter_buff_13_0_1, [16 x float]* %filter_buff_13_0_2, [16 x float]* %filter_buff_13_1_0, [16 x float]* %filter_buff_13_1_1, [16 x float]* %filter_buff_13_1_2, [16 x float]* %filter_buff_13_2_0, [16 x float]* %filter_buff_13_2_1, [16 x float]* %filter_buff_13_2_2, [16 x float]* %filter_buff_14_0_0, [16 x float]* %filter_buff_14_0_1, [16 x float]* %filter_buff_14_0_2, [16 x float]* %filter_buff_14_1_0, [16 x float]* %filter_buff_14_1_1, [16 x float]* %filter_buff_14_1_2, [16 x float]* %filter_buff_14_2_0, [16 x float]* %filter_buff_14_2_1, [16 x float]* %filter_buff_14_2_2, [16 x float]* %filter_buff_15_0_0, [16 x float]* %filter_buff_15_0_1, [16 x float]* %filter_buff_15_0_2, [16 x float]* %filter_buff_15_1_0, [16 x float]* %filter_buff_15_1_1, [16 x float]* %filter_buff_15_1_2, [16 x float]* %filter_buff_15_2_0, [16 x float]* %filter_buff_15_2_1, [16 x float]* %filter_buff_15_2_2, [58 x float]* %ifm_buff3_0, [58 x float]* %ifm_buff3_1, [58 x float]* %ifm_buff3_2, [58 x float]* %ifm_buff3_3, [58 x float]* %ifm_buff3_4, [58 x float]* %ifm_buff3_5, [58 x float]* %ifm_buff3_6, [58 x float]* %ifm_buff3_7, [58 x float]* %ifm_buff3_8, [58 x float]* %ifm_buff3_9, [58 x float]* %ifm_buff3_10, [58 x float]* %ifm_buff3_11, [58 x float]* %ifm_buff3_12, [58 x float]* %ifm_buff3_13, [58 x float]* %ifm_buff3_14, [58 x float]* %ifm_buff3_15, [58 x float]* %ifm_buff0_0, [58 x float]* %ifm_buff0_1, [58 x float]* %ifm_buff0_2, [58 x float]* %ifm_buff0_3, [58 x float]* %ifm_buff0_4, [58 x float]* %ifm_buff0_5, [58 x float]* %ifm_buff0_6, [58 x float]* %ifm_buff0_7, [58 x float]* %ifm_buff0_8, [58 x float]* %ifm_buff0_9, [58 x float]* %ifm_buff0_10, [58 x float]* %ifm_buff0_11, [58 x float]* %ifm_buff0_12, [58 x float]* %ifm_buff0_13, [58 x float]* %ifm_buff0_14, [58 x float]* %ifm_buff0_15, [58 x float]* %ifm_buff1_0, [58 x float]* %ifm_buff1_1, [58 x float]* %ifm_buff1_2, [58 x float]* %ifm_buff1_3, [58 x float]* %ifm_buff1_4, [58 x float]* %ifm_buff1_5, [58 x float]* %ifm_buff1_6, [58 x float]* %ifm_buff1_7, [58 x float]* %ifm_buff1_8, [58 x float]* %ifm_buff1_9, [58 x float]* %ifm_buff1_10, [58 x float]* %ifm_buff1_11, [58 x float]* %ifm_buff1_12, [58 x float]* %ifm_buff1_13, [58 x float]* %ifm_buff1_14, [58 x float]* %ifm_buff1_15, [56 x float]* %ofm_buff0_0, [56 x float]* %ofm_buff0_1, [56 x float]* %ofm_buff0_2, [56 x float]* %ofm_buff0_3, [56 x float]* %ofm_buff0_4, [56 x float]* %ofm_buff0_5, [56 x float]* %ofm_buff0_6, [56 x float]* %ofm_buff0_7, [56 x float]* %ofm_buff0_8, [56 x float]* %ofm_buff0_9, [56 x float]* %ofm_buff0_10, [56 x float]* %ofm_buff0_11, [56 x float]* %ofm_buff0_12, [56 x float]* %ofm_buff0_13, [56 x float]* %ofm_buff0_14, [56 x float]* %ofm_buff0_15)" [finalwrapup.cpp:670]   --->   Operation 303 'call' <Predicate = (!icmp_ln648 & !icmp_ln658 & icmp_ln667)> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_4 : Operation 304 [1/2] (3.25ns)   --->   "%cofm_counter_6 = call fastcc i32 @conv_read(i512* %cofm, [56 x float]* %ofm_buff1_0, [56 x float]* %ofm_buff1_1, [56 x float]* %ofm_buff1_2, [56 x float]* %ofm_buff1_3, [56 x float]* %ofm_buff1_4, [56 x float]* %ofm_buff1_5, [56 x float]* %ofm_buff1_6, [56 x float]* %ofm_buff1_7, [56 x float]* %ofm_buff1_8, [56 x float]* %ofm_buff1_9, [56 x float]* %ofm_buff1_10, [56 x float]* %ofm_buff1_11, [56 x float]* %ofm_buff1_12, [56 x float]* %ofm_buff1_13, [56 x float]* %ofm_buff1_14, [56 x float]* %ofm_buff1_15, i32 %cofm_counter_8_load_3, i1 zeroext true)" [finalwrapup.cpp:671]   --->   Operation 304 'call' 'cofm_counter_6' <Predicate = (!icmp_ln648 & !icmp_ln658 & icmp_ln667)> <Delay = 3.25> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_4 : Operation 305 [1/1] (1.90ns)   --->   "store i32 %cofm_counter_6, i32* %cofm_counter_8" [finalwrapup.cpp:676]   --->   Operation 305 'store' <Predicate = (!icmp_ln648 & !icmp_ln658 & icmp_ln667)> <Delay = 1.90>
ST_4 : Operation 306 [1/1] (1.90ns)   --->   "store i32 %cifm_counter_6, i32* %cifm_counter_8" [finalwrapup.cpp:676]   --->   Operation 306 'store' <Predicate = (!icmp_ln648 & !icmp_ln658 & icmp_ln667)> <Delay = 1.90>
ST_4 : Operation 307 [1/1] (0.00ns)   --->   "br label %._crit_edge" [finalwrapup.cpp:676]   --->   Operation 307 'br' <Predicate = (!icmp_ln648 & !icmp_ln658 & icmp_ln667)> <Delay = 0.00>
ST_4 : Operation 308 [1/2] (1.76ns)   --->   "%cifm_counter_5 = call fastcc i32 @write_row_ifm(i512* %cifm, [58 x float]* %ifm_buff1_0, [58 x float]* %ifm_buff1_1, [58 x float]* %ifm_buff1_2, [58 x float]* %ifm_buff1_3, [58 x float]* %ifm_buff1_4, [58 x float]* %ifm_buff1_5, [58 x float]* %ifm_buff1_6, [58 x float]* %ifm_buff1_7, [58 x float]* %ifm_buff1_8, [58 x float]* %ifm_buff1_9, [58 x float]* %ifm_buff1_10, [58 x float]* %ifm_buff1_11, [58 x float]* %ifm_buff1_12, [58 x float]* %ifm_buff1_13, [58 x float]* %ifm_buff1_14, [58 x float]* %ifm_buff1_15, i32 %cifm_counter_8_load_1, i1 zeroext true)" [finalwrapup.cpp:660]   --->   Operation 308 'call' 'cifm_counter_5' <Predicate = (!icmp_ln648 & icmp_ln658)> <Delay = 1.76> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_4 : Operation 309 [1/2] (0.00ns)   --->   "call fastcc void @conv_write([16 x float]* %filter_buff_0_0_0, [16 x float]* %filter_buff_0_0_1, [16 x float]* %filter_buff_0_0_2, [16 x float]* %filter_buff_0_1_0, [16 x float]* %filter_buff_0_1_1, [16 x float]* %filter_buff_0_1_2, [16 x float]* %filter_buff_0_2_0, [16 x float]* %filter_buff_0_2_1, [16 x float]* %filter_buff_0_2_2, [16 x float]* %filter_buff_1_0_0, [16 x float]* %filter_buff_1_0_1, [16 x float]* %filter_buff_1_0_2, [16 x float]* %filter_buff_1_1_0, [16 x float]* %filter_buff_1_1_1, [16 x float]* %filter_buff_1_1_2, [16 x float]* %filter_buff_1_2_0, [16 x float]* %filter_buff_1_2_1, [16 x float]* %filter_buff_1_2_2, [16 x float]* %filter_buff_2_0_0, [16 x float]* %filter_buff_2_0_1, [16 x float]* %filter_buff_2_0_2, [16 x float]* %filter_buff_2_1_0, [16 x float]* %filter_buff_2_1_1, [16 x float]* %filter_buff_2_1_2, [16 x float]* %filter_buff_2_2_0, [16 x float]* %filter_buff_2_2_1, [16 x float]* %filter_buff_2_2_2, [16 x float]* %filter_buff_3_0_0, [16 x float]* %filter_buff_3_0_1, [16 x float]* %filter_buff_3_0_2, [16 x float]* %filter_buff_3_1_0, [16 x float]* %filter_buff_3_1_1, [16 x float]* %filter_buff_3_1_2, [16 x float]* %filter_buff_3_2_0, [16 x float]* %filter_buff_3_2_1, [16 x float]* %filter_buff_3_2_2, [16 x float]* %filter_buff_4_0_0, [16 x float]* %filter_buff_4_0_1, [16 x float]* %filter_buff_4_0_2, [16 x float]* %filter_buff_4_1_0, [16 x float]* %filter_buff_4_1_1, [16 x float]* %filter_buff_4_1_2, [16 x float]* %filter_buff_4_2_0, [16 x float]* %filter_buff_4_2_1, [16 x float]* %filter_buff_4_2_2, [16 x float]* %filter_buff_5_0_0, [16 x float]* %filter_buff_5_0_1, [16 x float]* %filter_buff_5_0_2, [16 x float]* %filter_buff_5_1_0, [16 x float]* %filter_buff_5_1_1, [16 x float]* %filter_buff_5_1_2, [16 x float]* %filter_buff_5_2_0, [16 x float]* %filter_buff_5_2_1, [16 x float]* %filter_buff_5_2_2, [16 x float]* %filter_buff_6_0_0, [16 x float]* %filter_buff_6_0_1, [16 x float]* %filter_buff_6_0_2, [16 x float]* %filter_buff_6_1_0, [16 x float]* %filter_buff_6_1_1, [16 x float]* %filter_buff_6_1_2, [16 x float]* %filter_buff_6_2_0, [16 x float]* %filter_buff_6_2_1, [16 x float]* %filter_buff_6_2_2, [16 x float]* %filter_buff_7_0_0, [16 x float]* %filter_buff_7_0_1, [16 x float]* %filter_buff_7_0_2, [16 x float]* %filter_buff_7_1_0, [16 x float]* %filter_buff_7_1_1, [16 x float]* %filter_buff_7_1_2, [16 x float]* %filter_buff_7_2_0, [16 x float]* %filter_buff_7_2_1, [16 x float]* %filter_buff_7_2_2, [16 x float]* %filter_buff_8_0_0, [16 x float]* %filter_buff_8_0_1, [16 x float]* %filter_buff_8_0_2, [16 x float]* %filter_buff_8_1_0, [16 x float]* %filter_buff_8_1_1, [16 x float]* %filter_buff_8_1_2, [16 x float]* %filter_buff_8_2_0, [16 x float]* %filter_buff_8_2_1, [16 x float]* %filter_buff_8_2_2, [16 x float]* %filter_buff_9_0_0, [16 x float]* %filter_buff_9_0_1, [16 x float]* %filter_buff_9_0_2, [16 x float]* %filter_buff_9_1_0, [16 x float]* %filter_buff_9_1_1, [16 x float]* %filter_buff_9_1_2, [16 x float]* %filter_buff_9_2_0, [16 x float]* %filter_buff_9_2_1, [16 x float]* %filter_buff_9_2_2, [16 x float]* %filter_buff_10_0_0, [16 x float]* %filter_buff_10_0_1, [16 x float]* %filter_buff_10_0_2, [16 x float]* %filter_buff_10_1_0, [16 x float]* %filter_buff_10_1_1, [16 x float]* %filter_buff_10_1_2, [16 x float]* %filter_buff_10_2_0, [16 x float]* %filter_buff_10_2_1, [16 x float]* %filter_buff_10_2_2, [16 x float]* %filter_buff_11_0_0, [16 x float]* %filter_buff_11_0_1, [16 x float]* %filter_buff_11_0_2, [16 x float]* %filter_buff_11_1_0, [16 x float]* %filter_buff_11_1_1, [16 x float]* %filter_buff_11_1_2, [16 x float]* %filter_buff_11_2_0, [16 x float]* %filter_buff_11_2_1, [16 x float]* %filter_buff_11_2_2, [16 x float]* %filter_buff_12_0_0, [16 x float]* %filter_buff_12_0_1, [16 x float]* %filter_buff_12_0_2, [16 x float]* %filter_buff_12_1_0, [16 x float]* %filter_buff_12_1_1, [16 x float]* %filter_buff_12_1_2, [16 x float]* %filter_buff_12_2_0, [16 x float]* %filter_buff_12_2_1, [16 x float]* %filter_buff_12_2_2, [16 x float]* %filter_buff_13_0_0, [16 x float]* %filter_buff_13_0_1, [16 x float]* %filter_buff_13_0_2, [16 x float]* %filter_buff_13_1_0, [16 x float]* %filter_buff_13_1_1, [16 x float]* %filter_buff_13_1_2, [16 x float]* %filter_buff_13_2_0, [16 x float]* %filter_buff_13_2_1, [16 x float]* %filter_buff_13_2_2, [16 x float]* %filter_buff_14_0_0, [16 x float]* %filter_buff_14_0_1, [16 x float]* %filter_buff_14_0_2, [16 x float]* %filter_buff_14_1_0, [16 x float]* %filter_buff_14_1_1, [16 x float]* %filter_buff_14_1_2, [16 x float]* %filter_buff_14_2_0, [16 x float]* %filter_buff_14_2_1, [16 x float]* %filter_buff_14_2_2, [16 x float]* %filter_buff_15_0_0, [16 x float]* %filter_buff_15_0_1, [16 x float]* %filter_buff_15_0_2, [16 x float]* %filter_buff_15_1_0, [16 x float]* %filter_buff_15_1_1, [16 x float]* %filter_buff_15_1_2, [16 x float]* %filter_buff_15_2_0, [16 x float]* %filter_buff_15_2_1, [16 x float]* %filter_buff_15_2_2, [58 x float]* %ifm_buff2_0, [58 x float]* %ifm_buff2_1, [58 x float]* %ifm_buff2_2, [58 x float]* %ifm_buff2_3, [58 x float]* %ifm_buff2_4, [58 x float]* %ifm_buff2_5, [58 x float]* %ifm_buff2_6, [58 x float]* %ifm_buff2_7, [58 x float]* %ifm_buff2_8, [58 x float]* %ifm_buff2_9, [58 x float]* %ifm_buff2_10, [58 x float]* %ifm_buff2_11, [58 x float]* %ifm_buff2_12, [58 x float]* %ifm_buff2_13, [58 x float]* %ifm_buff2_14, [58 x float]* %ifm_buff2_15, [58 x float]* %ifm_buff3_0, [58 x float]* %ifm_buff3_1, [58 x float]* %ifm_buff3_2, [58 x float]* %ifm_buff3_3, [58 x float]* %ifm_buff3_4, [58 x float]* %ifm_buff3_5, [58 x float]* %ifm_buff3_6, [58 x float]* %ifm_buff3_7, [58 x float]* %ifm_buff3_8, [58 x float]* %ifm_buff3_9, [58 x float]* %ifm_buff3_10, [58 x float]* %ifm_buff3_11, [58 x float]* %ifm_buff3_12, [58 x float]* %ifm_buff3_13, [58 x float]* %ifm_buff3_14, [58 x float]* %ifm_buff3_15, [58 x float]* %ifm_buff0_0, [58 x float]* %ifm_buff0_1, [58 x float]* %ifm_buff0_2, [58 x float]* %ifm_buff0_3, [58 x float]* %ifm_buff0_4, [58 x float]* %ifm_buff0_5, [58 x float]* %ifm_buff0_6, [58 x float]* %ifm_buff0_7, [58 x float]* %ifm_buff0_8, [58 x float]* %ifm_buff0_9, [58 x float]* %ifm_buff0_10, [58 x float]* %ifm_buff0_11, [58 x float]* %ifm_buff0_12, [58 x float]* %ifm_buff0_13, [58 x float]* %ifm_buff0_14, [58 x float]* %ifm_buff0_15, [56 x float]* %ofm_buff1_0, [56 x float]* %ofm_buff1_1, [56 x float]* %ofm_buff1_2, [56 x float]* %ofm_buff1_3, [56 x float]* %ofm_buff1_4, [56 x float]* %ofm_buff1_5, [56 x float]* %ofm_buff1_6, [56 x float]* %ofm_buff1_7, [56 x float]* %ofm_buff1_8, [56 x float]* %ofm_buff1_9, [56 x float]* %ofm_buff1_10, [56 x float]* %ofm_buff1_11, [56 x float]* %ofm_buff1_12, [56 x float]* %ofm_buff1_13, [56 x float]* %ofm_buff1_14, [56 x float]* %ofm_buff1_15)" [finalwrapup.cpp:661]   --->   Operation 309 'call' <Predicate = (!icmp_ln648 & icmp_ln658)> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_4 : Operation 310 [1/2] (3.25ns)   --->   "%cofm_counter_5 = call fastcc i32 @conv_read(i512* %cofm, [56 x float]* %ofm_buff0_0, [56 x float]* %ofm_buff0_1, [56 x float]* %ofm_buff0_2, [56 x float]* %ofm_buff0_3, [56 x float]* %ofm_buff0_4, [56 x float]* %ofm_buff0_5, [56 x float]* %ofm_buff0_6, [56 x float]* %ofm_buff0_7, [56 x float]* %ofm_buff0_8, [56 x float]* %ofm_buff0_9, [56 x float]* %ofm_buff0_10, [56 x float]* %ofm_buff0_11, [56 x float]* %ofm_buff0_12, [56 x float]* %ofm_buff0_13, [56 x float]* %ofm_buff0_14, [56 x float]* %ofm_buff0_15, i32 %cofm_counter_8_load_2, i1 zeroext true)" [finalwrapup.cpp:662]   --->   Operation 310 'call' 'cofm_counter_5' <Predicate = (!icmp_ln648 & icmp_ln658)> <Delay = 3.25> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_4 : Operation 311 [1/1] (1.90ns)   --->   "store i32 %cofm_counter_5, i32* %cofm_counter_8" [finalwrapup.cpp:667]   --->   Operation 311 'store' <Predicate = (!icmp_ln648 & icmp_ln658)> <Delay = 1.90>
ST_4 : Operation 312 [1/1] (1.90ns)   --->   "store i32 %cifm_counter_5, i32* %cifm_counter_8" [finalwrapup.cpp:667]   --->   Operation 312 'store' <Predicate = (!icmp_ln648 & icmp_ln658)> <Delay = 1.90>
ST_4 : Operation 313 [1/1] (0.00ns)   --->   "br label %._crit_edge" [finalwrapup.cpp:667]   --->   Operation 313 'br' <Predicate = (!icmp_ln648 & icmp_ln658)> <Delay = 0.00>
ST_4 : Operation 314 [1/2] (1.76ns)   --->   "%cifm_counter = call fastcc i32 @write_row_ifm(i512* %cifm, [58 x float]* %ifm_buff0_0, [58 x float]* %ifm_buff0_1, [58 x float]* %ifm_buff0_2, [58 x float]* %ifm_buff0_3, [58 x float]* %ifm_buff0_4, [58 x float]* %ifm_buff0_5, [58 x float]* %ifm_buff0_6, [58 x float]* %ifm_buff0_7, [58 x float]* %ifm_buff0_8, [58 x float]* %ifm_buff0_9, [58 x float]* %ifm_buff0_10, [58 x float]* %ifm_buff0_11, [58 x float]* %ifm_buff0_12, [58 x float]* %ifm_buff0_13, [58 x float]* %ifm_buff0_14, [58 x float]* %ifm_buff0_15, i32 %cifm_counter_8_load, i1 zeroext true)" [finalwrapup.cpp:650]   --->   Operation 314 'call' 'cifm_counter' <Predicate = (icmp_ln648)> <Delay = 1.76> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_4 : Operation 315 [1/2] (0.00ns)   --->   "call fastcc void @conv_write([16 x float]* %filter_buff_0_0_0, [16 x float]* %filter_buff_0_0_1, [16 x float]* %filter_buff_0_0_2, [16 x float]* %filter_buff_0_1_0, [16 x float]* %filter_buff_0_1_1, [16 x float]* %filter_buff_0_1_2, [16 x float]* %filter_buff_0_2_0, [16 x float]* %filter_buff_0_2_1, [16 x float]* %filter_buff_0_2_2, [16 x float]* %filter_buff_1_0_0, [16 x float]* %filter_buff_1_0_1, [16 x float]* %filter_buff_1_0_2, [16 x float]* %filter_buff_1_1_0, [16 x float]* %filter_buff_1_1_1, [16 x float]* %filter_buff_1_1_2, [16 x float]* %filter_buff_1_2_0, [16 x float]* %filter_buff_1_2_1, [16 x float]* %filter_buff_1_2_2, [16 x float]* %filter_buff_2_0_0, [16 x float]* %filter_buff_2_0_1, [16 x float]* %filter_buff_2_0_2, [16 x float]* %filter_buff_2_1_0, [16 x float]* %filter_buff_2_1_1, [16 x float]* %filter_buff_2_1_2, [16 x float]* %filter_buff_2_2_0, [16 x float]* %filter_buff_2_2_1, [16 x float]* %filter_buff_2_2_2, [16 x float]* %filter_buff_3_0_0, [16 x float]* %filter_buff_3_0_1, [16 x float]* %filter_buff_3_0_2, [16 x float]* %filter_buff_3_1_0, [16 x float]* %filter_buff_3_1_1, [16 x float]* %filter_buff_3_1_2, [16 x float]* %filter_buff_3_2_0, [16 x float]* %filter_buff_3_2_1, [16 x float]* %filter_buff_3_2_2, [16 x float]* %filter_buff_4_0_0, [16 x float]* %filter_buff_4_0_1, [16 x float]* %filter_buff_4_0_2, [16 x float]* %filter_buff_4_1_0, [16 x float]* %filter_buff_4_1_1, [16 x float]* %filter_buff_4_1_2, [16 x float]* %filter_buff_4_2_0, [16 x float]* %filter_buff_4_2_1, [16 x float]* %filter_buff_4_2_2, [16 x float]* %filter_buff_5_0_0, [16 x float]* %filter_buff_5_0_1, [16 x float]* %filter_buff_5_0_2, [16 x float]* %filter_buff_5_1_0, [16 x float]* %filter_buff_5_1_1, [16 x float]* %filter_buff_5_1_2, [16 x float]* %filter_buff_5_2_0, [16 x float]* %filter_buff_5_2_1, [16 x float]* %filter_buff_5_2_2, [16 x float]* %filter_buff_6_0_0, [16 x float]* %filter_buff_6_0_1, [16 x float]* %filter_buff_6_0_2, [16 x float]* %filter_buff_6_1_0, [16 x float]* %filter_buff_6_1_1, [16 x float]* %filter_buff_6_1_2, [16 x float]* %filter_buff_6_2_0, [16 x float]* %filter_buff_6_2_1, [16 x float]* %filter_buff_6_2_2, [16 x float]* %filter_buff_7_0_0, [16 x float]* %filter_buff_7_0_1, [16 x float]* %filter_buff_7_0_2, [16 x float]* %filter_buff_7_1_0, [16 x float]* %filter_buff_7_1_1, [16 x float]* %filter_buff_7_1_2, [16 x float]* %filter_buff_7_2_0, [16 x float]* %filter_buff_7_2_1, [16 x float]* %filter_buff_7_2_2, [16 x float]* %filter_buff_8_0_0, [16 x float]* %filter_buff_8_0_1, [16 x float]* %filter_buff_8_0_2, [16 x float]* %filter_buff_8_1_0, [16 x float]* %filter_buff_8_1_1, [16 x float]* %filter_buff_8_1_2, [16 x float]* %filter_buff_8_2_0, [16 x float]* %filter_buff_8_2_1, [16 x float]* %filter_buff_8_2_2, [16 x float]* %filter_buff_9_0_0, [16 x float]* %filter_buff_9_0_1, [16 x float]* %filter_buff_9_0_2, [16 x float]* %filter_buff_9_1_0, [16 x float]* %filter_buff_9_1_1, [16 x float]* %filter_buff_9_1_2, [16 x float]* %filter_buff_9_2_0, [16 x float]* %filter_buff_9_2_1, [16 x float]* %filter_buff_9_2_2, [16 x float]* %filter_buff_10_0_0, [16 x float]* %filter_buff_10_0_1, [16 x float]* %filter_buff_10_0_2, [16 x float]* %filter_buff_10_1_0, [16 x float]* %filter_buff_10_1_1, [16 x float]* %filter_buff_10_1_2, [16 x float]* %filter_buff_10_2_0, [16 x float]* %filter_buff_10_2_1, [16 x float]* %filter_buff_10_2_2, [16 x float]* %filter_buff_11_0_0, [16 x float]* %filter_buff_11_0_1, [16 x float]* %filter_buff_11_0_2, [16 x float]* %filter_buff_11_1_0, [16 x float]* %filter_buff_11_1_1, [16 x float]* %filter_buff_11_1_2, [16 x float]* %filter_buff_11_2_0, [16 x float]* %filter_buff_11_2_1, [16 x float]* %filter_buff_11_2_2, [16 x float]* %filter_buff_12_0_0, [16 x float]* %filter_buff_12_0_1, [16 x float]* %filter_buff_12_0_2, [16 x float]* %filter_buff_12_1_0, [16 x float]* %filter_buff_12_1_1, [16 x float]* %filter_buff_12_1_2, [16 x float]* %filter_buff_12_2_0, [16 x float]* %filter_buff_12_2_1, [16 x float]* %filter_buff_12_2_2, [16 x float]* %filter_buff_13_0_0, [16 x float]* %filter_buff_13_0_1, [16 x float]* %filter_buff_13_0_2, [16 x float]* %filter_buff_13_1_0, [16 x float]* %filter_buff_13_1_1, [16 x float]* %filter_buff_13_1_2, [16 x float]* %filter_buff_13_2_0, [16 x float]* %filter_buff_13_2_1, [16 x float]* %filter_buff_13_2_2, [16 x float]* %filter_buff_14_0_0, [16 x float]* %filter_buff_14_0_1, [16 x float]* %filter_buff_14_0_2, [16 x float]* %filter_buff_14_1_0, [16 x float]* %filter_buff_14_1_1, [16 x float]* %filter_buff_14_1_2, [16 x float]* %filter_buff_14_2_0, [16 x float]* %filter_buff_14_2_1, [16 x float]* %filter_buff_14_2_2, [16 x float]* %filter_buff_15_0_0, [16 x float]* %filter_buff_15_0_1, [16 x float]* %filter_buff_15_0_2, [16 x float]* %filter_buff_15_1_0, [16 x float]* %filter_buff_15_1_1, [16 x float]* %filter_buff_15_1_2, [16 x float]* %filter_buff_15_2_0, [16 x float]* %filter_buff_15_2_1, [16 x float]* %filter_buff_15_2_2, [58 x float]* %ifm_buff1_0, [58 x float]* %ifm_buff1_1, [58 x float]* %ifm_buff1_2, [58 x float]* %ifm_buff1_3, [58 x float]* %ifm_buff1_4, [58 x float]* %ifm_buff1_5, [58 x float]* %ifm_buff1_6, [58 x float]* %ifm_buff1_7, [58 x float]* %ifm_buff1_8, [58 x float]* %ifm_buff1_9, [58 x float]* %ifm_buff1_10, [58 x float]* %ifm_buff1_11, [58 x float]* %ifm_buff1_12, [58 x float]* %ifm_buff1_13, [58 x float]* %ifm_buff1_14, [58 x float]* %ifm_buff1_15, [58 x float]* %ifm_buff2_0, [58 x float]* %ifm_buff2_1, [58 x float]* %ifm_buff2_2, [58 x float]* %ifm_buff2_3, [58 x float]* %ifm_buff2_4, [58 x float]* %ifm_buff2_5, [58 x float]* %ifm_buff2_6, [58 x float]* %ifm_buff2_7, [58 x float]* %ifm_buff2_8, [58 x float]* %ifm_buff2_9, [58 x float]* %ifm_buff2_10, [58 x float]* %ifm_buff2_11, [58 x float]* %ifm_buff2_12, [58 x float]* %ifm_buff2_13, [58 x float]* %ifm_buff2_14, [58 x float]* %ifm_buff2_15, [58 x float]* %ifm_buff3_0, [58 x float]* %ifm_buff3_1, [58 x float]* %ifm_buff3_2, [58 x float]* %ifm_buff3_3, [58 x float]* %ifm_buff3_4, [58 x float]* %ifm_buff3_5, [58 x float]* %ifm_buff3_6, [58 x float]* %ifm_buff3_7, [58 x float]* %ifm_buff3_8, [58 x float]* %ifm_buff3_9, [58 x float]* %ifm_buff3_10, [58 x float]* %ifm_buff3_11, [58 x float]* %ifm_buff3_12, [58 x float]* %ifm_buff3_13, [58 x float]* %ifm_buff3_14, [58 x float]* %ifm_buff3_15, [56 x float]* %ofm_buff0_0, [56 x float]* %ofm_buff0_1, [56 x float]* %ofm_buff0_2, [56 x float]* %ofm_buff0_3, [56 x float]* %ofm_buff0_4, [56 x float]* %ofm_buff0_5, [56 x float]* %ofm_buff0_6, [56 x float]* %ofm_buff0_7, [56 x float]* %ofm_buff0_8, [56 x float]* %ofm_buff0_9, [56 x float]* %ofm_buff0_10, [56 x float]* %ofm_buff0_11, [56 x float]* %ofm_buff0_12, [56 x float]* %ofm_buff0_13, [56 x float]* %ofm_buff0_14, [56 x float]* %ofm_buff0_15)" [finalwrapup.cpp:651]   --->   Operation 315 'call' <Predicate = (icmp_ln648)> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_4 : Operation 316 [1/2] (3.25ns)   --->   "%cofm_counter = call fastcc i32 @conv_read(i512* %cofm, [56 x float]* %ofm_buff1_0, [56 x float]* %ofm_buff1_1, [56 x float]* %ofm_buff1_2, [56 x float]* %ofm_buff1_3, [56 x float]* %ofm_buff1_4, [56 x float]* %ofm_buff1_5, [56 x float]* %ofm_buff1_6, [56 x float]* %ofm_buff1_7, [56 x float]* %ofm_buff1_8, [56 x float]* %ofm_buff1_9, [56 x float]* %ofm_buff1_10, [56 x float]* %ofm_buff1_11, [56 x float]* %ofm_buff1_12, [56 x float]* %ofm_buff1_13, [56 x float]* %ofm_buff1_14, [56 x float]* %ofm_buff1_15, i32 %cofm_counter_8_load_1, i1 zeroext %icmp_ln652)" [finalwrapup.cpp:652]   --->   Operation 316 'call' 'cofm_counter' <Predicate = (icmp_ln648)> <Delay = 3.25> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_4 : Operation 317 [1/1] (1.90ns)   --->   "store i32 %cofm_counter, i32* %cofm_counter_8" [finalwrapup.cpp:658]   --->   Operation 317 'store' <Predicate = (icmp_ln648)> <Delay = 1.90>
ST_4 : Operation 318 [1/1] (1.90ns)   --->   "store i32 %cifm_counter, i32* %cifm_counter_8" [finalwrapup.cpp:658]   --->   Operation 318 'store' <Predicate = (icmp_ln648)> <Delay = 1.90>
ST_4 : Operation 319 [1/1] (0.00ns)   --->   "br label %._crit_edge" [finalwrapup.cpp:658]   --->   Operation 319 'br' <Predicate = (icmp_ln648)> <Delay = 0.00>
ST_4 : Operation 320 [1/1] (2.07ns)   --->   "%rotate_counter = add i16 %rotate_counter_0, 1" [finalwrapup.cpp:686]   --->   Operation 320 'add' 'rotate_counter' <Predicate = true> <Delay = 2.07> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 321 [1/1] (2.42ns)   --->   "%icmp_ln687 = icmp eq i16 %rotate_counter, 4" [finalwrapup.cpp:687]   --->   Operation 321 'icmp' 'icmp_ln687' <Predicate = true> <Delay = 2.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 322 [1/1] (0.80ns)   --->   "%select_ln687 = select i1 %icmp_ln687, i16 0, i16 %rotate_counter" [finalwrapup.cpp:687]   --->   Operation 322 'select' 'select_ln687' <Predicate = true> <Delay = 0.80> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 323 [1/1] (0.00ns)   --->   "br label %1" [finalwrapup.cpp:644]   --->   Operation 323 'br' <Predicate = true> <Delay = 0.00>

State 5 <SV = 3> <Delay = 3.25>
ST_5 : Operation 324 [1/2] (3.25ns)   --->   "%call_ret222799 = call fastcc i32 @conv_read(i512* %cofm, [56 x float]* %ofm_buff1_0, [56 x float]* %ofm_buff1_1, [56 x float]* %ofm_buff1_2, [56 x float]* %ofm_buff1_3, [56 x float]* %ofm_buff1_4, [56 x float]* %ofm_buff1_5, [56 x float]* %ofm_buff1_6, [56 x float]* %ofm_buff1_7, [56 x float]* %ofm_buff1_8, [56 x float]* %ofm_buff1_9, [56 x float]* %ofm_buff1_10, [56 x float]* %ofm_buff1_11, [56 x float]* %ofm_buff1_12, [56 x float]* %ofm_buff1_13, [56 x float]* %ofm_buff1_14, [56 x float]* %ofm_buff1_15, i32 %cofm_counter_8_load, i1 zeroext true)" [finalwrapup.cpp:692]   --->   Operation 324 'call' 'call_ret222799' <Predicate = true> <Delay = 3.25> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_5 : Operation 325 [1/1] (0.00ns)   --->   "ret void" [finalwrapup.cpp:693]   --->   Operation 325 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 3.25ns
The critical path consists of the following:
	'alloca' operation ('ifm_buff1[0]', finalwrapup.cpp:606) [25]  (0 ns)
	'call' operation ('call_ln636', finalwrapup.cpp:636) to 'load_cifm_data' [249]  (3.25 ns)

 <State 2>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('rotate_counter_0', finalwrapup.cpp:687) with incoming values : ('select_ln687', finalwrapup.cpp:687) [255]  (1.77 ns)

 <State 3>: 6.54ns
The critical path consists of the following:
	'phi' operation ('row') with incoming values : ('row', finalwrapup.cpp:644) [256]  (0 ns)
	'icmp' operation ('icmp_ln678', finalwrapup.cpp:678) [276]  (1.43 ns)
	'call' operation ('cifm_counter', finalwrapup.cpp:678) to 'write_row_ifm' [277]  (5.11 ns)

 <State 4>: 5.31ns
The critical path consists of the following:
	'add' operation ('rotate_counter', finalwrapup.cpp:686) [312]  (2.08 ns)
	'icmp' operation ('icmp_ln687', finalwrapup.cpp:687) [313]  (2.43 ns)
	'select' operation ('select_ln687', finalwrapup.cpp:687) [314]  (0.805 ns)

 <State 5>: 3.25ns
The critical path consists of the following:
	'call' operation ('cofm_counter', finalwrapup.cpp:692) to 'conv_read' [318]  (3.25 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
