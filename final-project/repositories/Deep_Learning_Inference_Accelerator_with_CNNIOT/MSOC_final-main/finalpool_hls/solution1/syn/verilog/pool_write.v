// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module pool_write (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        ifm_buff0_0_address0,
        ifm_buff0_0_ce0,
        ifm_buff0_0_q0,
        ifm_buff0_0_address1,
        ifm_buff0_0_ce1,
        ifm_buff0_0_q1,
        ifm_buff0_1_address0,
        ifm_buff0_1_ce0,
        ifm_buff0_1_q0,
        ifm_buff0_1_address1,
        ifm_buff0_1_ce1,
        ifm_buff0_1_q1,
        ifm_buff0_2_address0,
        ifm_buff0_2_ce0,
        ifm_buff0_2_q0,
        ifm_buff0_2_address1,
        ifm_buff0_2_ce1,
        ifm_buff0_2_q1,
        ifm_buff0_3_address0,
        ifm_buff0_3_ce0,
        ifm_buff0_3_q0,
        ifm_buff0_3_address1,
        ifm_buff0_3_ce1,
        ifm_buff0_3_q1,
        ifm_buff0_4_address0,
        ifm_buff0_4_ce0,
        ifm_buff0_4_q0,
        ifm_buff0_4_address1,
        ifm_buff0_4_ce1,
        ifm_buff0_4_q1,
        ifm_buff0_5_address0,
        ifm_buff0_5_ce0,
        ifm_buff0_5_q0,
        ifm_buff0_5_address1,
        ifm_buff0_5_ce1,
        ifm_buff0_5_q1,
        ifm_buff0_6_address0,
        ifm_buff0_6_ce0,
        ifm_buff0_6_q0,
        ifm_buff0_6_address1,
        ifm_buff0_6_ce1,
        ifm_buff0_6_q1,
        ifm_buff0_7_address0,
        ifm_buff0_7_ce0,
        ifm_buff0_7_q0,
        ifm_buff0_7_address1,
        ifm_buff0_7_ce1,
        ifm_buff0_7_q1,
        ifm_buff0_8_address0,
        ifm_buff0_8_ce0,
        ifm_buff0_8_q0,
        ifm_buff0_8_address1,
        ifm_buff0_8_ce1,
        ifm_buff0_8_q1,
        ifm_buff0_9_address0,
        ifm_buff0_9_ce0,
        ifm_buff0_9_q0,
        ifm_buff0_9_address1,
        ifm_buff0_9_ce1,
        ifm_buff0_9_q1,
        ifm_buff0_10_address0,
        ifm_buff0_10_ce0,
        ifm_buff0_10_q0,
        ifm_buff0_10_address1,
        ifm_buff0_10_ce1,
        ifm_buff0_10_q1,
        ifm_buff0_11_address0,
        ifm_buff0_11_ce0,
        ifm_buff0_11_q0,
        ifm_buff0_11_address1,
        ifm_buff0_11_ce1,
        ifm_buff0_11_q1,
        ifm_buff0_12_address0,
        ifm_buff0_12_ce0,
        ifm_buff0_12_q0,
        ifm_buff0_12_address1,
        ifm_buff0_12_ce1,
        ifm_buff0_12_q1,
        ifm_buff0_13_address0,
        ifm_buff0_13_ce0,
        ifm_buff0_13_q0,
        ifm_buff0_13_address1,
        ifm_buff0_13_ce1,
        ifm_buff0_13_q1,
        ifm_buff0_14_address0,
        ifm_buff0_14_ce0,
        ifm_buff0_14_q0,
        ifm_buff0_14_address1,
        ifm_buff0_14_ce1,
        ifm_buff0_14_q1,
        ifm_buff0_15_address0,
        ifm_buff0_15_ce0,
        ifm_buff0_15_q0,
        ifm_buff0_15_address1,
        ifm_buff0_15_ce1,
        ifm_buff0_15_q1,
        ifm_buff1_0_address0,
        ifm_buff1_0_ce0,
        ifm_buff1_0_q0,
        ifm_buff1_0_address1,
        ifm_buff1_0_ce1,
        ifm_buff1_0_q1,
        ifm_buff1_1_address0,
        ifm_buff1_1_ce0,
        ifm_buff1_1_q0,
        ifm_buff1_1_address1,
        ifm_buff1_1_ce1,
        ifm_buff1_1_q1,
        ifm_buff1_2_address0,
        ifm_buff1_2_ce0,
        ifm_buff1_2_q0,
        ifm_buff1_2_address1,
        ifm_buff1_2_ce1,
        ifm_buff1_2_q1,
        ifm_buff1_3_address0,
        ifm_buff1_3_ce0,
        ifm_buff1_3_q0,
        ifm_buff1_3_address1,
        ifm_buff1_3_ce1,
        ifm_buff1_3_q1,
        ifm_buff1_4_address0,
        ifm_buff1_4_ce0,
        ifm_buff1_4_q0,
        ifm_buff1_4_address1,
        ifm_buff1_4_ce1,
        ifm_buff1_4_q1,
        ifm_buff1_5_address0,
        ifm_buff1_5_ce0,
        ifm_buff1_5_q0,
        ifm_buff1_5_address1,
        ifm_buff1_5_ce1,
        ifm_buff1_5_q1,
        ifm_buff1_6_address0,
        ifm_buff1_6_ce0,
        ifm_buff1_6_q0,
        ifm_buff1_6_address1,
        ifm_buff1_6_ce1,
        ifm_buff1_6_q1,
        ifm_buff1_7_address0,
        ifm_buff1_7_ce0,
        ifm_buff1_7_q0,
        ifm_buff1_7_address1,
        ifm_buff1_7_ce1,
        ifm_buff1_7_q1,
        ifm_buff1_8_address0,
        ifm_buff1_8_ce0,
        ifm_buff1_8_q0,
        ifm_buff1_8_address1,
        ifm_buff1_8_ce1,
        ifm_buff1_8_q1,
        ifm_buff1_9_address0,
        ifm_buff1_9_ce0,
        ifm_buff1_9_q0,
        ifm_buff1_9_address1,
        ifm_buff1_9_ce1,
        ifm_buff1_9_q1,
        ifm_buff1_10_address0,
        ifm_buff1_10_ce0,
        ifm_buff1_10_q0,
        ifm_buff1_10_address1,
        ifm_buff1_10_ce1,
        ifm_buff1_10_q1,
        ifm_buff1_11_address0,
        ifm_buff1_11_ce0,
        ifm_buff1_11_q0,
        ifm_buff1_11_address1,
        ifm_buff1_11_ce1,
        ifm_buff1_11_q1,
        ifm_buff1_12_address0,
        ifm_buff1_12_ce0,
        ifm_buff1_12_q0,
        ifm_buff1_12_address1,
        ifm_buff1_12_ce1,
        ifm_buff1_12_q1,
        ifm_buff1_13_address0,
        ifm_buff1_13_ce0,
        ifm_buff1_13_q0,
        ifm_buff1_13_address1,
        ifm_buff1_13_ce1,
        ifm_buff1_13_q1,
        ifm_buff1_14_address0,
        ifm_buff1_14_ce0,
        ifm_buff1_14_q0,
        ifm_buff1_14_address1,
        ifm_buff1_14_ce1,
        ifm_buff1_14_q1,
        ifm_buff1_15_address0,
        ifm_buff1_15_ce0,
        ifm_buff1_15_q0,
        ifm_buff1_15_address1,
        ifm_buff1_15_ce1,
        ifm_buff1_15_q1,
        ofm_buff0_0_address0,
        ofm_buff0_0_ce0,
        ofm_buff0_0_we0,
        ofm_buff0_0_d0,
        ofm_buff0_1_address0,
        ofm_buff0_1_ce0,
        ofm_buff0_1_we0,
        ofm_buff0_1_d0,
        ofm_buff0_2_address0,
        ofm_buff0_2_ce0,
        ofm_buff0_2_we0,
        ofm_buff0_2_d0,
        ofm_buff0_3_address0,
        ofm_buff0_3_ce0,
        ofm_buff0_3_we0,
        ofm_buff0_3_d0,
        ofm_buff0_4_address0,
        ofm_buff0_4_ce0,
        ofm_buff0_4_we0,
        ofm_buff0_4_d0,
        ofm_buff0_5_address0,
        ofm_buff0_5_ce0,
        ofm_buff0_5_we0,
        ofm_buff0_5_d0,
        ofm_buff0_6_address0,
        ofm_buff0_6_ce0,
        ofm_buff0_6_we0,
        ofm_buff0_6_d0,
        ofm_buff0_7_address0,
        ofm_buff0_7_ce0,
        ofm_buff0_7_we0,
        ofm_buff0_7_d0,
        ofm_buff0_8_address0,
        ofm_buff0_8_ce0,
        ofm_buff0_8_we0,
        ofm_buff0_8_d0,
        ofm_buff0_9_address0,
        ofm_buff0_9_ce0,
        ofm_buff0_9_we0,
        ofm_buff0_9_d0,
        ofm_buff0_10_address0,
        ofm_buff0_10_ce0,
        ofm_buff0_10_we0,
        ofm_buff0_10_d0,
        ofm_buff0_11_address0,
        ofm_buff0_11_ce0,
        ofm_buff0_11_we0,
        ofm_buff0_11_d0,
        ofm_buff0_12_address0,
        ofm_buff0_12_ce0,
        ofm_buff0_12_we0,
        ofm_buff0_12_d0,
        ofm_buff0_13_address0,
        ofm_buff0_13_ce0,
        ofm_buff0_13_we0,
        ofm_buff0_13_d0,
        ofm_buff0_14_address0,
        ofm_buff0_14_ce0,
        ofm_buff0_14_we0,
        ofm_buff0_14_d0,
        ofm_buff0_15_address0,
        ofm_buff0_15_ce0,
        ofm_buff0_15_we0,
        ofm_buff0_15_d0
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state9 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [5:0] ifm_buff0_0_address0;
output   ifm_buff0_0_ce0;
input  [31:0] ifm_buff0_0_q0;
output  [5:0] ifm_buff0_0_address1;
output   ifm_buff0_0_ce1;
input  [31:0] ifm_buff0_0_q1;
output  [5:0] ifm_buff0_1_address0;
output   ifm_buff0_1_ce0;
input  [31:0] ifm_buff0_1_q0;
output  [5:0] ifm_buff0_1_address1;
output   ifm_buff0_1_ce1;
input  [31:0] ifm_buff0_1_q1;
output  [5:0] ifm_buff0_2_address0;
output   ifm_buff0_2_ce0;
input  [31:0] ifm_buff0_2_q0;
output  [5:0] ifm_buff0_2_address1;
output   ifm_buff0_2_ce1;
input  [31:0] ifm_buff0_2_q1;
output  [5:0] ifm_buff0_3_address0;
output   ifm_buff0_3_ce0;
input  [31:0] ifm_buff0_3_q0;
output  [5:0] ifm_buff0_3_address1;
output   ifm_buff0_3_ce1;
input  [31:0] ifm_buff0_3_q1;
output  [5:0] ifm_buff0_4_address0;
output   ifm_buff0_4_ce0;
input  [31:0] ifm_buff0_4_q0;
output  [5:0] ifm_buff0_4_address1;
output   ifm_buff0_4_ce1;
input  [31:0] ifm_buff0_4_q1;
output  [5:0] ifm_buff0_5_address0;
output   ifm_buff0_5_ce0;
input  [31:0] ifm_buff0_5_q0;
output  [5:0] ifm_buff0_5_address1;
output   ifm_buff0_5_ce1;
input  [31:0] ifm_buff0_5_q1;
output  [5:0] ifm_buff0_6_address0;
output   ifm_buff0_6_ce0;
input  [31:0] ifm_buff0_6_q0;
output  [5:0] ifm_buff0_6_address1;
output   ifm_buff0_6_ce1;
input  [31:0] ifm_buff0_6_q1;
output  [5:0] ifm_buff0_7_address0;
output   ifm_buff0_7_ce0;
input  [31:0] ifm_buff0_7_q0;
output  [5:0] ifm_buff0_7_address1;
output   ifm_buff0_7_ce1;
input  [31:0] ifm_buff0_7_q1;
output  [5:0] ifm_buff0_8_address0;
output   ifm_buff0_8_ce0;
input  [31:0] ifm_buff0_8_q0;
output  [5:0] ifm_buff0_8_address1;
output   ifm_buff0_8_ce1;
input  [31:0] ifm_buff0_8_q1;
output  [5:0] ifm_buff0_9_address0;
output   ifm_buff0_9_ce0;
input  [31:0] ifm_buff0_9_q0;
output  [5:0] ifm_buff0_9_address1;
output   ifm_buff0_9_ce1;
input  [31:0] ifm_buff0_9_q1;
output  [5:0] ifm_buff0_10_address0;
output   ifm_buff0_10_ce0;
input  [31:0] ifm_buff0_10_q0;
output  [5:0] ifm_buff0_10_address1;
output   ifm_buff0_10_ce1;
input  [31:0] ifm_buff0_10_q1;
output  [5:0] ifm_buff0_11_address0;
output   ifm_buff0_11_ce0;
input  [31:0] ifm_buff0_11_q0;
output  [5:0] ifm_buff0_11_address1;
output   ifm_buff0_11_ce1;
input  [31:0] ifm_buff0_11_q1;
output  [5:0] ifm_buff0_12_address0;
output   ifm_buff0_12_ce0;
input  [31:0] ifm_buff0_12_q0;
output  [5:0] ifm_buff0_12_address1;
output   ifm_buff0_12_ce1;
input  [31:0] ifm_buff0_12_q1;
output  [5:0] ifm_buff0_13_address0;
output   ifm_buff0_13_ce0;
input  [31:0] ifm_buff0_13_q0;
output  [5:0] ifm_buff0_13_address1;
output   ifm_buff0_13_ce1;
input  [31:0] ifm_buff0_13_q1;
output  [5:0] ifm_buff0_14_address0;
output   ifm_buff0_14_ce0;
input  [31:0] ifm_buff0_14_q0;
output  [5:0] ifm_buff0_14_address1;
output   ifm_buff0_14_ce1;
input  [31:0] ifm_buff0_14_q1;
output  [5:0] ifm_buff0_15_address0;
output   ifm_buff0_15_ce0;
input  [31:0] ifm_buff0_15_q0;
output  [5:0] ifm_buff0_15_address1;
output   ifm_buff0_15_ce1;
input  [31:0] ifm_buff0_15_q1;
output  [5:0] ifm_buff1_0_address0;
output   ifm_buff1_0_ce0;
input  [31:0] ifm_buff1_0_q0;
output  [5:0] ifm_buff1_0_address1;
output   ifm_buff1_0_ce1;
input  [31:0] ifm_buff1_0_q1;
output  [5:0] ifm_buff1_1_address0;
output   ifm_buff1_1_ce0;
input  [31:0] ifm_buff1_1_q0;
output  [5:0] ifm_buff1_1_address1;
output   ifm_buff1_1_ce1;
input  [31:0] ifm_buff1_1_q1;
output  [5:0] ifm_buff1_2_address0;
output   ifm_buff1_2_ce0;
input  [31:0] ifm_buff1_2_q0;
output  [5:0] ifm_buff1_2_address1;
output   ifm_buff1_2_ce1;
input  [31:0] ifm_buff1_2_q1;
output  [5:0] ifm_buff1_3_address0;
output   ifm_buff1_3_ce0;
input  [31:0] ifm_buff1_3_q0;
output  [5:0] ifm_buff1_3_address1;
output   ifm_buff1_3_ce1;
input  [31:0] ifm_buff1_3_q1;
output  [5:0] ifm_buff1_4_address0;
output   ifm_buff1_4_ce0;
input  [31:0] ifm_buff1_4_q0;
output  [5:0] ifm_buff1_4_address1;
output   ifm_buff1_4_ce1;
input  [31:0] ifm_buff1_4_q1;
output  [5:0] ifm_buff1_5_address0;
output   ifm_buff1_5_ce0;
input  [31:0] ifm_buff1_5_q0;
output  [5:0] ifm_buff1_5_address1;
output   ifm_buff1_5_ce1;
input  [31:0] ifm_buff1_5_q1;
output  [5:0] ifm_buff1_6_address0;
output   ifm_buff1_6_ce0;
input  [31:0] ifm_buff1_6_q0;
output  [5:0] ifm_buff1_6_address1;
output   ifm_buff1_6_ce1;
input  [31:0] ifm_buff1_6_q1;
output  [5:0] ifm_buff1_7_address0;
output   ifm_buff1_7_ce0;
input  [31:0] ifm_buff1_7_q0;
output  [5:0] ifm_buff1_7_address1;
output   ifm_buff1_7_ce1;
input  [31:0] ifm_buff1_7_q1;
output  [5:0] ifm_buff1_8_address0;
output   ifm_buff1_8_ce0;
input  [31:0] ifm_buff1_8_q0;
output  [5:0] ifm_buff1_8_address1;
output   ifm_buff1_8_ce1;
input  [31:0] ifm_buff1_8_q1;
output  [5:0] ifm_buff1_9_address0;
output   ifm_buff1_9_ce0;
input  [31:0] ifm_buff1_9_q0;
output  [5:0] ifm_buff1_9_address1;
output   ifm_buff1_9_ce1;
input  [31:0] ifm_buff1_9_q1;
output  [5:0] ifm_buff1_10_address0;
output   ifm_buff1_10_ce0;
input  [31:0] ifm_buff1_10_q0;
output  [5:0] ifm_buff1_10_address1;
output   ifm_buff1_10_ce1;
input  [31:0] ifm_buff1_10_q1;
output  [5:0] ifm_buff1_11_address0;
output   ifm_buff1_11_ce0;
input  [31:0] ifm_buff1_11_q0;
output  [5:0] ifm_buff1_11_address1;
output   ifm_buff1_11_ce1;
input  [31:0] ifm_buff1_11_q1;
output  [5:0] ifm_buff1_12_address0;
output   ifm_buff1_12_ce0;
input  [31:0] ifm_buff1_12_q0;
output  [5:0] ifm_buff1_12_address1;
output   ifm_buff1_12_ce1;
input  [31:0] ifm_buff1_12_q1;
output  [5:0] ifm_buff1_13_address0;
output   ifm_buff1_13_ce0;
input  [31:0] ifm_buff1_13_q0;
output  [5:0] ifm_buff1_13_address1;
output   ifm_buff1_13_ce1;
input  [31:0] ifm_buff1_13_q1;
output  [5:0] ifm_buff1_14_address0;
output   ifm_buff1_14_ce0;
input  [31:0] ifm_buff1_14_q0;
output  [5:0] ifm_buff1_14_address1;
output   ifm_buff1_14_ce1;
input  [31:0] ifm_buff1_14_q1;
output  [5:0] ifm_buff1_15_address0;
output   ifm_buff1_15_ce0;
input  [31:0] ifm_buff1_15_q0;
output  [5:0] ifm_buff1_15_address1;
output   ifm_buff1_15_ce1;
input  [31:0] ifm_buff1_15_q1;
output  [5:0] ofm_buff0_0_address0;
output   ofm_buff0_0_ce0;
output   ofm_buff0_0_we0;
output  [31:0] ofm_buff0_0_d0;
output  [5:0] ofm_buff0_1_address0;
output   ofm_buff0_1_ce0;
output   ofm_buff0_1_we0;
output  [31:0] ofm_buff0_1_d0;
output  [5:0] ofm_buff0_2_address0;
output   ofm_buff0_2_ce0;
output   ofm_buff0_2_we0;
output  [31:0] ofm_buff0_2_d0;
output  [5:0] ofm_buff0_3_address0;
output   ofm_buff0_3_ce0;
output   ofm_buff0_3_we0;
output  [31:0] ofm_buff0_3_d0;
output  [5:0] ofm_buff0_4_address0;
output   ofm_buff0_4_ce0;
output   ofm_buff0_4_we0;
output  [31:0] ofm_buff0_4_d0;
output  [5:0] ofm_buff0_5_address0;
output   ofm_buff0_5_ce0;
output   ofm_buff0_5_we0;
output  [31:0] ofm_buff0_5_d0;
output  [5:0] ofm_buff0_6_address0;
output   ofm_buff0_6_ce0;
output   ofm_buff0_6_we0;
output  [31:0] ofm_buff0_6_d0;
output  [5:0] ofm_buff0_7_address0;
output   ofm_buff0_7_ce0;
output   ofm_buff0_7_we0;
output  [31:0] ofm_buff0_7_d0;
output  [5:0] ofm_buff0_8_address0;
output   ofm_buff0_8_ce0;
output   ofm_buff0_8_we0;
output  [31:0] ofm_buff0_8_d0;
output  [5:0] ofm_buff0_9_address0;
output   ofm_buff0_9_ce0;
output   ofm_buff0_9_we0;
output  [31:0] ofm_buff0_9_d0;
output  [5:0] ofm_buff0_10_address0;
output   ofm_buff0_10_ce0;
output   ofm_buff0_10_we0;
output  [31:0] ofm_buff0_10_d0;
output  [5:0] ofm_buff0_11_address0;
output   ofm_buff0_11_ce0;
output   ofm_buff0_11_we0;
output  [31:0] ofm_buff0_11_d0;
output  [5:0] ofm_buff0_12_address0;
output   ofm_buff0_12_ce0;
output   ofm_buff0_12_we0;
output  [31:0] ofm_buff0_12_d0;
output  [5:0] ofm_buff0_13_address0;
output   ofm_buff0_13_ce0;
output   ofm_buff0_13_we0;
output  [31:0] ofm_buff0_13_d0;
output  [5:0] ofm_buff0_14_address0;
output   ofm_buff0_14_ce0;
output   ofm_buff0_14_we0;
output  [31:0] ofm_buff0_14_d0;
output  [5:0] ofm_buff0_15_address0;
output   ofm_buff0_15_ce0;
output   ofm_buff0_15_we0;
output  [31:0] ofm_buff0_15_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg ifm_buff0_0_ce0;
reg ifm_buff0_0_ce1;
reg ifm_buff0_1_ce0;
reg ifm_buff0_1_ce1;
reg ifm_buff0_2_ce0;
reg ifm_buff0_2_ce1;
reg ifm_buff0_3_ce0;
reg ifm_buff0_3_ce1;
reg ifm_buff0_4_ce0;
reg ifm_buff0_4_ce1;
reg ifm_buff0_5_ce0;
reg ifm_buff0_5_ce1;
reg ifm_buff0_6_ce0;
reg ifm_buff0_6_ce1;
reg ifm_buff0_7_ce0;
reg ifm_buff0_7_ce1;
reg ifm_buff0_8_ce0;
reg ifm_buff0_8_ce1;
reg ifm_buff0_9_ce0;
reg ifm_buff0_9_ce1;
reg ifm_buff0_10_ce0;
reg ifm_buff0_10_ce1;
reg ifm_buff0_11_ce0;
reg ifm_buff0_11_ce1;
reg ifm_buff0_12_ce0;
reg ifm_buff0_12_ce1;
reg ifm_buff0_13_ce0;
reg ifm_buff0_13_ce1;
reg ifm_buff0_14_ce0;
reg ifm_buff0_14_ce1;
reg ifm_buff0_15_ce0;
reg ifm_buff0_15_ce1;
reg ifm_buff1_0_ce0;
reg ifm_buff1_0_ce1;
reg ifm_buff1_1_ce0;
reg ifm_buff1_1_ce1;
reg ifm_buff1_2_ce0;
reg ifm_buff1_2_ce1;
reg ifm_buff1_3_ce0;
reg ifm_buff1_3_ce1;
reg ifm_buff1_4_ce0;
reg ifm_buff1_4_ce1;
reg ifm_buff1_5_ce0;
reg ifm_buff1_5_ce1;
reg ifm_buff1_6_ce0;
reg ifm_buff1_6_ce1;
reg ifm_buff1_7_ce0;
reg ifm_buff1_7_ce1;
reg ifm_buff1_8_ce0;
reg ifm_buff1_8_ce1;
reg ifm_buff1_9_ce0;
reg ifm_buff1_9_ce1;
reg ifm_buff1_10_ce0;
reg ifm_buff1_10_ce1;
reg ifm_buff1_11_ce0;
reg ifm_buff1_11_ce1;
reg ifm_buff1_12_ce0;
reg ifm_buff1_12_ce1;
reg ifm_buff1_13_ce0;
reg ifm_buff1_13_ce1;
reg ifm_buff1_14_ce0;
reg ifm_buff1_14_ce1;
reg ifm_buff1_15_ce0;
reg ifm_buff1_15_ce1;
reg ofm_buff0_0_ce0;
reg ofm_buff0_0_we0;
reg ofm_buff0_1_ce0;
reg ofm_buff0_1_we0;
reg ofm_buff0_2_ce0;
reg ofm_buff0_2_we0;
reg ofm_buff0_3_ce0;
reg ofm_buff0_3_we0;
reg ofm_buff0_4_ce0;
reg ofm_buff0_4_we0;
reg ofm_buff0_5_ce0;
reg ofm_buff0_5_we0;
reg ofm_buff0_6_ce0;
reg ofm_buff0_6_we0;
reg ofm_buff0_7_ce0;
reg ofm_buff0_7_we0;
reg ofm_buff0_8_ce0;
reg ofm_buff0_8_we0;
reg ofm_buff0_9_ce0;
reg ofm_buff0_9_we0;
reg ofm_buff0_10_ce0;
reg ofm_buff0_10_we0;
reg ofm_buff0_11_ce0;
reg ofm_buff0_11_we0;
reg ofm_buff0_12_ce0;
reg ofm_buff0_12_we0;
reg ofm_buff0_13_ce0;
reg ofm_buff0_13_we0;
reg ofm_buff0_14_ce0;
reg ofm_buff0_14_we0;
reg ofm_buff0_15_ce0;
reg ofm_buff0_15_we0;

(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [9:0] indvar_flatten_reg_1186;
reg   [5:0] col_0_reg_1197;
reg   [4:0] ti_0_reg_1208;
wire   [0:0] icmp_ln179_fu_1237_p2;
reg   [0:0] icmp_ln179_reg_1779;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_state5_pp0_stage0_iter3;
wire    ap_block_state6_pp0_stage0_iter4;
wire    ap_block_state7_pp0_stage0_iter5;
wire    ap_block_state8_pp0_stage0_iter6;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln179_reg_1779_pp0_iter1_reg;
reg   [0:0] icmp_ln179_reg_1779_pp0_iter2_reg;
reg   [0:0] icmp_ln179_reg_1779_pp0_iter3_reg;
reg   [0:0] icmp_ln179_reg_1779_pp0_iter4_reg;
wire   [9:0] add_ln179_fu_1243_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [5:0] select_ln189_1_fu_1263_p3;
reg   [5:0] select_ln189_1_reg_1788;
wire   [63:0] zext_ln189_fu_1271_p1;
reg   [63:0] zext_ln189_reg_1793;
reg   [63:0] zext_ln189_reg_1793_pp0_iter1_reg;
reg   [63:0] zext_ln189_reg_1793_pp0_iter2_reg;
reg   [63:0] zext_ln189_reg_1793_pp0_iter3_reg;
reg   [63:0] zext_ln189_reg_1793_pp0_iter4_reg;
reg   [63:0] zext_ln189_reg_1793_pp0_iter5_reg;
wire   [3:0] trunc_ln189_fu_1357_p1;
reg   [3:0] trunc_ln189_reg_1813;
reg   [3:0] trunc_ln189_reg_1813_pp0_iter1_reg;
reg   [3:0] trunc_ln189_reg_1813_pp0_iter2_reg;
reg   [3:0] trunc_ln189_reg_1813_pp0_iter3_reg;
reg   [3:0] trunc_ln189_reg_1813_pp0_iter4_reg;
reg   [3:0] trunc_ln189_reg_1813_pp0_iter5_reg;
wire   [4:0] ti_fu_1361_p2;
wire   [31:0] tmp_fu_1367_p18;
reg   [31:0] tmp_reg_2146;
reg   [31:0] tmp_reg_2146_pp0_iter2_reg;
wire   [31:0] tmp_1_fu_1404_p18;
reg   [31:0] tmp_1_reg_2153;
reg   [31:0] tmp_1_reg_2153_pp0_iter2_reg;
wire   [31:0] tmp_7_fu_1441_p18;
reg   [31:0] tmp_7_reg_2160;
reg   [31:0] tmp_7_reg_2160_pp0_iter2_reg;
wire   [31:0] tmp_8_fu_1478_p18;
reg   [31:0] tmp_8_reg_2167;
reg   [31:0] tmp_8_reg_2167_pp0_iter2_reg;
wire   [31:0] com0_fu_1597_p3;
reg   [31:0] com0_reg_2174;
reg   [31:0] com0_reg_2174_pp0_iter4_reg;
wire   [31:0] com1_fu_1685_p3;
reg   [31:0] com1_reg_2181;
reg   [31:0] com1_reg_2181_pp0_iter4_reg;
wire   [31:0] Y_fu_1773_p3;
reg   [31:0] Y_reg_2188;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg   [5:0] ap_phi_mux_col_0_phi_fu_1201_p4;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln189_1_fu_1321_p1;
wire   [0:0] icmp_ln184_fu_1249_p2;
wire   [5:0] col_fu_1231_p2;
wire   [5:0] add_ln189_fu_1307_p2;
wire   [5:0] select_ln189_2_fu_1313_p3;
wire   [4:0] select_ln189_fu_1255_p3;
wire   [31:0] bitcast_ln189_fu_1515_p1;
wire   [31:0] bitcast_ln189_1_fu_1532_p1;
wire   [7:0] tmp_2_fu_1518_p4;
wire   [22:0] trunc_ln189_1_fu_1528_p1;
wire   [0:0] icmp_ln189_1_fu_1555_p2;
wire   [0:0] icmp_ln189_fu_1549_p2;
wire   [7:0] tmp_5_fu_1535_p4;
wire   [22:0] trunc_ln189_2_fu_1545_p1;
wire   [0:0] icmp_ln189_3_fu_1573_p2;
wire   [0:0] icmp_ln189_2_fu_1567_p2;
wire   [0:0] or_ln189_fu_1561_p2;
wire   [0:0] or_ln189_1_fu_1579_p2;
wire   [0:0] and_ln189_fu_1585_p2;
wire   [0:0] grp_fu_1219_p2;
wire   [0:0] and_ln189_1_fu_1591_p2;
wire   [31:0] bitcast_ln190_fu_1603_p1;
wire   [31:0] bitcast_ln190_1_fu_1620_p1;
wire   [7:0] tmp_9_fu_1606_p4;
wire   [22:0] trunc_ln190_fu_1616_p1;
wire   [0:0] icmp_ln190_1_fu_1643_p2;
wire   [0:0] icmp_ln190_fu_1637_p2;
wire   [7:0] tmp_s_fu_1623_p4;
wire   [22:0] trunc_ln190_1_fu_1633_p1;
wire   [0:0] icmp_ln190_3_fu_1661_p2;
wire   [0:0] icmp_ln190_2_fu_1655_p2;
wire   [0:0] or_ln190_fu_1649_p2;
wire   [0:0] or_ln190_1_fu_1667_p2;
wire   [0:0] and_ln190_fu_1673_p2;
wire   [0:0] grp_fu_1223_p2;
wire   [0:0] and_ln190_1_fu_1679_p2;
wire   [31:0] bitcast_ln191_fu_1691_p1;
wire   [31:0] bitcast_ln191_1_fu_1708_p1;
wire   [7:0] tmp_10_fu_1694_p4;
wire   [22:0] trunc_ln191_fu_1704_p1;
wire   [0:0] icmp_ln191_1_fu_1731_p2;
wire   [0:0] icmp_ln191_fu_1725_p2;
wire   [7:0] tmp_11_fu_1711_p4;
wire   [22:0] trunc_ln191_1_fu_1721_p1;
wire   [0:0] icmp_ln191_3_fu_1749_p2;
wire   [0:0] icmp_ln191_2_fu_1743_p2;
wire   [0:0] or_ln191_fu_1737_p2;
wire   [0:0] or_ln191_1_fu_1755_p2;
wire   [0:0] and_ln191_fu_1761_p2;
wire   [0:0] grp_fu_1227_p2;
wire   [0:0] and_ln191_1_fu_1767_p2;
wire    ap_block_pp0_stage0_00001;
wire    ap_CS_fsm_state9;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
end

pool_hw_fcmp_32nsbkb #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
pool_hw_fcmp_32nsbkb_U40(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_reg_2146),
    .din1(tmp_1_reg_2153),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_1219_p2)
);

pool_hw_fcmp_32nsbkb #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
pool_hw_fcmp_32nsbkb_U41(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_7_reg_2160),
    .din1(tmp_8_reg_2167),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_1223_p2)
);

pool_hw_fcmp_32nsbkb #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
pool_hw_fcmp_32nsbkb_U42(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(com0_reg_2174),
    .din1(com1_reg_2181),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_1227_p2)
);

pool_hw_mux_164_3cud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
pool_hw_mux_164_3cud_U43(
    .din0(ifm_buff0_0_q0),
    .din1(ifm_buff0_1_q0),
    .din2(ifm_buff0_2_q0),
    .din3(ifm_buff0_3_q0),
    .din4(ifm_buff0_4_q0),
    .din5(ifm_buff0_5_q0),
    .din6(ifm_buff0_6_q0),
    .din7(ifm_buff0_7_q0),
    .din8(ifm_buff0_8_q0),
    .din9(ifm_buff0_9_q0),
    .din10(ifm_buff0_10_q0),
    .din11(ifm_buff0_11_q0),
    .din12(ifm_buff0_12_q0),
    .din13(ifm_buff0_13_q0),
    .din14(ifm_buff0_14_q0),
    .din15(ifm_buff0_15_q0),
    .din16(trunc_ln189_reg_1813),
    .dout(tmp_fu_1367_p18)
);

pool_hw_mux_164_3cud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
pool_hw_mux_164_3cud_U44(
    .din0(ifm_buff0_0_q1),
    .din1(ifm_buff0_1_q1),
    .din2(ifm_buff0_2_q1),
    .din3(ifm_buff0_3_q1),
    .din4(ifm_buff0_4_q1),
    .din5(ifm_buff0_5_q1),
    .din6(ifm_buff0_6_q1),
    .din7(ifm_buff0_7_q1),
    .din8(ifm_buff0_8_q1),
    .din9(ifm_buff0_9_q1),
    .din10(ifm_buff0_10_q1),
    .din11(ifm_buff0_11_q1),
    .din12(ifm_buff0_12_q1),
    .din13(ifm_buff0_13_q1),
    .din14(ifm_buff0_14_q1),
    .din15(ifm_buff0_15_q1),
    .din16(trunc_ln189_reg_1813),
    .dout(tmp_1_fu_1404_p18)
);

pool_hw_mux_164_3cud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
pool_hw_mux_164_3cud_U45(
    .din0(ifm_buff1_0_q0),
    .din1(ifm_buff1_1_q0),
    .din2(ifm_buff1_2_q0),
    .din3(ifm_buff1_3_q0),
    .din4(ifm_buff1_4_q0),
    .din5(ifm_buff1_5_q0),
    .din6(ifm_buff1_6_q0),
    .din7(ifm_buff1_7_q0),
    .din8(ifm_buff1_8_q0),
    .din9(ifm_buff1_9_q0),
    .din10(ifm_buff1_10_q0),
    .din11(ifm_buff1_11_q0),
    .din12(ifm_buff1_12_q0),
    .din13(ifm_buff1_13_q0),
    .din14(ifm_buff1_14_q0),
    .din15(ifm_buff1_15_q0),
    .din16(trunc_ln189_reg_1813),
    .dout(tmp_7_fu_1441_p18)
);

pool_hw_mux_164_3cud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
pool_hw_mux_164_3cud_U46(
    .din0(ifm_buff1_0_q1),
    .din1(ifm_buff1_1_q1),
    .din2(ifm_buff1_2_q1),
    .din3(ifm_buff1_3_q1),
    .din4(ifm_buff1_4_q1),
    .din5(ifm_buff1_5_q1),
    .din6(ifm_buff1_6_q1),
    .din7(ifm_buff1_7_q1),
    .din8(ifm_buff1_8_q1),
    .din9(ifm_buff1_9_q1),
    .din10(ifm_buff1_10_q1),
    .din11(ifm_buff1_11_q1),
    .din12(ifm_buff1_12_q1),
    .din13(ifm_buff1_13_q1),
    .din14(ifm_buff1_14_q1),
    .din15(ifm_buff1_15_q1),
    .din16(trunc_ln189_reg_1813),
    .dout(tmp_8_fu_1478_p18)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter6 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln179_reg_1779 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        col_0_reg_1197 <= select_ln189_1_reg_1788;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        col_0_reg_1197 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln179_fu_1237_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_reg_1186 <= add_ln179_fu_1243_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_1186 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln179_fu_1237_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ti_0_reg_1208 <= ti_fu_1361_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ti_0_reg_1208 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln179_reg_1779_pp0_iter4_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        Y_reg_2188 <= Y_fu_1773_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln179_reg_1779_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        com0_reg_2174 <= com0_fu_1597_p3;
        com1_reg_2181 <= com1_fu_1685_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        com0_reg_2174_pp0_iter4_reg <= com0_reg_2174;
        com1_reg_2181_pp0_iter4_reg <= com1_reg_2181;
        icmp_ln179_reg_1779_pp0_iter2_reg <= icmp_ln179_reg_1779_pp0_iter1_reg;
        icmp_ln179_reg_1779_pp0_iter3_reg <= icmp_ln179_reg_1779_pp0_iter2_reg;
        icmp_ln179_reg_1779_pp0_iter4_reg <= icmp_ln179_reg_1779_pp0_iter3_reg;
        tmp_1_reg_2153_pp0_iter2_reg <= tmp_1_reg_2153;
        tmp_7_reg_2160_pp0_iter2_reg <= tmp_7_reg_2160;
        tmp_8_reg_2167_pp0_iter2_reg <= tmp_8_reg_2167;
        tmp_reg_2146_pp0_iter2_reg <= tmp_reg_2146;
        trunc_ln189_reg_1813_pp0_iter2_reg <= trunc_ln189_reg_1813_pp0_iter1_reg;
        trunc_ln189_reg_1813_pp0_iter3_reg <= trunc_ln189_reg_1813_pp0_iter2_reg;
        trunc_ln189_reg_1813_pp0_iter4_reg <= trunc_ln189_reg_1813_pp0_iter3_reg;
        trunc_ln189_reg_1813_pp0_iter5_reg <= trunc_ln189_reg_1813_pp0_iter4_reg;
        zext_ln189_reg_1793_pp0_iter2_reg[5 : 0] <= zext_ln189_reg_1793_pp0_iter1_reg[5 : 0];
        zext_ln189_reg_1793_pp0_iter3_reg[5 : 0] <= zext_ln189_reg_1793_pp0_iter2_reg[5 : 0];
        zext_ln189_reg_1793_pp0_iter4_reg[5 : 0] <= zext_ln189_reg_1793_pp0_iter3_reg[5 : 0];
        zext_ln189_reg_1793_pp0_iter5_reg[5 : 0] <= zext_ln189_reg_1793_pp0_iter4_reg[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln179_reg_1779 <= icmp_ln179_fu_1237_p2;
        icmp_ln179_reg_1779_pp0_iter1_reg <= icmp_ln179_reg_1779;
        trunc_ln189_reg_1813_pp0_iter1_reg <= trunc_ln189_reg_1813;
        zext_ln189_reg_1793_pp0_iter1_reg[5 : 0] <= zext_ln189_reg_1793[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln179_fu_1237_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        select_ln189_1_reg_1788 <= select_ln189_1_fu_1263_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln179_reg_1779 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_1_reg_2153 <= tmp_1_fu_1404_p18;
        tmp_7_reg_2160 <= tmp_7_fu_1441_p18;
        tmp_8_reg_2167 <= tmp_8_fu_1478_p18;
        tmp_reg_2146 <= tmp_fu_1367_p18;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln179_fu_1237_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        trunc_ln189_reg_1813 <= trunc_ln189_fu_1357_p1;
        zext_ln189_reg_1793[5 : 0] <= zext_ln189_fu_1271_p1[5 : 0];
    end
end

always @ (*) begin
    if ((icmp_ln179_fu_1237_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln179_reg_1779 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_col_0_phi_fu_1201_p4 = select_ln189_1_reg_1788;
    end else begin
        ap_phi_mux_col_0_phi_fu_1201_p4 = col_0_reg_1197;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ifm_buff0_0_ce0 = 1'b1;
    end else begin
        ifm_buff0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ifm_buff0_0_ce1 = 1'b1;
    end else begin
        ifm_buff0_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ifm_buff0_10_ce0 = 1'b1;
    end else begin
        ifm_buff0_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ifm_buff0_10_ce1 = 1'b1;
    end else begin
        ifm_buff0_10_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ifm_buff0_11_ce0 = 1'b1;
    end else begin
        ifm_buff0_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ifm_buff0_11_ce1 = 1'b1;
    end else begin
        ifm_buff0_11_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ifm_buff0_12_ce0 = 1'b1;
    end else begin
        ifm_buff0_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ifm_buff0_12_ce1 = 1'b1;
    end else begin
        ifm_buff0_12_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ifm_buff0_13_ce0 = 1'b1;
    end else begin
        ifm_buff0_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ifm_buff0_13_ce1 = 1'b1;
    end else begin
        ifm_buff0_13_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ifm_buff0_14_ce0 = 1'b1;
    end else begin
        ifm_buff0_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ifm_buff0_14_ce1 = 1'b1;
    end else begin
        ifm_buff0_14_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ifm_buff0_15_ce0 = 1'b1;
    end else begin
        ifm_buff0_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ifm_buff0_15_ce1 = 1'b1;
    end else begin
        ifm_buff0_15_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ifm_buff0_1_ce0 = 1'b1;
    end else begin
        ifm_buff0_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ifm_buff0_1_ce1 = 1'b1;
    end else begin
        ifm_buff0_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ifm_buff0_2_ce0 = 1'b1;
    end else begin
        ifm_buff0_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ifm_buff0_2_ce1 = 1'b1;
    end else begin
        ifm_buff0_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ifm_buff0_3_ce0 = 1'b1;
    end else begin
        ifm_buff0_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ifm_buff0_3_ce1 = 1'b1;
    end else begin
        ifm_buff0_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ifm_buff0_4_ce0 = 1'b1;
    end else begin
        ifm_buff0_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ifm_buff0_4_ce1 = 1'b1;
    end else begin
        ifm_buff0_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ifm_buff0_5_ce0 = 1'b1;
    end else begin
        ifm_buff0_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ifm_buff0_5_ce1 = 1'b1;
    end else begin
        ifm_buff0_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ifm_buff0_6_ce0 = 1'b1;
    end else begin
        ifm_buff0_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ifm_buff0_6_ce1 = 1'b1;
    end else begin
        ifm_buff0_6_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ifm_buff0_7_ce0 = 1'b1;
    end else begin
        ifm_buff0_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ifm_buff0_7_ce1 = 1'b1;
    end else begin
        ifm_buff0_7_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ifm_buff0_8_ce0 = 1'b1;
    end else begin
        ifm_buff0_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ifm_buff0_8_ce1 = 1'b1;
    end else begin
        ifm_buff0_8_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ifm_buff0_9_ce0 = 1'b1;
    end else begin
        ifm_buff0_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ifm_buff0_9_ce1 = 1'b1;
    end else begin
        ifm_buff0_9_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ifm_buff1_0_ce0 = 1'b1;
    end else begin
        ifm_buff1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ifm_buff1_0_ce1 = 1'b1;
    end else begin
        ifm_buff1_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ifm_buff1_10_ce0 = 1'b1;
    end else begin
        ifm_buff1_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ifm_buff1_10_ce1 = 1'b1;
    end else begin
        ifm_buff1_10_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ifm_buff1_11_ce0 = 1'b1;
    end else begin
        ifm_buff1_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ifm_buff1_11_ce1 = 1'b1;
    end else begin
        ifm_buff1_11_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ifm_buff1_12_ce0 = 1'b1;
    end else begin
        ifm_buff1_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ifm_buff1_12_ce1 = 1'b1;
    end else begin
        ifm_buff1_12_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ifm_buff1_13_ce0 = 1'b1;
    end else begin
        ifm_buff1_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ifm_buff1_13_ce1 = 1'b1;
    end else begin
        ifm_buff1_13_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ifm_buff1_14_ce0 = 1'b1;
    end else begin
        ifm_buff1_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ifm_buff1_14_ce1 = 1'b1;
    end else begin
        ifm_buff1_14_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ifm_buff1_15_ce0 = 1'b1;
    end else begin
        ifm_buff1_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ifm_buff1_15_ce1 = 1'b1;
    end else begin
        ifm_buff1_15_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ifm_buff1_1_ce0 = 1'b1;
    end else begin
        ifm_buff1_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ifm_buff1_1_ce1 = 1'b1;
    end else begin
        ifm_buff1_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ifm_buff1_2_ce0 = 1'b1;
    end else begin
        ifm_buff1_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ifm_buff1_2_ce1 = 1'b1;
    end else begin
        ifm_buff1_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ifm_buff1_3_ce0 = 1'b1;
    end else begin
        ifm_buff1_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ifm_buff1_3_ce1 = 1'b1;
    end else begin
        ifm_buff1_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ifm_buff1_4_ce0 = 1'b1;
    end else begin
        ifm_buff1_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ifm_buff1_4_ce1 = 1'b1;
    end else begin
        ifm_buff1_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ifm_buff1_5_ce0 = 1'b1;
    end else begin
        ifm_buff1_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ifm_buff1_5_ce1 = 1'b1;
    end else begin
        ifm_buff1_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ifm_buff1_6_ce0 = 1'b1;
    end else begin
        ifm_buff1_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ifm_buff1_6_ce1 = 1'b1;
    end else begin
        ifm_buff1_6_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ifm_buff1_7_ce0 = 1'b1;
    end else begin
        ifm_buff1_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ifm_buff1_7_ce1 = 1'b1;
    end else begin
        ifm_buff1_7_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ifm_buff1_8_ce0 = 1'b1;
    end else begin
        ifm_buff1_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ifm_buff1_8_ce1 = 1'b1;
    end else begin
        ifm_buff1_8_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ifm_buff1_9_ce0 = 1'b1;
    end else begin
        ifm_buff1_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ifm_buff1_9_ce1 = 1'b1;
    end else begin
        ifm_buff1_9_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        ofm_buff0_0_ce0 = 1'b1;
    end else begin
        ofm_buff0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln189_reg_1813_pp0_iter5_reg == 4'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        ofm_buff0_0_we0 = 1'b1;
    end else begin
        ofm_buff0_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        ofm_buff0_10_ce0 = 1'b1;
    end else begin
        ofm_buff0_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln189_reg_1813_pp0_iter5_reg == 4'd10) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        ofm_buff0_10_we0 = 1'b1;
    end else begin
        ofm_buff0_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        ofm_buff0_11_ce0 = 1'b1;
    end else begin
        ofm_buff0_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln189_reg_1813_pp0_iter5_reg == 4'd11) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        ofm_buff0_11_we0 = 1'b1;
    end else begin
        ofm_buff0_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        ofm_buff0_12_ce0 = 1'b1;
    end else begin
        ofm_buff0_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln189_reg_1813_pp0_iter5_reg == 4'd12) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        ofm_buff0_12_we0 = 1'b1;
    end else begin
        ofm_buff0_12_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        ofm_buff0_13_ce0 = 1'b1;
    end else begin
        ofm_buff0_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln189_reg_1813_pp0_iter5_reg == 4'd13) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        ofm_buff0_13_we0 = 1'b1;
    end else begin
        ofm_buff0_13_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        ofm_buff0_14_ce0 = 1'b1;
    end else begin
        ofm_buff0_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln189_reg_1813_pp0_iter5_reg == 4'd14) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        ofm_buff0_14_we0 = 1'b1;
    end else begin
        ofm_buff0_14_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        ofm_buff0_15_ce0 = 1'b1;
    end else begin
        ofm_buff0_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln189_reg_1813_pp0_iter5_reg == 4'd15) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        ofm_buff0_15_we0 = 1'b1;
    end else begin
        ofm_buff0_15_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        ofm_buff0_1_ce0 = 1'b1;
    end else begin
        ofm_buff0_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln189_reg_1813_pp0_iter5_reg == 4'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        ofm_buff0_1_we0 = 1'b1;
    end else begin
        ofm_buff0_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        ofm_buff0_2_ce0 = 1'b1;
    end else begin
        ofm_buff0_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln189_reg_1813_pp0_iter5_reg == 4'd2) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        ofm_buff0_2_we0 = 1'b1;
    end else begin
        ofm_buff0_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        ofm_buff0_3_ce0 = 1'b1;
    end else begin
        ofm_buff0_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln189_reg_1813_pp0_iter5_reg == 4'd3) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        ofm_buff0_3_we0 = 1'b1;
    end else begin
        ofm_buff0_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        ofm_buff0_4_ce0 = 1'b1;
    end else begin
        ofm_buff0_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln189_reg_1813_pp0_iter5_reg == 4'd4) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        ofm_buff0_4_we0 = 1'b1;
    end else begin
        ofm_buff0_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        ofm_buff0_5_ce0 = 1'b1;
    end else begin
        ofm_buff0_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln189_reg_1813_pp0_iter5_reg == 4'd5) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        ofm_buff0_5_we0 = 1'b1;
    end else begin
        ofm_buff0_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        ofm_buff0_6_ce0 = 1'b1;
    end else begin
        ofm_buff0_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln189_reg_1813_pp0_iter5_reg == 4'd6) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        ofm_buff0_6_we0 = 1'b1;
    end else begin
        ofm_buff0_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        ofm_buff0_7_ce0 = 1'b1;
    end else begin
        ofm_buff0_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln189_reg_1813_pp0_iter5_reg == 4'd7) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        ofm_buff0_7_we0 = 1'b1;
    end else begin
        ofm_buff0_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        ofm_buff0_8_ce0 = 1'b1;
    end else begin
        ofm_buff0_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln189_reg_1813_pp0_iter5_reg == 4'd8) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        ofm_buff0_8_we0 = 1'b1;
    end else begin
        ofm_buff0_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        ofm_buff0_9_ce0 = 1'b1;
    end else begin
        ofm_buff0_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln189_reg_1813_pp0_iter5_reg == 4'd9) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        ofm_buff0_9_we0 = 1'b1;
    end else begin
        ofm_buff0_9_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln179_fu_1237_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((ap_enable_reg_pp0_iter5 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter6 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter5 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter6 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln179_fu_1237_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Y_fu_1773_p3 = ((and_ln191_1_fu_1767_p2[0:0] === 1'b1) ? com0_reg_2174_pp0_iter4_reg : com1_reg_2181_pp0_iter4_reg);

assign add_ln179_fu_1243_p2 = (indvar_flatten_reg_1186 + 10'd1);

assign add_ln189_fu_1307_p2 = (6'd2 + ap_phi_mux_col_0_phi_fu_1201_p4);

assign and_ln189_1_fu_1591_p2 = (grp_fu_1219_p2 & and_ln189_fu_1585_p2);

assign and_ln189_fu_1585_p2 = (or_ln189_fu_1561_p2 & or_ln189_1_fu_1579_p2);

assign and_ln190_1_fu_1679_p2 = (grp_fu_1223_p2 & and_ln190_fu_1673_p2);

assign and_ln190_fu_1673_p2 = (or_ln190_fu_1649_p2 & or_ln190_1_fu_1667_p2);

assign and_ln191_1_fu_1767_p2 = (grp_fu_1227_p2 & and_ln191_fu_1761_p2);

assign and_ln191_fu_1761_p2 = (or_ln191_fu_1737_p2 & or_ln191_1_fu_1755_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign bitcast_ln189_1_fu_1532_p1 = tmp_1_reg_2153_pp0_iter2_reg;

assign bitcast_ln189_fu_1515_p1 = tmp_reg_2146_pp0_iter2_reg;

assign bitcast_ln190_1_fu_1620_p1 = tmp_8_reg_2167_pp0_iter2_reg;

assign bitcast_ln190_fu_1603_p1 = tmp_7_reg_2160_pp0_iter2_reg;

assign bitcast_ln191_1_fu_1708_p1 = com1_reg_2181_pp0_iter4_reg;

assign bitcast_ln191_fu_1691_p1 = com0_reg_2174_pp0_iter4_reg;

assign col_fu_1231_p2 = (ap_phi_mux_col_0_phi_fu_1201_p4 + 6'd1);

assign com0_fu_1597_p3 = ((and_ln189_1_fu_1591_p2[0:0] === 1'b1) ? tmp_reg_2146_pp0_iter2_reg : tmp_1_reg_2153_pp0_iter2_reg);

assign com1_fu_1685_p3 = ((and_ln190_1_fu_1679_p2[0:0] === 1'b1) ? tmp_7_reg_2160_pp0_iter2_reg : tmp_8_reg_2167_pp0_iter2_reg);

assign icmp_ln179_fu_1237_p2 = ((indvar_flatten_reg_1186 == 10'd896) ? 1'b1 : 1'b0);

assign icmp_ln184_fu_1249_p2 = ((ti_0_reg_1208 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln189_1_fu_1555_p2 = ((trunc_ln189_1_fu_1528_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln189_2_fu_1567_p2 = ((tmp_5_fu_1535_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln189_3_fu_1573_p2 = ((trunc_ln189_2_fu_1545_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln189_fu_1549_p2 = ((tmp_2_fu_1518_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln190_1_fu_1643_p2 = ((trunc_ln190_fu_1616_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln190_2_fu_1655_p2 = ((tmp_s_fu_1623_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln190_3_fu_1661_p2 = ((trunc_ln190_1_fu_1633_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln190_fu_1637_p2 = ((tmp_9_fu_1606_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln191_1_fu_1731_p2 = ((trunc_ln191_fu_1704_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln191_2_fu_1743_p2 = ((tmp_11_fu_1711_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln191_3_fu_1749_p2 = ((trunc_ln191_1_fu_1721_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln191_fu_1725_p2 = ((tmp_10_fu_1694_p4 != 8'd255) ? 1'b1 : 1'b0);

assign ifm_buff0_0_address0 = zext_ln189_fu_1271_p1;

assign ifm_buff0_0_address1 = zext_ln189_1_fu_1321_p1;

assign ifm_buff0_10_address0 = zext_ln189_fu_1271_p1;

assign ifm_buff0_10_address1 = zext_ln189_1_fu_1321_p1;

assign ifm_buff0_11_address0 = zext_ln189_fu_1271_p1;

assign ifm_buff0_11_address1 = zext_ln189_1_fu_1321_p1;

assign ifm_buff0_12_address0 = zext_ln189_fu_1271_p1;

assign ifm_buff0_12_address1 = zext_ln189_1_fu_1321_p1;

assign ifm_buff0_13_address0 = zext_ln189_fu_1271_p1;

assign ifm_buff0_13_address1 = zext_ln189_1_fu_1321_p1;

assign ifm_buff0_14_address0 = zext_ln189_fu_1271_p1;

assign ifm_buff0_14_address1 = zext_ln189_1_fu_1321_p1;

assign ifm_buff0_15_address0 = zext_ln189_fu_1271_p1;

assign ifm_buff0_15_address1 = zext_ln189_1_fu_1321_p1;

assign ifm_buff0_1_address0 = zext_ln189_fu_1271_p1;

assign ifm_buff0_1_address1 = zext_ln189_1_fu_1321_p1;

assign ifm_buff0_2_address0 = zext_ln189_fu_1271_p1;

assign ifm_buff0_2_address1 = zext_ln189_1_fu_1321_p1;

assign ifm_buff0_3_address0 = zext_ln189_fu_1271_p1;

assign ifm_buff0_3_address1 = zext_ln189_1_fu_1321_p1;

assign ifm_buff0_4_address0 = zext_ln189_fu_1271_p1;

assign ifm_buff0_4_address1 = zext_ln189_1_fu_1321_p1;

assign ifm_buff0_5_address0 = zext_ln189_fu_1271_p1;

assign ifm_buff0_5_address1 = zext_ln189_1_fu_1321_p1;

assign ifm_buff0_6_address0 = zext_ln189_fu_1271_p1;

assign ifm_buff0_6_address1 = zext_ln189_1_fu_1321_p1;

assign ifm_buff0_7_address0 = zext_ln189_fu_1271_p1;

assign ifm_buff0_7_address1 = zext_ln189_1_fu_1321_p1;

assign ifm_buff0_8_address0 = zext_ln189_fu_1271_p1;

assign ifm_buff0_8_address1 = zext_ln189_1_fu_1321_p1;

assign ifm_buff0_9_address0 = zext_ln189_fu_1271_p1;

assign ifm_buff0_9_address1 = zext_ln189_1_fu_1321_p1;

assign ifm_buff1_0_address0 = zext_ln189_fu_1271_p1;

assign ifm_buff1_0_address1 = zext_ln189_1_fu_1321_p1;

assign ifm_buff1_10_address0 = zext_ln189_fu_1271_p1;

assign ifm_buff1_10_address1 = zext_ln189_1_fu_1321_p1;

assign ifm_buff1_11_address0 = zext_ln189_fu_1271_p1;

assign ifm_buff1_11_address1 = zext_ln189_1_fu_1321_p1;

assign ifm_buff1_12_address0 = zext_ln189_fu_1271_p1;

assign ifm_buff1_12_address1 = zext_ln189_1_fu_1321_p1;

assign ifm_buff1_13_address0 = zext_ln189_fu_1271_p1;

assign ifm_buff1_13_address1 = zext_ln189_1_fu_1321_p1;

assign ifm_buff1_14_address0 = zext_ln189_fu_1271_p1;

assign ifm_buff1_14_address1 = zext_ln189_1_fu_1321_p1;

assign ifm_buff1_15_address0 = zext_ln189_fu_1271_p1;

assign ifm_buff1_15_address1 = zext_ln189_1_fu_1321_p1;

assign ifm_buff1_1_address0 = zext_ln189_fu_1271_p1;

assign ifm_buff1_1_address1 = zext_ln189_1_fu_1321_p1;

assign ifm_buff1_2_address0 = zext_ln189_fu_1271_p1;

assign ifm_buff1_2_address1 = zext_ln189_1_fu_1321_p1;

assign ifm_buff1_3_address0 = zext_ln189_fu_1271_p1;

assign ifm_buff1_3_address1 = zext_ln189_1_fu_1321_p1;

assign ifm_buff1_4_address0 = zext_ln189_fu_1271_p1;

assign ifm_buff1_4_address1 = zext_ln189_1_fu_1321_p1;

assign ifm_buff1_5_address0 = zext_ln189_fu_1271_p1;

assign ifm_buff1_5_address1 = zext_ln189_1_fu_1321_p1;

assign ifm_buff1_6_address0 = zext_ln189_fu_1271_p1;

assign ifm_buff1_6_address1 = zext_ln189_1_fu_1321_p1;

assign ifm_buff1_7_address0 = zext_ln189_fu_1271_p1;

assign ifm_buff1_7_address1 = zext_ln189_1_fu_1321_p1;

assign ifm_buff1_8_address0 = zext_ln189_fu_1271_p1;

assign ifm_buff1_8_address1 = zext_ln189_1_fu_1321_p1;

assign ifm_buff1_9_address0 = zext_ln189_fu_1271_p1;

assign ifm_buff1_9_address1 = zext_ln189_1_fu_1321_p1;

assign ofm_buff0_0_address0 = zext_ln189_reg_1793_pp0_iter5_reg;

assign ofm_buff0_0_d0 = Y_reg_2188;

assign ofm_buff0_10_address0 = zext_ln189_reg_1793_pp0_iter5_reg;

assign ofm_buff0_10_d0 = Y_reg_2188;

assign ofm_buff0_11_address0 = zext_ln189_reg_1793_pp0_iter5_reg;

assign ofm_buff0_11_d0 = Y_reg_2188;

assign ofm_buff0_12_address0 = zext_ln189_reg_1793_pp0_iter5_reg;

assign ofm_buff0_12_d0 = Y_reg_2188;

assign ofm_buff0_13_address0 = zext_ln189_reg_1793_pp0_iter5_reg;

assign ofm_buff0_13_d0 = Y_reg_2188;

assign ofm_buff0_14_address0 = zext_ln189_reg_1793_pp0_iter5_reg;

assign ofm_buff0_14_d0 = Y_reg_2188;

assign ofm_buff0_15_address0 = zext_ln189_reg_1793_pp0_iter5_reg;

assign ofm_buff0_15_d0 = Y_reg_2188;

assign ofm_buff0_1_address0 = zext_ln189_reg_1793_pp0_iter5_reg;

assign ofm_buff0_1_d0 = Y_reg_2188;

assign ofm_buff0_2_address0 = zext_ln189_reg_1793_pp0_iter5_reg;

assign ofm_buff0_2_d0 = Y_reg_2188;

assign ofm_buff0_3_address0 = zext_ln189_reg_1793_pp0_iter5_reg;

assign ofm_buff0_3_d0 = Y_reg_2188;

assign ofm_buff0_4_address0 = zext_ln189_reg_1793_pp0_iter5_reg;

assign ofm_buff0_4_d0 = Y_reg_2188;

assign ofm_buff0_5_address0 = zext_ln189_reg_1793_pp0_iter5_reg;

assign ofm_buff0_5_d0 = Y_reg_2188;

assign ofm_buff0_6_address0 = zext_ln189_reg_1793_pp0_iter5_reg;

assign ofm_buff0_6_d0 = Y_reg_2188;

assign ofm_buff0_7_address0 = zext_ln189_reg_1793_pp0_iter5_reg;

assign ofm_buff0_7_d0 = Y_reg_2188;

assign ofm_buff0_8_address0 = zext_ln189_reg_1793_pp0_iter5_reg;

assign ofm_buff0_8_d0 = Y_reg_2188;

assign ofm_buff0_9_address0 = zext_ln189_reg_1793_pp0_iter5_reg;

assign ofm_buff0_9_d0 = Y_reg_2188;

assign or_ln189_1_fu_1579_p2 = (icmp_ln189_3_fu_1573_p2 | icmp_ln189_2_fu_1567_p2);

assign or_ln189_fu_1561_p2 = (icmp_ln189_fu_1549_p2 | icmp_ln189_1_fu_1555_p2);

assign or_ln190_1_fu_1667_p2 = (icmp_ln190_3_fu_1661_p2 | icmp_ln190_2_fu_1655_p2);

assign or_ln190_fu_1649_p2 = (icmp_ln190_fu_1637_p2 | icmp_ln190_1_fu_1643_p2);

assign or_ln191_1_fu_1755_p2 = (icmp_ln191_3_fu_1749_p2 | icmp_ln191_2_fu_1743_p2);

assign or_ln191_fu_1737_p2 = (icmp_ln191_fu_1725_p2 | icmp_ln191_1_fu_1731_p2);

assign select_ln189_1_fu_1263_p3 = ((icmp_ln184_fu_1249_p2[0:0] === 1'b1) ? col_fu_1231_p2 : ap_phi_mux_col_0_phi_fu_1201_p4);

assign select_ln189_2_fu_1313_p3 = ((icmp_ln184_fu_1249_p2[0:0] === 1'b1) ? add_ln189_fu_1307_p2 : col_fu_1231_p2);

assign select_ln189_fu_1255_p3 = ((icmp_ln184_fu_1249_p2[0:0] === 1'b1) ? 5'd0 : ti_0_reg_1208);

assign ti_fu_1361_p2 = (select_ln189_fu_1255_p3 + 5'd1);

assign tmp_10_fu_1694_p4 = {{bitcast_ln191_fu_1691_p1[30:23]}};

assign tmp_11_fu_1711_p4 = {{bitcast_ln191_1_fu_1708_p1[30:23]}};

assign tmp_2_fu_1518_p4 = {{bitcast_ln189_fu_1515_p1[30:23]}};

assign tmp_5_fu_1535_p4 = {{bitcast_ln189_1_fu_1532_p1[30:23]}};

assign tmp_9_fu_1606_p4 = {{bitcast_ln190_fu_1603_p1[30:23]}};

assign tmp_s_fu_1623_p4 = {{bitcast_ln190_1_fu_1620_p1[30:23]}};

assign trunc_ln189_1_fu_1528_p1 = bitcast_ln189_fu_1515_p1[22:0];

assign trunc_ln189_2_fu_1545_p1 = bitcast_ln189_1_fu_1532_p1[22:0];

assign trunc_ln189_fu_1357_p1 = select_ln189_fu_1255_p3[3:0];

assign trunc_ln190_1_fu_1633_p1 = bitcast_ln190_1_fu_1620_p1[22:0];

assign trunc_ln190_fu_1616_p1 = bitcast_ln190_fu_1603_p1[22:0];

assign trunc_ln191_1_fu_1721_p1 = bitcast_ln191_1_fu_1708_p1[22:0];

assign trunc_ln191_fu_1704_p1 = bitcast_ln191_fu_1691_p1[22:0];

assign zext_ln189_1_fu_1321_p1 = select_ln189_2_fu_1313_p3;

assign zext_ln189_fu_1271_p1 = select_ln189_1_fu_1263_p3;

always @ (posedge ap_clk) begin
    zext_ln189_reg_1793[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln189_reg_1793_pp0_iter1_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln189_reg_1793_pp0_iter2_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln189_reg_1793_pp0_iter3_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln189_reg_1793_pp0_iter4_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln189_reg_1793_pp0_iter5_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
end

endmodule //pool_write
