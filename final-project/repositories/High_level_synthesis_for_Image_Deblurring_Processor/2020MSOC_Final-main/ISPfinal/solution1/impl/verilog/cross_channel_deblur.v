// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module cross_channel_deblur (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        Img_address0,
        Img_ce0,
        Img_we0,
        Img_d0,
        Img_q0,
        adjChImg_address0,
        adjChImg_ce0,
        adjChImg_q0,
        adjChImg_address1,
        adjChImg_ce1,
        adjChImg_q1,
        adjChImg2_address0,
        adjChImg2_ce0,
        adjChImg2_q0,
        adjChImg2_address1,
        adjChImg2_ce1,
        adjChImg2_q1,
        coe_a_M_real_address0,
        coe_a_M_real_ce0,
        coe_a_M_real_q0,
        coe_a_M_imag_address0,
        coe_a_M_imag_ce0,
        coe_a_M_imag_q0,
        coe_b_address0,
        coe_b_ce0,
        coe_b_q0
);

parameter    ap_ST_fsm_state1 = 21'd1;
parameter    ap_ST_fsm_state2 = 21'd2;
parameter    ap_ST_fsm_state3 = 21'd4;
parameter    ap_ST_fsm_state4 = 21'd8;
parameter    ap_ST_fsm_state5 = 21'd16;
parameter    ap_ST_fsm_state6 = 21'd32;
parameter    ap_ST_fsm_state7 = 21'd64;
parameter    ap_ST_fsm_state8 = 21'd128;
parameter    ap_ST_fsm_state9 = 21'd256;
parameter    ap_ST_fsm_state10 = 21'd512;
parameter    ap_ST_fsm_state11 = 21'd1024;
parameter    ap_ST_fsm_state12 = 21'd2048;
parameter    ap_ST_fsm_state13 = 21'd4096;
parameter    ap_ST_fsm_state14 = 21'd8192;
parameter    ap_ST_fsm_state15 = 21'd16384;
parameter    ap_ST_fsm_state16 = 21'd32768;
parameter    ap_ST_fsm_state17 = 21'd65536;
parameter    ap_ST_fsm_state18 = 21'd131072;
parameter    ap_ST_fsm_state19 = 21'd262144;
parameter    ap_ST_fsm_state20 = 21'd524288;
parameter    ap_ST_fsm_state21 = 21'd1048576;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [13:0] Img_address0;
output   Img_ce0;
output   Img_we0;
output  [31:0] Img_d0;
input  [31:0] Img_q0;
output  [13:0] adjChImg_address0;
output   adjChImg_ce0;
input  [31:0] adjChImg_q0;
output  [13:0] adjChImg_address1;
output   adjChImg_ce1;
input  [31:0] adjChImg_q1;
output  [13:0] adjChImg2_address0;
output   adjChImg2_ce0;
input  [31:0] adjChImg2_q0;
output  [13:0] adjChImg2_address1;
output   adjChImg2_ce1;
input  [31:0] adjChImg2_q1;
output  [13:0] coe_a_M_real_address0;
output   coe_a_M_real_ce0;
input  [31:0] coe_a_M_real_q0;
output  [13:0] coe_a_M_imag_address0;
output   coe_a_M_imag_ce0;
input  [31:0] coe_a_M_imag_q0;
output  [13:0] coe_b_address0;
output   coe_b_ce0;
input  [31:0] coe_b_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[13:0] Img_address0;
reg Img_ce0;
reg Img_we0;

(* fsm_encoding = "none" *) reg   [20:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [14:0] add_ln63_fu_403_p2;
wire    ap_CS_fsm_state5;
wire   [7:0] select_ln68_1_fu_429_p3;
wire   [0:0] icmp_ln63_fu_397_p2;
wire   [7:0] x_fu_472_p2;
wire   [3:0] k_fu_484_p2;
reg   [3:0] k_reg_585;
wire    ap_CS_fsm_state7;
wire   [14:0] add_ln85_fu_496_p2;
reg   [14:0] add_ln85_reg_593;
wire    ap_CS_fsm_state13;
wire   [7:0] select_ln90_1_fu_522_p3;
reg   [7:0] select_ln90_1_reg_598;
wire   [0:0] icmp_ln85_fu_490_p2;
wire   [63:0] zext_ln90_1_fu_552_p1;
reg   [63:0] zext_ln90_1_reg_603;
wire   [7:0] i_fu_558_p2;
reg   [7:0] i_reg_618;
wire   [31:0] x_2_q0;
reg   [31:0] x_2_load_reg_623;
wire    ap_CS_fsm_state14;
wire   [31:0] x_old_q0;
reg   [31:0] x_old_load_reg_628;
wire   [31:0] grp_fu_393_p2;
reg   [31:0] tmp_i6_reg_633;
wire    ap_CS_fsm_state19;
reg   [13:0] x_bar_address0;
reg    x_bar_ce0;
reg    x_bar_we0;
reg   [31:0] x_bar_d0;
wire   [31:0] x_bar_q0;
reg    x_bar_ce1;
wire   [31:0] x_bar_q1;
reg   [13:0] x_old_address0;
reg    x_old_ce0;
reg    x_old_we0;
reg   [13:0] x_2_address0;
reg    x_2_ce0;
reg    x_2_we0;
reg   [31:0] x_2_d0;
reg   [13:0] y_1_address0;
reg    y_1_ce0;
reg    y_1_we0;
reg   [31:0] y_1_d0;
wire   [31:0] y_1_q0;
reg   [13:0] y_2_address0;
reg    y_2_ce0;
reg    y_2_we0;
reg   [31:0] y_2_d0;
wire   [31:0] y_2_q0;
reg    y_2_ce1;
wire   [31:0] y_2_q1;
reg   [13:0] y_3_address0;
reg    y_3_ce0;
reg    y_3_we0;
reg   [31:0] y_3_d0;
wire   [31:0] y_3_q0;
reg    y_3_ce1;
wire   [31:0] y_3_q1;
reg   [13:0] y_4_address0;
reg    y_4_ce0;
reg    y_4_we0;
reg   [31:0] y_4_d0;
wire   [31:0] y_4_q0;
reg    y_4_ce1;
wire   [31:0] y_4_q1;
reg   [13:0] y_5_address0;
reg    y_5_ce0;
reg    y_5_we0;
reg   [31:0] y_5_d0;
wire   [31:0] y_5_q0;
reg    y_5_ce1;
wire   [31:0] y_5_q1;
reg   [13:0] y_6_address0;
reg    y_6_ce0;
reg    y_6_we0;
reg   [31:0] y_6_d0;
wire   [31:0] y_6_q0;
reg   [13:0] y_7_address0;
reg    y_7_ce0;
reg    y_7_we0;
reg   [31:0] y_7_d0;
wire   [31:0] y_7_q0;
reg    y_7_ce1;
wire   [31:0] y_7_q1;
reg   [13:0] y_8_address0;
reg    y_8_ce0;
reg    y_8_we0;
reg   [31:0] y_8_d0;
wire   [31:0] y_8_q0;
reg   [13:0] y_9_address0;
reg    y_9_ce0;
reg    y_9_we0;
reg   [31:0] y_9_d0;
wire   [31:0] y_9_q0;
reg    y_9_ce1;
wire   [31:0] y_9_q1;
wire    grp_my_filter_v12_fu_354_ap_start;
wire    grp_my_filter_v12_fu_354_ap_done;
wire    grp_my_filter_v12_fu_354_ap_idle;
wire    grp_my_filter_v12_fu_354_ap_ready;
wire   [13:0] grp_my_filter_v12_fu_354_f_n_address0;
wire    grp_my_filter_v12_fu_354_f_n_ce0;
wire    grp_my_filter_v12_fu_354_f_n_we0;
wire   [31:0] grp_my_filter_v12_fu_354_f_n_d0;
wire   [13:0] grp_my_filter_v12_fu_354_f_address0;
wire    grp_my_filter_v12_fu_354_f_ce0;
wire   [13:0] grp_my_filter_v12_fu_354_f_address1;
wire    grp_my_filter_v12_fu_354_f_ce1;
wire   [13:0] grp_my_filter_v12_fu_354_adjChImg_address0;
wire    grp_my_filter_v12_fu_354_adjChImg_ce0;
wire   [13:0] grp_my_filter_v12_fu_354_adjChImg_address1;
wire    grp_my_filter_v12_fu_354_adjChImg_ce1;
wire   [13:0] grp_my_filter_v12_fu_354_adjChImg2_address0;
wire    grp_my_filter_v12_fu_354_adjChImg2_ce0;
wire   [13:0] grp_my_filter_v12_fu_354_adjChImg2_address1;
wire    grp_my_filter_v12_fu_354_adjChImg2_ce1;
wire   [13:0] grp_my_filter_v12_fu_354_g1_address0;
wire    grp_my_filter_v12_fu_354_g1_ce0;
wire    grp_my_filter_v12_fu_354_g1_we0;
wire   [31:0] grp_my_filter_v12_fu_354_g1_d0;
wire   [13:0] grp_my_filter_v12_fu_354_g2_address0;
wire    grp_my_filter_v12_fu_354_g2_ce0;
wire    grp_my_filter_v12_fu_354_g2_we0;
wire   [31:0] grp_my_filter_v12_fu_354_g2_d0;
wire   [13:0] grp_my_filter_v12_fu_354_g2_address1;
wire    grp_my_filter_v12_fu_354_g2_ce1;
wire   [13:0] grp_my_filter_v12_fu_354_g3_address0;
wire    grp_my_filter_v12_fu_354_g3_ce0;
wire    grp_my_filter_v12_fu_354_g3_we0;
wire   [31:0] grp_my_filter_v12_fu_354_g3_d0;
wire   [13:0] grp_my_filter_v12_fu_354_g3_address1;
wire    grp_my_filter_v12_fu_354_g3_ce1;
wire   [13:0] grp_my_filter_v12_fu_354_g4_address0;
wire    grp_my_filter_v12_fu_354_g4_ce0;
wire    grp_my_filter_v12_fu_354_g4_we0;
wire   [31:0] grp_my_filter_v12_fu_354_g4_d0;
wire   [13:0] grp_my_filter_v12_fu_354_g4_address1;
wire    grp_my_filter_v12_fu_354_g4_ce1;
wire   [13:0] grp_my_filter_v12_fu_354_g5_address0;
wire    grp_my_filter_v12_fu_354_g5_ce0;
wire    grp_my_filter_v12_fu_354_g5_we0;
wire   [31:0] grp_my_filter_v12_fu_354_g5_d0;
wire   [13:0] grp_my_filter_v12_fu_354_g5_address1;
wire    grp_my_filter_v12_fu_354_g5_ce1;
wire   [13:0] grp_my_filter_v12_fu_354_g6_address0;
wire    grp_my_filter_v12_fu_354_g6_ce0;
wire    grp_my_filter_v12_fu_354_g6_we0;
wire   [31:0] grp_my_filter_v12_fu_354_g6_d0;
wire   [13:0] grp_my_filter_v12_fu_354_g7_address0;
wire    grp_my_filter_v12_fu_354_g7_ce0;
wire    grp_my_filter_v12_fu_354_g7_we0;
wire   [31:0] grp_my_filter_v12_fu_354_g7_d0;
wire   [13:0] grp_my_filter_v12_fu_354_g7_address1;
wire    grp_my_filter_v12_fu_354_g7_ce1;
wire   [13:0] grp_my_filter_v12_fu_354_g8_address0;
wire    grp_my_filter_v12_fu_354_g8_ce0;
wire    grp_my_filter_v12_fu_354_g8_we0;
wire   [31:0] grp_my_filter_v12_fu_354_g8_d0;
wire   [13:0] grp_my_filter_v12_fu_354_g9_address0;
wire    grp_my_filter_v12_fu_354_g9_ce0;
wire    grp_my_filter_v12_fu_354_g9_we0;
wire   [31:0] grp_my_filter_v12_fu_354_g9_d0;
wire   [13:0] grp_my_filter_v12_fu_354_g9_address1;
wire    grp_my_filter_v12_fu_354_g9_ce1;
wire    grp_ProxGS4_fu_373_ap_start;
wire    grp_ProxGS4_fu_373_ap_done;
wire    grp_ProxGS4_fu_373_ap_idle;
wire    grp_ProxGS4_fu_373_ap_ready;
wire   [13:0] grp_ProxGS4_fu_373_x_io_address0;
wire    grp_ProxGS4_fu_373_x_io_ce0;
wire    grp_ProxGS4_fu_373_x_io_we0;
wire   [31:0] grp_ProxGS4_fu_373_x_io_d0;
wire   [13:0] grp_ProxGS4_fu_373_coe_a_M_real_address0;
wire    grp_ProxGS4_fu_373_coe_a_M_real_ce0;
wire   [13:0] grp_ProxGS4_fu_373_coe_a_M_imag_address0;
wire    grp_ProxGS4_fu_373_coe_a_M_imag_ce0;
wire   [13:0] grp_ProxGS4_fu_373_coe_b_address0;
wire    grp_ProxGS4_fu_373_coe_b_ce0;
wire    grp_array_copy3_fu_384_ap_start;
wire    grp_array_copy3_fu_384_ap_done;
wire    grp_array_copy3_fu_384_ap_idle;
wire    grp_array_copy3_fu_384_ap_ready;
wire   [13:0] grp_array_copy3_fu_384_data_in_address0;
wire    grp_array_copy3_fu_384_data_in_ce0;
reg   [31:0] grp_array_copy3_fu_384_data_in_q0;
wire   [13:0] grp_array_copy3_fu_384_data_out_address0;
wire    grp_array_copy3_fu_384_data_out_ce0;
wire    grp_array_copy3_fu_384_data_out_we0;
wire   [31:0] grp_array_copy3_fu_384_data_out_d0;
reg   [14:0] indvar_flatten_reg_277;
wire    ap_CS_fsm_state4;
reg   [7:0] y_0_i_reg_288;
reg   [7:0] x_0_i_reg_299;
reg   [3:0] k_0_reg_310;
wire    ap_CS_fsm_state6;
reg   [14:0] indvar_flatten11_reg_321;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state20;
reg   [7:0] j_0_i_reg_332;
reg   [7:0] i_0_i_reg_343;
reg    grp_my_filter_v12_fu_354_ap_start_reg;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state10;
reg    grp_ProxGS4_fu_373_ap_start_reg;
wire    ap_CS_fsm_state11;
reg    grp_array_copy3_fu_384_ap_start_reg;
wire    ap_CS_fsm_state3;
wire   [0:0] icmp_ln105_fu_478_p2;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state21;
wire   [63:0] zext_ln68_1_fu_459_p1;
wire    ap_CS_fsm_state15;
wire   [0:0] icmp_ln65_fu_415_p2;
wire   [7:0] y_fu_409_p2;
wire   [14:0] tmp_fu_437_p3;
wire   [7:0] select_ln68_fu_421_p3;
wire   [15:0] zext_ln68_fu_449_p1;
wire   [15:0] zext_ln66_fu_445_p1;
wire   [15:0] add_ln68_fu_453_p2;
wire   [0:0] icmp_ln87_fu_508_p2;
wire   [7:0] j_fu_502_p2;
wire   [14:0] tmp_s_fu_530_p3;
wire   [7:0] select_ln90_fu_514_p3;
wire   [15:0] zext_ln90_fu_542_p1;
wire   [15:0] zext_ln88_fu_538_p1;
wire   [15:0] add_ln90_fu_546_p2;
reg   [20:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 21'd1;
#0 grp_my_filter_v12_fu_354_ap_start_reg = 1'b0;
#0 grp_ProxGS4_fu_373_ap_start_reg = 1'b0;
#0 grp_array_copy3_fu_384_ap_start_reg = 1'b0;
end

cross_channel_debsc4 #(
    .DataWidth( 32 ),
    .AddressRange( 16384 ),
    .AddressWidth( 14 ))
x_bar_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(x_bar_address0),
    .ce0(x_bar_ce0),
    .we0(x_bar_we0),
    .d0(x_bar_d0),
    .q0(x_bar_q0),
    .address1(grp_my_filter_v12_fu_354_f_address1),
    .ce1(x_bar_ce1),
    .q1(x_bar_q1)
);

ProxGS4_tmp_M_real #(
    .DataWidth( 32 ),
    .AddressRange( 16384 ),
    .AddressWidth( 14 ))
x_old_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(x_old_address0),
    .ce0(x_old_ce0),
    .we0(x_old_we0),
    .d0(grp_array_copy3_fu_384_data_out_d0),
    .q0(x_old_q0)
);

ProxGS4_tmp_M_real #(
    .DataWidth( 32 ),
    .AddressRange( 16384 ),
    .AddressWidth( 14 ))
x_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(x_2_address0),
    .ce0(x_2_ce0),
    .we0(x_2_we0),
    .d0(x_2_d0),
    .q0(x_2_q0)
);

ProxGS4_tmp_M_real #(
    .DataWidth( 32 ),
    .AddressRange( 16384 ),
    .AddressWidth( 14 ))
y_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(y_1_address0),
    .ce0(y_1_ce0),
    .we0(y_1_we0),
    .d0(y_1_d0),
    .q0(y_1_q0)
);

cross_channel_debsc4 #(
    .DataWidth( 32 ),
    .AddressRange( 16384 ),
    .AddressWidth( 14 ))
y_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(y_2_address0),
    .ce0(y_2_ce0),
    .we0(y_2_we0),
    .d0(y_2_d0),
    .q0(y_2_q0),
    .address1(grp_my_filter_v12_fu_354_g2_address1),
    .ce1(y_2_ce1),
    .q1(y_2_q1)
);

cross_channel_debsc4 #(
    .DataWidth( 32 ),
    .AddressRange( 16384 ),
    .AddressWidth( 14 ))
y_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(y_3_address0),
    .ce0(y_3_ce0),
    .we0(y_3_we0),
    .d0(y_3_d0),
    .q0(y_3_q0),
    .address1(grp_my_filter_v12_fu_354_g3_address1),
    .ce1(y_3_ce1),
    .q1(y_3_q1)
);

cross_channel_debsc4 #(
    .DataWidth( 32 ),
    .AddressRange( 16384 ),
    .AddressWidth( 14 ))
y_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(y_4_address0),
    .ce0(y_4_ce0),
    .we0(y_4_we0),
    .d0(y_4_d0),
    .q0(y_4_q0),
    .address1(grp_my_filter_v12_fu_354_g4_address1),
    .ce1(y_4_ce1),
    .q1(y_4_q1)
);

cross_channel_debsc4 #(
    .DataWidth( 32 ),
    .AddressRange( 16384 ),
    .AddressWidth( 14 ))
y_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(y_5_address0),
    .ce0(y_5_ce0),
    .we0(y_5_we0),
    .d0(y_5_d0),
    .q0(y_5_q0),
    .address1(grp_my_filter_v12_fu_354_g5_address1),
    .ce1(y_5_ce1),
    .q1(y_5_q1)
);

ProxGS4_tmp_M_real #(
    .DataWidth( 32 ),
    .AddressRange( 16384 ),
    .AddressWidth( 14 ))
y_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(y_6_address0),
    .ce0(y_6_ce0),
    .we0(y_6_we0),
    .d0(y_6_d0),
    .q0(y_6_q0)
);

cross_channel_debsc4 #(
    .DataWidth( 32 ),
    .AddressRange( 16384 ),
    .AddressWidth( 14 ))
y_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(y_7_address0),
    .ce0(y_7_ce0),
    .we0(y_7_we0),
    .d0(y_7_d0),
    .q0(y_7_q0),
    .address1(grp_my_filter_v12_fu_354_g7_address1),
    .ce1(y_7_ce1),
    .q1(y_7_q1)
);

ProxGS4_tmp_M_real #(
    .DataWidth( 32 ),
    .AddressRange( 16384 ),
    .AddressWidth( 14 ))
y_8_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(y_8_address0),
    .ce0(y_8_ce0),
    .we0(y_8_we0),
    .d0(y_8_d0),
    .q0(y_8_q0)
);

cross_channel_debsc4 #(
    .DataWidth( 32 ),
    .AddressRange( 16384 ),
    .AddressWidth( 14 ))
y_9_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(y_9_address0),
    .ce0(y_9_ce0),
    .we0(y_9_we0),
    .d0(y_9_d0),
    .q0(y_9_q0),
    .address1(grp_my_filter_v12_fu_354_g9_address1),
    .ce1(y_9_ce1),
    .q1(y_9_q1)
);

my_filter_v12 grp_my_filter_v12_fu_354(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_my_filter_v12_fu_354_ap_start),
    .ap_done(grp_my_filter_v12_fu_354_ap_done),
    .ap_idle(grp_my_filter_v12_fu_354_ap_idle),
    .ap_ready(grp_my_filter_v12_fu_354_ap_ready),
    .f_n_address0(grp_my_filter_v12_fu_354_f_n_address0),
    .f_n_ce0(grp_my_filter_v12_fu_354_f_n_ce0),
    .f_n_we0(grp_my_filter_v12_fu_354_f_n_we0),
    .f_n_d0(grp_my_filter_v12_fu_354_f_n_d0),
    .f_n_q0(x_2_q0),
    .f_address0(grp_my_filter_v12_fu_354_f_address0),
    .f_ce0(grp_my_filter_v12_fu_354_f_ce0),
    .f_q0(x_bar_q0),
    .f_address1(grp_my_filter_v12_fu_354_f_address1),
    .f_ce1(grp_my_filter_v12_fu_354_f_ce1),
    .f_q1(x_bar_q1),
    .adjChImg_address0(grp_my_filter_v12_fu_354_adjChImg_address0),
    .adjChImg_ce0(grp_my_filter_v12_fu_354_adjChImg_ce0),
    .adjChImg_q0(adjChImg_q0),
    .adjChImg_address1(grp_my_filter_v12_fu_354_adjChImg_address1),
    .adjChImg_ce1(grp_my_filter_v12_fu_354_adjChImg_ce1),
    .adjChImg_q1(adjChImg_q1),
    .adjChImg2_address0(grp_my_filter_v12_fu_354_adjChImg2_address0),
    .adjChImg2_ce0(grp_my_filter_v12_fu_354_adjChImg2_ce0),
    .adjChImg2_q0(adjChImg2_q0),
    .adjChImg2_address1(grp_my_filter_v12_fu_354_adjChImg2_address1),
    .adjChImg2_ce1(grp_my_filter_v12_fu_354_adjChImg2_ce1),
    .adjChImg2_q1(adjChImg2_q1),
    .g1_address0(grp_my_filter_v12_fu_354_g1_address0),
    .g1_ce0(grp_my_filter_v12_fu_354_g1_ce0),
    .g1_we0(grp_my_filter_v12_fu_354_g1_we0),
    .g1_d0(grp_my_filter_v12_fu_354_g1_d0),
    .g1_q0(y_1_q0),
    .g2_address0(grp_my_filter_v12_fu_354_g2_address0),
    .g2_ce0(grp_my_filter_v12_fu_354_g2_ce0),
    .g2_we0(grp_my_filter_v12_fu_354_g2_we0),
    .g2_d0(grp_my_filter_v12_fu_354_g2_d0),
    .g2_q0(y_2_q0),
    .g2_address1(grp_my_filter_v12_fu_354_g2_address1),
    .g2_ce1(grp_my_filter_v12_fu_354_g2_ce1),
    .g2_q1(y_2_q1),
    .g3_address0(grp_my_filter_v12_fu_354_g3_address0),
    .g3_ce0(grp_my_filter_v12_fu_354_g3_ce0),
    .g3_we0(grp_my_filter_v12_fu_354_g3_we0),
    .g3_d0(grp_my_filter_v12_fu_354_g3_d0),
    .g3_q0(y_3_q0),
    .g3_address1(grp_my_filter_v12_fu_354_g3_address1),
    .g3_ce1(grp_my_filter_v12_fu_354_g3_ce1),
    .g3_q1(y_3_q1),
    .g4_address0(grp_my_filter_v12_fu_354_g4_address0),
    .g4_ce0(grp_my_filter_v12_fu_354_g4_ce0),
    .g4_we0(grp_my_filter_v12_fu_354_g4_we0),
    .g4_d0(grp_my_filter_v12_fu_354_g4_d0),
    .g4_q0(y_4_q0),
    .g4_address1(grp_my_filter_v12_fu_354_g4_address1),
    .g4_ce1(grp_my_filter_v12_fu_354_g4_ce1),
    .g4_q1(y_4_q1),
    .g5_address0(grp_my_filter_v12_fu_354_g5_address0),
    .g5_ce0(grp_my_filter_v12_fu_354_g5_ce0),
    .g5_we0(grp_my_filter_v12_fu_354_g5_we0),
    .g5_d0(grp_my_filter_v12_fu_354_g5_d0),
    .g5_q0(y_5_q0),
    .g5_address1(grp_my_filter_v12_fu_354_g5_address1),
    .g5_ce1(grp_my_filter_v12_fu_354_g5_ce1),
    .g5_q1(y_5_q1),
    .g6_address0(grp_my_filter_v12_fu_354_g6_address0),
    .g6_ce0(grp_my_filter_v12_fu_354_g6_ce0),
    .g6_we0(grp_my_filter_v12_fu_354_g6_we0),
    .g6_d0(grp_my_filter_v12_fu_354_g6_d0),
    .g6_q0(y_6_q0),
    .g7_address0(grp_my_filter_v12_fu_354_g7_address0),
    .g7_ce0(grp_my_filter_v12_fu_354_g7_ce0),
    .g7_we0(grp_my_filter_v12_fu_354_g7_we0),
    .g7_d0(grp_my_filter_v12_fu_354_g7_d0),
    .g7_q0(y_7_q0),
    .g7_address1(grp_my_filter_v12_fu_354_g7_address1),
    .g7_ce1(grp_my_filter_v12_fu_354_g7_ce1),
    .g7_q1(y_7_q1),
    .g8_address0(grp_my_filter_v12_fu_354_g8_address0),
    .g8_ce0(grp_my_filter_v12_fu_354_g8_ce0),
    .g8_we0(grp_my_filter_v12_fu_354_g8_we0),
    .g8_d0(grp_my_filter_v12_fu_354_g8_d0),
    .g8_q0(y_8_q0),
    .g9_address0(grp_my_filter_v12_fu_354_g9_address0),
    .g9_ce0(grp_my_filter_v12_fu_354_g9_ce0),
    .g9_we0(grp_my_filter_v12_fu_354_g9_we0),
    .g9_d0(grp_my_filter_v12_fu_354_g9_d0),
    .g9_q0(y_9_q0),
    .g9_address1(grp_my_filter_v12_fu_354_g9_address1),
    .g9_ce1(grp_my_filter_v12_fu_354_g9_ce1),
    .g9_q1(y_9_q1)
);

ProxGS4 grp_ProxGS4_fu_373(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_ProxGS4_fu_373_ap_start),
    .ap_done(grp_ProxGS4_fu_373_ap_done),
    .ap_idle(grp_ProxGS4_fu_373_ap_idle),
    .ap_ready(grp_ProxGS4_fu_373_ap_ready),
    .x_io_address0(grp_ProxGS4_fu_373_x_io_address0),
    .x_io_ce0(grp_ProxGS4_fu_373_x_io_ce0),
    .x_io_we0(grp_ProxGS4_fu_373_x_io_we0),
    .x_io_d0(grp_ProxGS4_fu_373_x_io_d0),
    .x_io_q0(x_2_q0),
    .coe_a_M_real_address0(grp_ProxGS4_fu_373_coe_a_M_real_address0),
    .coe_a_M_real_ce0(grp_ProxGS4_fu_373_coe_a_M_real_ce0),
    .coe_a_M_real_q0(coe_a_M_real_q0),
    .coe_a_M_imag_address0(grp_ProxGS4_fu_373_coe_a_M_imag_address0),
    .coe_a_M_imag_ce0(grp_ProxGS4_fu_373_coe_a_M_imag_ce0),
    .coe_a_M_imag_q0(coe_a_M_imag_q0),
    .coe_b_address0(grp_ProxGS4_fu_373_coe_b_address0),
    .coe_b_ce0(grp_ProxGS4_fu_373_coe_b_ce0),
    .coe_b_q0(coe_b_q0)
);

array_copy3 grp_array_copy3_fu_384(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_array_copy3_fu_384_ap_start),
    .ap_done(grp_array_copy3_fu_384_ap_done),
    .ap_idle(grp_array_copy3_fu_384_ap_idle),
    .ap_ready(grp_array_copy3_fu_384_ap_ready),
    .data_in_address0(grp_array_copy3_fu_384_data_in_address0),
    .data_in_ce0(grp_array_copy3_fu_384_data_in_ce0),
    .data_in_q0(grp_array_copy3_fu_384_data_in_q0),
    .data_out_address0(grp_array_copy3_fu_384_data_out_address0),
    .data_out_ce0(grp_array_copy3_fu_384_data_out_ce0),
    .data_out_we0(grp_array_copy3_fu_384_data_out_we0),
    .data_out_d0(grp_array_copy3_fu_384_data_out_d0)
);

DEBLUR_fsub_32ns_cud #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
DEBLUR_fsub_32ns_cud_U105(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(x_2_load_reg_623),
    .din1(x_old_load_reg_628),
    .ce(1'b1),
    .dout(grp_fu_393_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_ProxGS4_fu_373_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state11)) begin
            grp_ProxGS4_fu_373_ap_start_reg <= 1'b1;
        end else if ((grp_ProxGS4_fu_373_ap_ready == 1'b1)) begin
            grp_ProxGS4_fu_373_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_array_copy3_fu_384_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state3) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)) | ((icmp_ln105_fu_478_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7)) | ((icmp_ln105_fu_478_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7)))) begin
            grp_array_copy3_fu_384_ap_start_reg <= 1'b1;
        end else if ((grp_array_copy3_fu_384_ap_ready == 1'b1)) begin
            grp_array_copy3_fu_384_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_my_filter_v12_fu_354_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state9)) begin
            grp_my_filter_v12_fu_354_ap_start_reg <= 1'b1;
        end else if ((grp_my_filter_v12_fu_354_ap_ready == 1'b1)) begin
            grp_my_filter_v12_fu_354_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        i_0_i_reg_343 <= i_reg_618;
    end else if (((grp_ProxGS4_fu_373_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state12))) begin
        i_0_i_reg_343 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        indvar_flatten11_reg_321 <= add_ln85_reg_593;
    end else if (((grp_ProxGS4_fu_373_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state12))) begin
        indvar_flatten11_reg_321 <= 15'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln63_fu_397_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        indvar_flatten_reg_277 <= add_ln63_fu_403_p2;
    end else if (((grp_array_copy3_fu_384_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        indvar_flatten_reg_277 <= 15'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        j_0_i_reg_332 <= select_ln90_1_reg_598;
    end else if (((grp_ProxGS4_fu_373_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state12))) begin
        j_0_i_reg_332 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        k_0_reg_310 <= 4'd0;
    end else if (((1'b1 == ap_CS_fsm_state13) & (icmp_ln85_fu_490_p2 == 1'd1))) begin
        k_0_reg_310 <= k_reg_585;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln63_fu_397_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        x_0_i_reg_299 <= x_fu_472_p2;
    end else if (((grp_array_copy3_fu_384_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        x_0_i_reg_299 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln63_fu_397_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        y_0_i_reg_288 <= select_ln68_1_fu_429_p3;
    end else if (((grp_array_copy3_fu_384_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        y_0_i_reg_288 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        add_ln85_reg_593 <= add_ln85_fu_496_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln85_fu_490_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state13))) begin
        i_reg_618 <= i_fu_558_p2;
        select_ln90_1_reg_598 <= select_ln90_1_fu_522_p3;
        zext_ln90_1_reg_603[15 : 0] <= zext_ln90_1_fu_552_p1[15 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        k_reg_585 <= k_fu_484_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        tmp_i6_reg_633 <= grp_fu_393_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        x_2_load_reg_623 <= x_2_q0;
        x_old_load_reg_628 <= x_old_q0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        Img_address0 = grp_array_copy3_fu_384_data_out_address0;
    end else if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state4))) begin
        Img_address0 = grp_array_copy3_fu_384_data_in_address0;
    end else begin
        Img_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        Img_ce0 = grp_array_copy3_fu_384_data_out_ce0;
    end else if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state4))) begin
        Img_ce0 = grp_array_copy3_fu_384_data_in_ce0;
    end else begin
        Img_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        Img_we0 = grp_array_copy3_fu_384_data_out_we0;
    end else begin
        Img_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((grp_array_copy3_fu_384_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state21)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((grp_array_copy3_fu_384_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state21))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state8))) begin
        grp_array_copy3_fu_384_data_in_q0 = x_2_q0;
    end else if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state4))) begin
        grp_array_copy3_fu_384_data_in_q0 = Img_q0;
    end else begin
        grp_array_copy3_fu_384_data_in_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        x_2_address0 = zext_ln90_1_fu_552_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        x_2_address0 = grp_array_copy3_fu_384_data_out_address0;
    end else if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state8))) begin
        x_2_address0 = grp_array_copy3_fu_384_data_in_address0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        x_2_address0 = grp_ProxGS4_fu_373_x_io_address0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        x_2_address0 = grp_my_filter_v12_fu_354_f_n_address0;
    end else begin
        x_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        x_2_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        x_2_ce0 = grp_array_copy3_fu_384_data_out_ce0;
    end else if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state8))) begin
        x_2_ce0 = grp_array_copy3_fu_384_data_in_ce0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        x_2_ce0 = grp_ProxGS4_fu_373_x_io_ce0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        x_2_ce0 = grp_my_filter_v12_fu_354_f_n_ce0;
    end else begin
        x_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        x_2_d0 = grp_array_copy3_fu_384_data_out_d0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        x_2_d0 = grp_ProxGS4_fu_373_x_io_d0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        x_2_d0 = grp_my_filter_v12_fu_354_f_n_d0;
    end else begin
        x_2_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        x_2_we0 = grp_array_copy3_fu_384_data_out_we0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        x_2_we0 = grp_ProxGS4_fu_373_x_io_we0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        x_2_we0 = grp_my_filter_v12_fu_354_f_n_we0;
    end else begin
        x_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        x_bar_address0 = zext_ln90_1_reg_603;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        x_bar_address0 = grp_array_copy3_fu_384_data_out_address0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        x_bar_address0 = grp_my_filter_v12_fu_354_f_address0;
    end else begin
        x_bar_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        x_bar_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        x_bar_ce0 = grp_array_copy3_fu_384_data_out_ce0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        x_bar_ce0 = grp_my_filter_v12_fu_354_f_ce0;
    end else begin
        x_bar_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        x_bar_ce1 = grp_my_filter_v12_fu_354_f_ce1;
    end else begin
        x_bar_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        x_bar_d0 = tmp_i6_reg_633;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        x_bar_d0 = grp_array_copy3_fu_384_data_out_d0;
    end else begin
        x_bar_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        x_bar_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        x_bar_we0 = grp_array_copy3_fu_384_data_out_we0;
    end else begin
        x_bar_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        x_old_address0 = zext_ln90_1_fu_552_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        x_old_address0 = grp_array_copy3_fu_384_data_out_address0;
    end else begin
        x_old_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        x_old_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        x_old_ce0 = grp_array_copy3_fu_384_data_out_ce0;
    end else begin
        x_old_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        x_old_we0 = grp_array_copy3_fu_384_data_out_we0;
    end else begin
        x_old_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        y_1_address0 = zext_ln68_1_fu_459_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        y_1_address0 = grp_my_filter_v12_fu_354_g1_address0;
    end else begin
        y_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        y_1_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        y_1_ce0 = grp_my_filter_v12_fu_354_g1_ce0;
    end else begin
        y_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        y_1_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        y_1_d0 = grp_my_filter_v12_fu_354_g1_d0;
    end else begin
        y_1_d0 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln63_fu_397_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        y_1_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        y_1_we0 = grp_my_filter_v12_fu_354_g1_we0;
    end else begin
        y_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        y_2_address0 = zext_ln68_1_fu_459_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        y_2_address0 = grp_my_filter_v12_fu_354_g2_address0;
    end else begin
        y_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        y_2_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        y_2_ce0 = grp_my_filter_v12_fu_354_g2_ce0;
    end else begin
        y_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        y_2_ce1 = grp_my_filter_v12_fu_354_g2_ce1;
    end else begin
        y_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        y_2_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        y_2_d0 = grp_my_filter_v12_fu_354_g2_d0;
    end else begin
        y_2_d0 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln63_fu_397_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        y_2_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        y_2_we0 = grp_my_filter_v12_fu_354_g2_we0;
    end else begin
        y_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        y_3_address0 = zext_ln68_1_fu_459_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        y_3_address0 = grp_my_filter_v12_fu_354_g3_address0;
    end else begin
        y_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        y_3_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        y_3_ce0 = grp_my_filter_v12_fu_354_g3_ce0;
    end else begin
        y_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        y_3_ce1 = grp_my_filter_v12_fu_354_g3_ce1;
    end else begin
        y_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        y_3_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        y_3_d0 = grp_my_filter_v12_fu_354_g3_d0;
    end else begin
        y_3_d0 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln63_fu_397_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        y_3_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        y_3_we0 = grp_my_filter_v12_fu_354_g3_we0;
    end else begin
        y_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        y_4_address0 = zext_ln68_1_fu_459_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        y_4_address0 = grp_my_filter_v12_fu_354_g4_address0;
    end else begin
        y_4_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        y_4_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        y_4_ce0 = grp_my_filter_v12_fu_354_g4_ce0;
    end else begin
        y_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        y_4_ce1 = grp_my_filter_v12_fu_354_g4_ce1;
    end else begin
        y_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        y_4_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        y_4_d0 = grp_my_filter_v12_fu_354_g4_d0;
    end else begin
        y_4_d0 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln63_fu_397_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        y_4_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        y_4_we0 = grp_my_filter_v12_fu_354_g4_we0;
    end else begin
        y_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        y_5_address0 = zext_ln68_1_fu_459_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        y_5_address0 = grp_my_filter_v12_fu_354_g5_address0;
    end else begin
        y_5_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        y_5_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        y_5_ce0 = grp_my_filter_v12_fu_354_g5_ce0;
    end else begin
        y_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        y_5_ce1 = grp_my_filter_v12_fu_354_g5_ce1;
    end else begin
        y_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        y_5_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        y_5_d0 = grp_my_filter_v12_fu_354_g5_d0;
    end else begin
        y_5_d0 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln63_fu_397_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        y_5_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        y_5_we0 = grp_my_filter_v12_fu_354_g5_we0;
    end else begin
        y_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        y_6_address0 = zext_ln68_1_fu_459_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        y_6_address0 = grp_my_filter_v12_fu_354_g6_address0;
    end else begin
        y_6_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        y_6_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        y_6_ce0 = grp_my_filter_v12_fu_354_g6_ce0;
    end else begin
        y_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        y_6_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        y_6_d0 = grp_my_filter_v12_fu_354_g6_d0;
    end else begin
        y_6_d0 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln63_fu_397_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        y_6_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        y_6_we0 = grp_my_filter_v12_fu_354_g6_we0;
    end else begin
        y_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        y_7_address0 = zext_ln68_1_fu_459_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        y_7_address0 = grp_my_filter_v12_fu_354_g7_address0;
    end else begin
        y_7_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        y_7_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        y_7_ce0 = grp_my_filter_v12_fu_354_g7_ce0;
    end else begin
        y_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        y_7_ce1 = grp_my_filter_v12_fu_354_g7_ce1;
    end else begin
        y_7_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        y_7_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        y_7_d0 = grp_my_filter_v12_fu_354_g7_d0;
    end else begin
        y_7_d0 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln63_fu_397_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        y_7_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        y_7_we0 = grp_my_filter_v12_fu_354_g7_we0;
    end else begin
        y_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        y_8_address0 = zext_ln68_1_fu_459_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        y_8_address0 = grp_my_filter_v12_fu_354_g8_address0;
    end else begin
        y_8_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        y_8_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        y_8_ce0 = grp_my_filter_v12_fu_354_g8_ce0;
    end else begin
        y_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        y_8_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        y_8_d0 = grp_my_filter_v12_fu_354_g8_d0;
    end else begin
        y_8_d0 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln63_fu_397_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        y_8_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        y_8_we0 = grp_my_filter_v12_fu_354_g8_we0;
    end else begin
        y_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        y_9_address0 = zext_ln68_1_fu_459_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        y_9_address0 = grp_my_filter_v12_fu_354_g9_address0;
    end else begin
        y_9_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        y_9_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        y_9_ce0 = grp_my_filter_v12_fu_354_g9_ce0;
    end else begin
        y_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        y_9_ce1 = grp_my_filter_v12_fu_354_g9_ce1;
    end else begin
        y_9_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        y_9_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        y_9_d0 = grp_my_filter_v12_fu_354_g9_d0;
    end else begin
        y_9_d0 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln63_fu_397_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        y_9_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        y_9_we0 = grp_my_filter_v12_fu_354_g9_we0;
    end else begin
        y_9_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((grp_array_copy3_fu_384_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((grp_array_copy3_fu_384_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((icmp_ln63_fu_397_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            if (((icmp_ln105_fu_478_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((grp_array_copy3_fu_384_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            if (((grp_my_filter_v12_fu_354_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            if (((grp_ProxGS4_fu_373_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state13 : begin
            if (((1'b1 == ap_CS_fsm_state13) & (icmp_ln85_fu_490_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state21 : begin
            if (((grp_array_copy3_fu_384_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state21))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Img_d0 = grp_array_copy3_fu_384_data_out_d0;

assign add_ln63_fu_403_p2 = (indvar_flatten_reg_277 + 15'd1);

assign add_ln68_fu_453_p2 = (zext_ln68_fu_449_p1 + zext_ln66_fu_445_p1);

assign add_ln85_fu_496_p2 = (indvar_flatten11_reg_321 + 15'd1);

assign add_ln90_fu_546_p2 = (zext_ln90_fu_542_p1 + zext_ln88_fu_538_p1);

assign adjChImg2_address0 = grp_my_filter_v12_fu_354_adjChImg2_address0;

assign adjChImg2_address1 = grp_my_filter_v12_fu_354_adjChImg2_address1;

assign adjChImg2_ce0 = grp_my_filter_v12_fu_354_adjChImg2_ce0;

assign adjChImg2_ce1 = grp_my_filter_v12_fu_354_adjChImg2_ce1;

assign adjChImg_address0 = grp_my_filter_v12_fu_354_adjChImg_address0;

assign adjChImg_address1 = grp_my_filter_v12_fu_354_adjChImg_address1;

assign adjChImg_ce0 = grp_my_filter_v12_fu_354_adjChImg_ce0;

assign adjChImg_ce1 = grp_my_filter_v12_fu_354_adjChImg_ce1;

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign coe_a_M_imag_address0 = grp_ProxGS4_fu_373_coe_a_M_imag_address0;

assign coe_a_M_imag_ce0 = grp_ProxGS4_fu_373_coe_a_M_imag_ce0;

assign coe_a_M_real_address0 = grp_ProxGS4_fu_373_coe_a_M_real_address0;

assign coe_a_M_real_ce0 = grp_ProxGS4_fu_373_coe_a_M_real_ce0;

assign coe_b_address0 = grp_ProxGS4_fu_373_coe_b_address0;

assign coe_b_ce0 = grp_ProxGS4_fu_373_coe_b_ce0;

assign grp_ProxGS4_fu_373_ap_start = grp_ProxGS4_fu_373_ap_start_reg;

assign grp_array_copy3_fu_384_ap_start = grp_array_copy3_fu_384_ap_start_reg;

assign grp_my_filter_v12_fu_354_ap_start = grp_my_filter_v12_fu_354_ap_start_reg;

assign i_fu_558_p2 = (select_ln90_fu_514_p3 + 8'd1);

assign icmp_ln105_fu_478_p2 = ((k_0_reg_310 == 4'd10) ? 1'b1 : 1'b0);

assign icmp_ln63_fu_397_p2 = ((indvar_flatten_reg_277 == 15'd16384) ? 1'b1 : 1'b0);

assign icmp_ln65_fu_415_p2 = ((x_0_i_reg_299 == 8'd128) ? 1'b1 : 1'b0);

assign icmp_ln85_fu_490_p2 = ((indvar_flatten11_reg_321 == 15'd16384) ? 1'b1 : 1'b0);

assign icmp_ln87_fu_508_p2 = ((i_0_i_reg_343 == 8'd128) ? 1'b1 : 1'b0);

assign j_fu_502_p2 = (j_0_i_reg_332 + 8'd1);

assign k_fu_484_p2 = (k_0_reg_310 + 4'd1);

assign select_ln68_1_fu_429_p3 = ((icmp_ln65_fu_415_p2[0:0] === 1'b1) ? y_fu_409_p2 : y_0_i_reg_288);

assign select_ln68_fu_421_p3 = ((icmp_ln65_fu_415_p2[0:0] === 1'b1) ? 8'd0 : x_0_i_reg_299);

assign select_ln90_1_fu_522_p3 = ((icmp_ln87_fu_508_p2[0:0] === 1'b1) ? j_fu_502_p2 : j_0_i_reg_332);

assign select_ln90_fu_514_p3 = ((icmp_ln87_fu_508_p2[0:0] === 1'b1) ? 8'd0 : i_0_i_reg_343);

assign tmp_fu_437_p3 = {{select_ln68_1_fu_429_p3}, {7'd0}};

assign tmp_s_fu_530_p3 = {{select_ln90_1_fu_522_p3}, {7'd0}};

assign x_fu_472_p2 = (select_ln68_fu_421_p3 + 8'd1);

assign y_fu_409_p2 = (y_0_i_reg_288 + 8'd1);

assign zext_ln66_fu_445_p1 = tmp_fu_437_p3;

assign zext_ln68_1_fu_459_p1 = add_ln68_fu_453_p2;

assign zext_ln68_fu_449_p1 = select_ln68_fu_421_p3;

assign zext_ln88_fu_538_p1 = tmp_s_fu_530_p3;

assign zext_ln90_1_fu_552_p1 = add_ln90_fu_546_p2;

assign zext_ln90_fu_542_p1 = select_ln90_fu_514_p3;

always @ (posedge ap_clk) begin
    zext_ln90_1_reg_603[63:16] <= 48'b000000000000000000000000000000000000000000000000;
end

endmodule //cross_channel_deblur
