// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module ProxGS4 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        x_io_address0,
        x_io_ce0,
        x_io_we0,
        x_io_d0,
        x_io_q0,
        coe_a_M_real_address0,
        coe_a_M_real_ce0,
        coe_a_M_real_q0,
        coe_a_M_imag_address0,
        coe_a_M_imag_ce0,
        coe_a_M_imag_q0,
        coe_b_address0,
        coe_b_ce0,
        coe_b_q0
);

parameter    ap_ST_fsm_state1 = 13'd1;
parameter    ap_ST_fsm_state2 = 13'd2;
parameter    ap_ST_fsm_state3 = 13'd4;
parameter    ap_ST_fsm_state4 = 13'd8;
parameter    ap_ST_fsm_state5 = 13'd16;
parameter    ap_ST_fsm_pp0_stage0 = 13'd32;
parameter    ap_ST_fsm_state8 = 13'd64;
parameter    ap_ST_fsm_state9 = 13'd128;
parameter    ap_ST_fsm_pp1_stage0 = 13'd256;
parameter    ap_ST_fsm_state36 = 13'd512;
parameter    ap_ST_fsm_state37 = 13'd1024;
parameter    ap_ST_fsm_pp2_stage0 = 13'd2048;
parameter    ap_ST_fsm_state45 = 13'd4096;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [13:0] x_io_address0;
output   x_io_ce0;
output   x_io_we0;
output  [31:0] x_io_d0;
input  [31:0] x_io_q0;
output  [13:0] coe_a_M_real_address0;
output   coe_a_M_real_ce0;
input  [31:0] coe_a_M_real_q0;
output  [13:0] coe_a_M_imag_address0;
output   coe_a_M_imag_ce0;
input  [31:0] coe_a_M_imag_q0;
output  [13:0] coe_b_address0;
output   coe_b_ce0;
input  [31:0] coe_b_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[13:0] x_io_address0;
reg x_io_ce0;
reg x_io_we0;
reg coe_a_M_real_ce0;
reg coe_a_M_imag_ce0;
reg coe_b_ce0;

(* fsm_encoding = "none" *) reg   [12:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [14:0] indvar_flatten_reg_296;
reg   [7:0] y_0_i_reg_307;
reg   [7:0] x_0_i_reg_318;
reg   [14:0] indvar_flatten11_reg_329;
reg   [7:0] y_0_reg_340;
reg   [7:0] x_0_reg_351;
reg   [14:0] indvar_flatten23_reg_386;
reg   [7:0] y_0_i9_reg_397;
reg   [7:0] x_0_i10_reg_408;
wire   [6:0] add_ln14_fu_457_p2;
reg   [6:0] add_ln14_reg_798;
wire    ap_CS_fsm_state2;
wire   [6:0] add_ln14_1_fu_463_p2;
wire    ap_CS_fsm_state3;
wire   [6:0] add_ln14_2_fu_495_p2;
reg   [6:0] add_ln14_2_reg_814;
wire    ap_CS_fsm_state4;
wire   [6:0] add_ln14_3_fu_501_p2;
wire    ap_CS_fsm_state5;
wire   [0:0] icmp_ln14_2_fu_521_p2;
wire   [0:0] icmp_ln14_3_fu_527_p2;
wire   [0:0] icmp_ln56_fu_533_p2;
reg   [0:0] icmp_ln56_reg_832;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state6_pp0_stage0_iter0;
wire    ap_block_state7_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [14:0] add_ln56_fu_539_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [7:0] select_ln61_1_fu_565_p3;
reg   [7:0] select_ln61_1_reg_841;
wire   [63:0] zext_ln61_1_fu_595_p1;
reg   [63:0] zext_ln61_1_reg_846;
wire   [7:0] x_3_fu_601_p2;
wire   [0:0] icmp_ln27_fu_607_p2;
reg   [0:0] icmp_ln27_reg_861;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state10_pp1_stage0_iter0;
wire    ap_block_state11_pp1_stage0_iter1;
wire    ap_block_state12_pp1_stage0_iter2;
wire    ap_block_state13_pp1_stage0_iter3;
wire    ap_block_state14_pp1_stage0_iter4;
wire    ap_block_state15_pp1_stage0_iter5;
wire    ap_block_state16_pp1_stage0_iter6;
wire    ap_block_state17_pp1_stage0_iter7;
wire    ap_block_state18_pp1_stage0_iter8;
wire    ap_block_state19_pp1_stage0_iter9;
wire    ap_block_state20_pp1_stage0_iter10;
wire    ap_block_state21_pp1_stage0_iter11;
wire    ap_block_state22_pp1_stage0_iter12;
wire    ap_block_state23_pp1_stage0_iter13;
wire    ap_block_state24_pp1_stage0_iter14;
wire    ap_block_state25_pp1_stage0_iter15;
wire    ap_block_state26_pp1_stage0_iter16;
wire    ap_block_state27_pp1_stage0_iter17;
wire    ap_block_state28_pp1_stage0_iter18;
wire    ap_block_state29_pp1_stage0_iter19;
wire    ap_block_state30_pp1_stage0_iter20;
wire    ap_block_state31_pp1_stage0_iter21;
wire    ap_block_state32_pp1_stage0_iter22;
wire    ap_block_state33_pp1_stage0_iter23;
wire    ap_block_state34_pp1_stage0_iter24;
wire    ap_block_state35_pp1_stage0_iter25;
wire    ap_block_pp1_stage0_11001;
reg   [0:0] icmp_ln27_reg_861_pp1_iter1_reg;
reg   [0:0] icmp_ln27_reg_861_pp1_iter2_reg;
reg   [0:0] icmp_ln27_reg_861_pp1_iter3_reg;
reg   [0:0] icmp_ln27_reg_861_pp1_iter4_reg;
reg   [0:0] icmp_ln27_reg_861_pp1_iter5_reg;
reg   [0:0] icmp_ln27_reg_861_pp1_iter6_reg;
reg   [0:0] icmp_ln27_reg_861_pp1_iter7_reg;
reg   [0:0] icmp_ln27_reg_861_pp1_iter8_reg;
reg   [0:0] icmp_ln27_reg_861_pp1_iter9_reg;
reg   [0:0] icmp_ln27_reg_861_pp1_iter10_reg;
reg   [0:0] icmp_ln27_reg_861_pp1_iter11_reg;
reg   [0:0] icmp_ln27_reg_861_pp1_iter12_reg;
reg   [0:0] icmp_ln27_reg_861_pp1_iter13_reg;
reg   [0:0] icmp_ln27_reg_861_pp1_iter14_reg;
reg   [0:0] icmp_ln27_reg_861_pp1_iter15_reg;
reg   [0:0] icmp_ln27_reg_861_pp1_iter16_reg;
reg   [0:0] icmp_ln27_reg_861_pp1_iter17_reg;
reg   [0:0] icmp_ln27_reg_861_pp1_iter18_reg;
reg   [0:0] icmp_ln27_reg_861_pp1_iter19_reg;
reg   [0:0] icmp_ln27_reg_861_pp1_iter20_reg;
reg   [0:0] icmp_ln27_reg_861_pp1_iter21_reg;
reg   [0:0] icmp_ln27_reg_861_pp1_iter22_reg;
reg   [0:0] icmp_ln27_reg_861_pp1_iter23_reg;
reg   [0:0] icmp_ln27_reg_861_pp1_iter24_reg;
wire   [14:0] add_ln27_fu_613_p2;
reg    ap_enable_reg_pp1_iter0;
wire   [7:0] select_ln33_1_fu_639_p3;
reg   [7:0] select_ln33_1_reg_870;
reg   [13:0] coe_a_M_real_addr_reg_875;
reg   [13:0] coe_a_M_real_addr_reg_875_pp1_iter1_reg;
reg   [13:0] coe_a_M_imag_addr_reg_880;
reg   [13:0] coe_a_M_imag_addr_reg_880_pp1_iter1_reg;
reg   [13:0] fft_result_M_real_a_1_reg_890;
reg   [13:0] fft_result_M_real_a_1_reg_890_pp1_iter1_reg;
reg   [13:0] fft_result_M_real_a_1_reg_890_pp1_iter2_reg;
reg   [13:0] fft_result_M_real_a_1_reg_890_pp1_iter3_reg;
reg   [13:0] fft_result_M_real_a_1_reg_890_pp1_iter4_reg;
reg   [13:0] fft_result_M_real_a_1_reg_890_pp1_iter5_reg;
reg   [13:0] fft_result_M_real_a_1_reg_890_pp1_iter6_reg;
reg   [13:0] fft_result_M_real_a_1_reg_890_pp1_iter7_reg;
reg   [13:0] fft_result_M_real_a_1_reg_890_pp1_iter8_reg;
reg   [13:0] fft_result_M_real_a_1_reg_890_pp1_iter9_reg;
reg   [13:0] fft_result_M_real_a_1_reg_890_pp1_iter10_reg;
reg   [13:0] fft_result_M_real_a_1_reg_890_pp1_iter11_reg;
reg   [13:0] fft_result_M_real_a_1_reg_890_pp1_iter12_reg;
reg   [13:0] fft_result_M_real_a_1_reg_890_pp1_iter13_reg;
reg   [13:0] fft_result_M_real_a_1_reg_890_pp1_iter14_reg;
reg   [13:0] fft_result_M_real_a_1_reg_890_pp1_iter15_reg;
reg   [13:0] fft_result_M_real_a_1_reg_890_pp1_iter16_reg;
reg   [13:0] fft_result_M_real_a_1_reg_890_pp1_iter17_reg;
reg   [13:0] fft_result_M_real_a_1_reg_890_pp1_iter18_reg;
reg   [13:0] fft_result_M_real_a_1_reg_890_pp1_iter19_reg;
reg   [13:0] fft_result_M_real_a_1_reg_890_pp1_iter20_reg;
reg   [13:0] fft_result_M_real_a_1_reg_890_pp1_iter21_reg;
reg   [13:0] fft_result_M_real_a_1_reg_890_pp1_iter22_reg;
reg   [13:0] fft_result_M_real_a_1_reg_890_pp1_iter23_reg;
reg   [13:0] fft_result_M_real_a_1_reg_890_pp1_iter24_reg;
reg   [13:0] fft_result_M_imag_a_1_reg_896;
reg   [13:0] fft_result_M_imag_a_1_reg_896_pp1_iter1_reg;
reg   [13:0] fft_result_M_imag_a_1_reg_896_pp1_iter2_reg;
reg   [13:0] fft_result_M_imag_a_1_reg_896_pp1_iter3_reg;
reg   [13:0] fft_result_M_imag_a_1_reg_896_pp1_iter4_reg;
reg   [13:0] fft_result_M_imag_a_1_reg_896_pp1_iter5_reg;
reg   [13:0] fft_result_M_imag_a_1_reg_896_pp1_iter6_reg;
reg   [13:0] fft_result_M_imag_a_1_reg_896_pp1_iter7_reg;
reg   [13:0] fft_result_M_imag_a_1_reg_896_pp1_iter8_reg;
reg   [13:0] fft_result_M_imag_a_1_reg_896_pp1_iter9_reg;
reg   [13:0] fft_result_M_imag_a_1_reg_896_pp1_iter10_reg;
reg   [13:0] fft_result_M_imag_a_1_reg_896_pp1_iter11_reg;
reg   [13:0] fft_result_M_imag_a_1_reg_896_pp1_iter12_reg;
reg   [13:0] fft_result_M_imag_a_1_reg_896_pp1_iter13_reg;
reg   [13:0] fft_result_M_imag_a_1_reg_896_pp1_iter14_reg;
reg   [13:0] fft_result_M_imag_a_1_reg_896_pp1_iter15_reg;
reg   [13:0] fft_result_M_imag_a_1_reg_896_pp1_iter16_reg;
reg   [13:0] fft_result_M_imag_a_1_reg_896_pp1_iter17_reg;
reg   [13:0] fft_result_M_imag_a_1_reg_896_pp1_iter18_reg;
reg   [13:0] fft_result_M_imag_a_1_reg_896_pp1_iter19_reg;
reg   [13:0] fft_result_M_imag_a_1_reg_896_pp1_iter20_reg;
reg   [13:0] fft_result_M_imag_a_1_reg_896_pp1_iter21_reg;
reg   [13:0] fft_result_M_imag_a_1_reg_896_pp1_iter22_reg;
reg   [13:0] fft_result_M_imag_a_1_reg_896_pp1_iter23_reg;
reg   [13:0] fft_result_M_imag_a_1_reg_896_pp1_iter24_reg;
wire   [7:0] x_fu_678_p2;
reg   [31:0] coe_b_load_reg_907;
reg   [31:0] coe_b_load_reg_907_pp1_iter2_reg;
reg   [31:0] coe_b_load_reg_907_pp1_iter3_reg;
reg   [31:0] coe_b_load_reg_907_pp1_iter4_reg;
reg   [31:0] coe_b_load_reg_907_pp1_iter5_reg;
reg   [31:0] coe_b_load_reg_907_pp1_iter6_reg;
reg   [31:0] coe_b_load_reg_907_pp1_iter7_reg;
reg   [31:0] coe_b_load_reg_907_pp1_iter8_reg;
wire   [0:0] and_ln33_fu_719_p2;
reg   [0:0] and_ln33_reg_915;
reg   [0:0] and_ln33_reg_915_pp1_iter3_reg;
reg   [0:0] and_ln33_reg_915_pp1_iter4_reg;
reg   [0:0] and_ln33_reg_915_pp1_iter5_reg;
reg   [0:0] and_ln33_reg_915_pp1_iter6_reg;
reg   [0:0] and_ln33_reg_915_pp1_iter7_reg;
reg   [0:0] and_ln33_reg_915_pp1_iter8_reg;
reg   [0:0] and_ln33_reg_915_pp1_iter9_reg;
reg   [0:0] and_ln33_reg_915_pp1_iter10_reg;
reg   [0:0] and_ln33_reg_915_pp1_iter11_reg;
reg   [0:0] and_ln33_reg_915_pp1_iter12_reg;
reg   [0:0] and_ln33_reg_915_pp1_iter13_reg;
reg   [0:0] and_ln33_reg_915_pp1_iter14_reg;
reg   [0:0] and_ln33_reg_915_pp1_iter15_reg;
reg   [0:0] and_ln33_reg_915_pp1_iter16_reg;
reg   [0:0] and_ln33_reg_915_pp1_iter17_reg;
reg   [0:0] and_ln33_reg_915_pp1_iter18_reg;
reg   [0:0] and_ln33_reg_915_pp1_iter19_reg;
reg   [0:0] and_ln33_reg_915_pp1_iter20_reg;
reg   [0:0] and_ln33_reg_915_pp1_iter21_reg;
reg   [0:0] and_ln33_reg_915_pp1_iter22_reg;
reg   [0:0] and_ln33_reg_915_pp1_iter23_reg;
wire   [31:0] fft_result_M_real_q0;
reg   [31:0] fft_result_M_real_l_reg_919;
reg    ap_enable_reg_pp1_iter3;
reg   [31:0] coe_a_M_real_load_reg_924;
wire   [31:0] fft_result_M_imag_q0;
reg   [31:0] fft_result_M_imag_l_reg_929;
reg   [31:0] coe_a_M_imag_load_reg_934;
wire   [31:0] grp_fu_430_p2;
reg   [31:0] tmp_s_reg_939;
wire   [31:0] grp_fu_434_p2;
reg   [31:0] tmp_136_reg_944;
wire   [31:0] grp_fu_443_p2;
wire   [31:0] grp_fu_447_p2;
wire   [0:0] icmp_ln70_fu_725_p2;
reg   [0:0] icmp_ln70_reg_959;
wire    ap_CS_fsm_pp2_stage0;
wire    ap_block_state38_pp2_stage0_iter0;
wire    ap_block_state39_pp2_stage0_iter1;
wire    ap_block_state40_pp2_stage0_iter2;
wire    ap_block_state41_pp2_stage0_iter3;
wire    ap_block_state42_pp2_stage0_iter4;
wire    ap_block_state43_pp2_stage0_iter5;
wire    ap_block_state44_pp2_stage0_iter6;
wire    ap_block_pp2_stage0_11001;
reg   [0:0] icmp_ln70_reg_959_pp2_iter1_reg;
reg   [0:0] icmp_ln70_reg_959_pp2_iter2_reg;
reg   [0:0] icmp_ln70_reg_959_pp2_iter3_reg;
reg   [0:0] icmp_ln70_reg_959_pp2_iter4_reg;
reg   [0:0] icmp_ln70_reg_959_pp2_iter5_reg;
wire   [14:0] add_ln70_fu_731_p2;
reg    ap_enable_reg_pp2_iter0;
wire   [7:0] select_ln77_1_fu_757_p3;
reg   [7:0] select_ln77_1_reg_968;
wire   [63:0] zext_ln77_1_fu_787_p1;
reg   [63:0] zext_ln77_1_reg_973;
reg   [63:0] zext_ln77_1_reg_973_pp2_iter1_reg;
reg   [63:0] zext_ln77_1_reg_973_pp2_iter2_reg;
reg   [63:0] zext_ln77_1_reg_973_pp2_iter3_reg;
reg   [63:0] zext_ln77_1_reg_973_pp2_iter4_reg;
reg   [63:0] zext_ln77_1_reg_973_pp2_iter5_reg;
wire   [7:0] x_4_fu_792_p2;
wire   [31:0] tmp_M_real_q0;
reg   [31:0] tmp_M_real_load_reg_988;
reg    ap_enable_reg_pp2_iter1;
wire   [31:0] grp_fu_438_p2;
reg   [31:0] tmp_i1_reg_993;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state6;
reg    ap_enable_reg_pp0_iter1;
wire    ap_CS_fsm_state9;
wire    grp_fft_top_2D_fu_419_ap_ready;
wire    grp_fft_top_2D_fu_419_ap_done;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state10;
reg    ap_enable_reg_pp1_iter1;
reg    ap_enable_reg_pp1_iter2;
reg    ap_enable_reg_pp1_iter4;
reg    ap_enable_reg_pp1_iter5;
reg    ap_enable_reg_pp1_iter6;
reg    ap_enable_reg_pp1_iter7;
reg    ap_enable_reg_pp1_iter8;
reg    ap_enable_reg_pp1_iter9;
reg    ap_enable_reg_pp1_iter10;
reg    ap_enable_reg_pp1_iter11;
reg    ap_enable_reg_pp1_iter12;
reg    ap_enable_reg_pp1_iter13;
reg    ap_enable_reg_pp1_iter14;
reg    ap_enable_reg_pp1_iter15;
reg    ap_enable_reg_pp1_iter16;
reg    ap_enable_reg_pp1_iter17;
reg    ap_enable_reg_pp1_iter18;
reg    ap_enable_reg_pp1_iter19;
reg    ap_enable_reg_pp1_iter20;
reg    ap_enable_reg_pp1_iter21;
reg    ap_enable_reg_pp1_iter22;
reg    ap_enable_reg_pp1_iter23;
reg    ap_enable_reg_pp1_iter24;
reg    ap_enable_reg_pp1_iter25;
wire    ap_CS_fsm_state37;
wire    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state38;
reg    ap_enable_reg_pp2_iter2;
reg    ap_enable_reg_pp2_iter3;
reg    ap_enable_reg_pp2_iter4;
reg    ap_enable_reg_pp2_iter5;
reg    ap_enable_reg_pp2_iter6;
reg   [13:0] tmp_M_real_address0;
reg    tmp_M_real_ce0;
reg    tmp_M_real_we0;
reg   [31:0] tmp_M_real_d0;
reg   [13:0] tmp_M_imag_address0;
reg    tmp_M_imag_ce0;
reg    tmp_M_imag_we0;
reg   [31:0] tmp_M_imag_d0;
wire   [31:0] tmp_M_imag_q0;
reg   [13:0] fft_result_M_real_address0;
reg    fft_result_M_real_ce0;
reg    fft_result_M_real_we0;
reg   [31:0] fft_result_M_real_d0;
reg    fft_result_M_real_ce1;
reg    fft_result_M_real_we1;
reg   [13:0] fft_result_M_imag_address0;
reg    fft_result_M_imag_ce0;
reg    fft_result_M_imag_we0;
reg   [31:0] fft_result_M_imag_d0;
reg    fft_result_M_imag_ce1;
reg    fft_result_M_imag_we1;
wire    grp_fft_top_2D_fu_419_ap_start;
wire    grp_fft_top_2D_fu_419_ap_idle;
reg    grp_fft_top_2D_fu_419_direction;
wire   [13:0] grp_fft_top_2D_fu_419_in_M_real_address0;
wire    grp_fft_top_2D_fu_419_in_M_real_ce0;
reg   [31:0] grp_fft_top_2D_fu_419_in_M_real_q0;
wire   [13:0] grp_fft_top_2D_fu_419_in_M_imag_address0;
wire    grp_fft_top_2D_fu_419_in_M_imag_ce0;
reg   [31:0] grp_fft_top_2D_fu_419_in_M_imag_q0;
wire   [13:0] grp_fft_top_2D_fu_419_out_M_real_address0;
wire    grp_fft_top_2D_fu_419_out_M_real_ce0;
wire    grp_fft_top_2D_fu_419_out_M_real_we0;
wire   [31:0] grp_fft_top_2D_fu_419_out_M_real_d0;
wire   [13:0] grp_fft_top_2D_fu_419_out_M_imag_address0;
wire    grp_fft_top_2D_fu_419_out_M_imag_ce0;
wire    grp_fft_top_2D_fu_419_out_M_imag_we0;
wire   [31:0] grp_fft_top_2D_fu_419_out_M_imag_d0;
reg   [6:0] phi_ln14_reg_250;
wire   [0:0] icmp_ln14_fu_483_p2;
wire   [0:0] icmp_ln14_1_fu_489_p2;
reg   [6:0] phi_ln14_1_reg_262;
reg   [6:0] phi_ln14_2_reg_273;
reg   [6:0] phi_ln14_3_reg_285;
reg   [7:0] ap_phi_mux_y_0_i_phi_fu_311_p4;
wire    ap_block_pp0_stage0;
reg   [7:0] ap_phi_mux_y_0_phi_fu_344_p4;
wire    ap_block_pp1_stage0;
wire   [31:0] ap_phi_reg_pp1_iter0_p_r_assign_reg_362;
reg   [31:0] ap_phi_reg_pp1_iter1_p_r_assign_reg_362;
reg   [31:0] ap_phi_reg_pp1_iter2_p_r_assign_reg_362;
reg   [31:0] ap_phi_reg_pp1_iter3_p_r_assign_reg_362;
reg   [31:0] ap_phi_reg_pp1_iter4_p_r_assign_reg_362;
reg   [31:0] ap_phi_reg_pp1_iter5_p_r_assign_reg_362;
reg   [31:0] ap_phi_reg_pp1_iter6_p_r_assign_reg_362;
reg   [31:0] ap_phi_reg_pp1_iter7_p_r_assign_reg_362;
reg   [31:0] ap_phi_reg_pp1_iter8_p_r_assign_reg_362;
reg   [31:0] ap_phi_reg_pp1_iter9_p_r_assign_reg_362;
reg   [31:0] ap_phi_reg_pp1_iter10_p_r_assign_reg_362;
reg   [31:0] ap_phi_reg_pp1_iter11_p_r_assign_reg_362;
reg   [31:0] ap_phi_reg_pp1_iter12_p_r_assign_reg_362;
reg   [31:0] ap_phi_reg_pp1_iter13_p_r_assign_reg_362;
reg   [31:0] ap_phi_reg_pp1_iter14_p_r_assign_reg_362;
reg   [31:0] ap_phi_reg_pp1_iter15_p_r_assign_reg_362;
reg   [31:0] ap_phi_reg_pp1_iter16_p_r_assign_reg_362;
reg   [31:0] ap_phi_reg_pp1_iter17_p_r_assign_reg_362;
reg   [31:0] ap_phi_reg_pp1_iter18_p_r_assign_reg_362;
reg   [31:0] ap_phi_reg_pp1_iter19_p_r_assign_reg_362;
reg   [31:0] ap_phi_reg_pp1_iter20_p_r_assign_reg_362;
reg   [31:0] ap_phi_reg_pp1_iter21_p_r_assign_reg_362;
reg   [31:0] ap_phi_reg_pp1_iter22_p_r_assign_reg_362;
reg   [31:0] ap_phi_reg_pp1_iter23_p_r_assign_reg_362;
reg   [31:0] ap_phi_reg_pp1_iter24_p_r_assign_reg_362;
reg   [31:0] ap_phi_reg_pp1_iter25_p_r_assign_reg_362;
wire   [31:0] ap_phi_reg_pp1_iter0_p_i_assign_reg_374;
reg   [31:0] ap_phi_reg_pp1_iter1_p_i_assign_reg_374;
reg   [31:0] ap_phi_reg_pp1_iter2_p_i_assign_reg_374;
reg   [31:0] ap_phi_reg_pp1_iter3_p_i_assign_reg_374;
reg   [31:0] ap_phi_reg_pp1_iter4_p_i_assign_reg_374;
reg   [31:0] ap_phi_reg_pp1_iter5_p_i_assign_reg_374;
reg   [31:0] ap_phi_reg_pp1_iter6_p_i_assign_reg_374;
reg   [31:0] ap_phi_reg_pp1_iter7_p_i_assign_reg_374;
reg   [31:0] ap_phi_reg_pp1_iter8_p_i_assign_reg_374;
reg   [31:0] ap_phi_reg_pp1_iter9_p_i_assign_reg_374;
reg   [31:0] ap_phi_reg_pp1_iter10_p_i_assign_reg_374;
reg   [31:0] ap_phi_reg_pp1_iter11_p_i_assign_reg_374;
reg   [31:0] ap_phi_reg_pp1_iter12_p_i_assign_reg_374;
reg   [31:0] ap_phi_reg_pp1_iter13_p_i_assign_reg_374;
reg   [31:0] ap_phi_reg_pp1_iter14_p_i_assign_reg_374;
reg   [31:0] ap_phi_reg_pp1_iter15_p_i_assign_reg_374;
reg   [31:0] ap_phi_reg_pp1_iter16_p_i_assign_reg_374;
reg   [31:0] ap_phi_reg_pp1_iter17_p_i_assign_reg_374;
reg   [31:0] ap_phi_reg_pp1_iter18_p_i_assign_reg_374;
reg   [31:0] ap_phi_reg_pp1_iter19_p_i_assign_reg_374;
reg   [31:0] ap_phi_reg_pp1_iter20_p_i_assign_reg_374;
reg   [31:0] ap_phi_reg_pp1_iter21_p_i_assign_reg_374;
reg   [31:0] ap_phi_reg_pp1_iter22_p_i_assign_reg_374;
reg   [31:0] ap_phi_reg_pp1_iter23_p_i_assign_reg_374;
reg   [31:0] ap_phi_reg_pp1_iter24_p_i_assign_reg_374;
reg   [31:0] ap_phi_reg_pp1_iter25_p_i_assign_reg_374;
reg   [7:0] ap_phi_mux_y_0_i9_phi_fu_401_p4;
wire    ap_block_pp2_stage0;
reg    grp_fft_top_2D_fu_419_ap_start_reg;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state36;
wire   [63:0] zext_ln1027_fu_477_p1;
wire   [63:0] zext_ln1027_1_fu_515_p1;
wire   [63:0] zext_ln1044_1_fu_669_p1;
wire   [13:0] tmp_fu_469_p3;
wire   [13:0] tmp_141_fu_507_p3;
wire   [0:0] icmp_ln58_fu_551_p2;
wire   [7:0] y_1_fu_545_p2;
wire   [14:0] tmp_144_fu_573_p3;
wire   [7:0] select_ln61_fu_557_p3;
wire   [15:0] zext_ln61_fu_585_p1;
wire   [15:0] zext_ln59_fu_581_p1;
wire   [15:0] add_ln61_fu_589_p2;
wire   [0:0] icmp_ln29_fu_625_p2;
wire   [7:0] y_fu_619_p2;
wire   [14:0] tmp_145_fu_647_p3;
wire   [7:0] select_ln33_fu_631_p3;
wire   [15:0] zext_ln30_fu_655_p1;
wire   [15:0] zext_ln1044_fu_659_p1;
wire   [15:0] add_ln1044_fu_663_p2;
wire   [31:0] bitcast_ln33_fu_684_p1;
wire   [7:0] tmp_137_fu_687_p4;
wire   [22:0] trunc_ln33_fu_697_p1;
wire   [0:0] icmp_ln33_1_fu_707_p2;
wire   [0:0] icmp_ln33_fu_701_p2;
wire   [0:0] or_ln33_fu_713_p2;
wire   [0:0] grp_fu_451_p2;
wire   [0:0] icmp_ln72_fu_743_p2;
wire   [7:0] y_2_fu_737_p2;
wire   [14:0] tmp_146_fu_765_p3;
wire   [7:0] select_ln77_fu_749_p3;
wire   [15:0] zext_ln77_fu_777_p1;
wire   [15:0] zext_ln73_fu_773_p1;
wire   [15:0] add_ln77_fu_781_p2;
wire    ap_block_pp1_stage0_00001;
wire    ap_CS_fsm_state45;
reg   [12:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;

// power-on initialization
initial begin
#0 ap_CS_fsm = 13'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter4 = 1'b0;
#0 ap_enable_reg_pp1_iter5 = 1'b0;
#0 ap_enable_reg_pp1_iter6 = 1'b0;
#0 ap_enable_reg_pp1_iter7 = 1'b0;
#0 ap_enable_reg_pp1_iter8 = 1'b0;
#0 ap_enable_reg_pp1_iter9 = 1'b0;
#0 ap_enable_reg_pp1_iter10 = 1'b0;
#0 ap_enable_reg_pp1_iter11 = 1'b0;
#0 ap_enable_reg_pp1_iter12 = 1'b0;
#0 ap_enable_reg_pp1_iter13 = 1'b0;
#0 ap_enable_reg_pp1_iter14 = 1'b0;
#0 ap_enable_reg_pp1_iter15 = 1'b0;
#0 ap_enable_reg_pp1_iter16 = 1'b0;
#0 ap_enable_reg_pp1_iter17 = 1'b0;
#0 ap_enable_reg_pp1_iter18 = 1'b0;
#0 ap_enable_reg_pp1_iter19 = 1'b0;
#0 ap_enable_reg_pp1_iter20 = 1'b0;
#0 ap_enable_reg_pp1_iter21 = 1'b0;
#0 ap_enable_reg_pp1_iter22 = 1'b0;
#0 ap_enable_reg_pp1_iter23 = 1'b0;
#0 ap_enable_reg_pp1_iter24 = 1'b0;
#0 ap_enable_reg_pp1_iter25 = 1'b0;
#0 ap_enable_reg_pp2_iter2 = 1'b0;
#0 ap_enable_reg_pp2_iter3 = 1'b0;
#0 ap_enable_reg_pp2_iter4 = 1'b0;
#0 ap_enable_reg_pp2_iter5 = 1'b0;
#0 ap_enable_reg_pp2_iter6 = 1'b0;
#0 grp_fft_top_2D_fu_419_ap_start_reg = 1'b0;
end

ProxGS4_tmp_M_real #(
    .DataWidth( 32 ),
    .AddressRange( 16384 ),
    .AddressWidth( 14 ))
tmp_M_real_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(tmp_M_real_address0),
    .ce0(tmp_M_real_ce0),
    .we0(tmp_M_real_we0),
    .d0(tmp_M_real_d0),
    .q0(tmp_M_real_q0)
);

ProxGS4_tmp_M_real #(
    .DataWidth( 32 ),
    .AddressRange( 16384 ),
    .AddressWidth( 14 ))
tmp_M_imag_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(tmp_M_imag_address0),
    .ce0(tmp_M_imag_ce0),
    .we0(tmp_M_imag_we0),
    .d0(tmp_M_imag_d0),
    .q0(tmp_M_imag_q0)
);

ProxGS4_fft_resulqcK #(
    .DataWidth( 32 ),
    .AddressRange( 16384 ),
    .AddressWidth( 14 ))
fft_result_M_real_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fft_result_M_real_address0),
    .ce0(fft_result_M_real_ce0),
    .we0(fft_result_M_real_we0),
    .d0(fft_result_M_real_d0),
    .q0(fft_result_M_real_q0),
    .address1(fft_result_M_real_a_1_reg_890_pp1_iter24_reg),
    .ce1(fft_result_M_real_ce1),
    .we1(fft_result_M_real_we1),
    .d1(ap_phi_reg_pp1_iter25_p_r_assign_reg_362)
);

ProxGS4_fft_resulqcK #(
    .DataWidth( 32 ),
    .AddressRange( 16384 ),
    .AddressWidth( 14 ))
fft_result_M_imag_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fft_result_M_imag_address0),
    .ce0(fft_result_M_imag_ce0),
    .we0(fft_result_M_imag_we0),
    .d0(fft_result_M_imag_d0),
    .q0(fft_result_M_imag_q0),
    .address1(fft_result_M_imag_a_1_reg_896_pp1_iter24_reg),
    .ce1(fft_result_M_imag_ce1),
    .we1(fft_result_M_imag_we1),
    .d1(ap_phi_reg_pp1_iter25_p_i_assign_reg_374)
);

fft_top_2D grp_fft_top_2D_fu_419(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_fft_top_2D_fu_419_ap_start),
    .ap_done(grp_fft_top_2D_fu_419_ap_done),
    .ap_idle(grp_fft_top_2D_fu_419_ap_idle),
    .ap_ready(grp_fft_top_2D_fu_419_ap_ready),
    .direction(grp_fft_top_2D_fu_419_direction),
    .in_M_real_address0(grp_fft_top_2D_fu_419_in_M_real_address0),
    .in_M_real_ce0(grp_fft_top_2D_fu_419_in_M_real_ce0),
    .in_M_real_q0(grp_fft_top_2D_fu_419_in_M_real_q0),
    .in_M_imag_address0(grp_fft_top_2D_fu_419_in_M_imag_address0),
    .in_M_imag_ce0(grp_fft_top_2D_fu_419_in_M_imag_ce0),
    .in_M_imag_q0(grp_fft_top_2D_fu_419_in_M_imag_q0),
    .out_M_real_address0(grp_fft_top_2D_fu_419_out_M_real_address0),
    .out_M_real_ce0(grp_fft_top_2D_fu_419_out_M_real_ce0),
    .out_M_real_we0(grp_fft_top_2D_fu_419_out_M_real_we0),
    .out_M_real_d0(grp_fft_top_2D_fu_419_out_M_real_d0),
    .out_M_imag_address0(grp_fft_top_2D_fu_419_out_M_imag_address0),
    .out_M_imag_ce0(grp_fft_top_2D_fu_419_out_M_imag_ce0),
    .out_M_imag_we0(grp_fft_top_2D_fu_419_out_M_imag_we0),
    .out_M_imag_d0(grp_fft_top_2D_fu_419_out_M_imag_d0)
);

DEBLUR_fadd_32ns_dEe #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
DEBLUR_fadd_32ns_dEe_U93(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(fft_result_M_real_l_reg_919),
    .din1(coe_a_M_real_load_reg_924),
    .ce(1'b1),
    .dout(grp_fu_430_p2)
);

DEBLUR_fadd_32ns_dEe #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
DEBLUR_fadd_32ns_dEe_U94(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(fft_result_M_imag_l_reg_929),
    .din1(coe_a_M_imag_load_reg_934),
    .ce(1'b1),
    .dout(grp_fu_434_p2)
);

DEBLUR_fmul_32ns_eOg #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
DEBLUR_fmul_32ns_eOg_U95(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_M_real_load_reg_988),
    .din1(32'd1006632960),
    .ce(1'b1),
    .dout(grp_fu_438_p2)
);

DEBLUR_fdiv_32ns_fYi #(
    .ID( 1 ),
    .NUM_STAGE( 16 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
DEBLUR_fdiv_32ns_fYi_U96(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_s_reg_939),
    .din1(coe_b_load_reg_907_pp1_iter8_reg),
    .ce(1'b1),
    .dout(grp_fu_443_p2)
);

DEBLUR_fdiv_32ns_fYi #(
    .ID( 1 ),
    .NUM_STAGE( 16 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
DEBLUR_fdiv_32ns_fYi_U97(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_136_reg_944),
    .din1(coe_b_load_reg_907_pp1_iter8_reg),
    .ce(1'b1),
    .dout(grp_fu_447_p2)
);

DEBLUR_fcmp_32ns_ibs #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
DEBLUR_fcmp_32ns_ibs_U98(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(coe_b_q0),
    .din1(32'd0),
    .ce(1'b1),
    .opcode(5'd1),
    .dout(grp_fu_451_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state6) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln14_3_fu_527_p2 == 1'd1) & (icmp_ln14_2_fu_521_p2 == 1'd1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state6))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state6);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln14_3_fu_527_p2 == 1'd1) & (icmp_ln14_2_fu_521_p2 == 1'd1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state10) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((grp_fft_top_2D_fu_419_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state10)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state10);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter10 <= ap_enable_reg_pp1_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter11 <= ap_enable_reg_pp1_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter12 <= ap_enable_reg_pp1_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter13 <= ap_enable_reg_pp1_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter14 <= ap_enable_reg_pp1_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter15 <= ap_enable_reg_pp1_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter16 <= ap_enable_reg_pp1_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter17 <= ap_enable_reg_pp1_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter18 <= ap_enable_reg_pp1_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter19 <= ap_enable_reg_pp1_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter20 <= ap_enable_reg_pp1_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter21 <= ap_enable_reg_pp1_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter22 <= ap_enable_reg_pp1_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter23 <= ap_enable_reg_pp1_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter24 <= ap_enable_reg_pp1_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter25 <= ap_enable_reg_pp1_iter24;
        end else if (((grp_fft_top_2D_fu_419_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
            ap_enable_reg_pp1_iter25 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter5 <= ap_enable_reg_pp1_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter6 <= ap_enable_reg_pp1_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter7 <= ap_enable_reg_pp1_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter8 <= ap_enable_reg_pp1_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter9 <= ap_enable_reg_pp1_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_condition_pp2_exit_iter0_state38) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if (((grp_fft_top_2D_fu_419_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state37))) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp2_exit_iter0_state38)) begin
                ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state38);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter3 <= ap_enable_reg_pp2_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter4 <= ap_enable_reg_pp2_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter5 <= ap_enable_reg_pp2_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter6 <= ap_enable_reg_pp2_iter5;
        end else if (((grp_fft_top_2D_fu_419_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state37))) begin
            ap_enable_reg_pp2_iter6 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_fft_top_2D_fu_419_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state8))) begin
            grp_fft_top_2D_fu_419_ap_start_reg <= 1'b1;
        end else if ((grp_fft_top_2D_fu_419_ap_ready == 1'b1)) begin
            grp_fft_top_2D_fu_419_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter24 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        if (((1'd0 == and_ln33_reg_915_pp1_iter23_reg) & (icmp_ln27_reg_861_pp1_iter23_reg == 1'd0))) begin
            ap_phi_reg_pp1_iter25_p_i_assign_reg_374 <= grp_fu_447_p2;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter25_p_i_assign_reg_374 <= ap_phi_reg_pp1_iter24_p_i_assign_reg_374;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter24 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        if (((1'd0 == and_ln33_reg_915_pp1_iter23_reg) & (icmp_ln27_reg_861_pp1_iter23_reg == 1'd0))) begin
            ap_phi_reg_pp1_iter25_p_r_assign_reg_362 <= grp_fu_443_p2;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter25_p_r_assign_reg_362 <= ap_phi_reg_pp1_iter24_p_r_assign_reg_362;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        if (((icmp_ln27_reg_861_pp1_iter1_reg == 1'd0) & (1'd1 == and_ln33_fu_719_p2))) begin
            ap_phi_reg_pp1_iter3_p_i_assign_reg_374 <= 32'd1065353216;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter3_p_i_assign_reg_374 <= ap_phi_reg_pp1_iter2_p_i_assign_reg_374;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        if (((icmp_ln27_reg_861_pp1_iter1_reg == 1'd0) & (1'd1 == and_ln33_fu_719_p2))) begin
            ap_phi_reg_pp1_iter3_p_r_assign_reg_362 <= 32'd1065353216;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter3_p_r_assign_reg_362 <= ap_phi_reg_pp1_iter2_p_r_assign_reg_362;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln27_fu_607_p2 == 1'd0))) begin
        indvar_flatten11_reg_329 <= add_ln27_fu_613_p2;
    end else if (((grp_fft_top_2D_fu_419_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
        indvar_flatten11_reg_329 <= 15'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln70_fu_725_p2 == 1'd0))) begin
        indvar_flatten23_reg_386 <= add_ln70_fu_731_p2;
    end else if (((grp_fft_top_2D_fu_419_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state37))) begin
        indvar_flatten23_reg_386 <= 15'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln14_3_fu_527_p2 == 1'd1) & (icmp_ln14_2_fu_521_p2 == 1'd1))) begin
        indvar_flatten_reg_296 <= 15'd0;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln56_fu_533_p2 == 1'd0))) begin
        indvar_flatten_reg_296 <= add_ln56_fu_539_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln14_fu_483_p2 == 1'd0))) begin
        phi_ln14_1_reg_262 <= add_ln14_1_fu_463_p2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        phi_ln14_1_reg_262 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln14_1_fu_489_p2 == 1'd1) & (icmp_ln14_fu_483_p2 == 1'd1))) begin
        phi_ln14_2_reg_273 <= 7'd0;
    end else if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln14_3_fu_527_p2 == 1'd0) & (icmp_ln14_2_fu_521_p2 == 1'd1))) begin
        phi_ln14_2_reg_273 <= add_ln14_2_reg_814;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln14_2_fu_521_p2 == 1'd0))) begin
        phi_ln14_3_reg_285 <= add_ln14_3_fu_501_p2;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        phi_ln14_3_reg_285 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln14_1_fu_489_p2 == 1'd0) & (icmp_ln14_fu_483_p2 == 1'd1))) begin
        phi_ln14_reg_250 <= add_ln14_reg_798;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        phi_ln14_reg_250 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln70_fu_725_p2 == 1'd0))) begin
        x_0_i10_reg_408 <= x_4_fu_792_p2;
    end else if (((grp_fft_top_2D_fu_419_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state37))) begin
        x_0_i10_reg_408 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln14_3_fu_527_p2 == 1'd1) & (icmp_ln14_2_fu_521_p2 == 1'd1))) begin
        x_0_i_reg_318 <= 8'd0;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln56_fu_533_p2 == 1'd0))) begin
        x_0_i_reg_318 <= x_3_fu_601_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln27_fu_607_p2 == 1'd0))) begin
        x_0_reg_351 <= x_fu_678_p2;
    end else if (((grp_fft_top_2D_fu_419_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
        x_0_reg_351 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln70_reg_959 == 1'd0))) begin
        y_0_i9_reg_397 <= select_ln77_1_reg_968;
    end else if (((grp_fft_top_2D_fu_419_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state37))) begin
        y_0_i9_reg_397 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln14_3_fu_527_p2 == 1'd1) & (icmp_ln14_2_fu_521_p2 == 1'd1))) begin
        y_0_i_reg_307 <= 8'd0;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln56_reg_832 == 1'd0))) begin
        y_0_i_reg_307 <= select_ln61_1_reg_841;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln27_reg_861 == 1'd0))) begin
        y_0_reg_340 <= select_ln33_1_reg_870;
    end else if (((grp_fft_top_2D_fu_419_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
        y_0_reg_340 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        add_ln14_2_reg_814 <= add_ln14_2_fu_495_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        add_ln14_reg_798 <= add_ln14_fu_457_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln27_reg_861_pp1_iter1_reg == 1'd0))) begin
        and_ln33_reg_915 <= and_ln33_fu_719_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp1_stage0_11001)) begin
        and_ln33_reg_915_pp1_iter10_reg <= and_ln33_reg_915_pp1_iter9_reg;
        and_ln33_reg_915_pp1_iter11_reg <= and_ln33_reg_915_pp1_iter10_reg;
        and_ln33_reg_915_pp1_iter12_reg <= and_ln33_reg_915_pp1_iter11_reg;
        and_ln33_reg_915_pp1_iter13_reg <= and_ln33_reg_915_pp1_iter12_reg;
        and_ln33_reg_915_pp1_iter14_reg <= and_ln33_reg_915_pp1_iter13_reg;
        and_ln33_reg_915_pp1_iter15_reg <= and_ln33_reg_915_pp1_iter14_reg;
        and_ln33_reg_915_pp1_iter16_reg <= and_ln33_reg_915_pp1_iter15_reg;
        and_ln33_reg_915_pp1_iter17_reg <= and_ln33_reg_915_pp1_iter16_reg;
        and_ln33_reg_915_pp1_iter18_reg <= and_ln33_reg_915_pp1_iter17_reg;
        and_ln33_reg_915_pp1_iter19_reg <= and_ln33_reg_915_pp1_iter18_reg;
        and_ln33_reg_915_pp1_iter20_reg <= and_ln33_reg_915_pp1_iter19_reg;
        and_ln33_reg_915_pp1_iter21_reg <= and_ln33_reg_915_pp1_iter20_reg;
        and_ln33_reg_915_pp1_iter22_reg <= and_ln33_reg_915_pp1_iter21_reg;
        and_ln33_reg_915_pp1_iter23_reg <= and_ln33_reg_915_pp1_iter22_reg;
        and_ln33_reg_915_pp1_iter3_reg <= and_ln33_reg_915;
        and_ln33_reg_915_pp1_iter4_reg <= and_ln33_reg_915_pp1_iter3_reg;
        and_ln33_reg_915_pp1_iter5_reg <= and_ln33_reg_915_pp1_iter4_reg;
        and_ln33_reg_915_pp1_iter6_reg <= and_ln33_reg_915_pp1_iter5_reg;
        and_ln33_reg_915_pp1_iter7_reg <= and_ln33_reg_915_pp1_iter6_reg;
        and_ln33_reg_915_pp1_iter8_reg <= and_ln33_reg_915_pp1_iter7_reg;
        and_ln33_reg_915_pp1_iter9_reg <= and_ln33_reg_915_pp1_iter8_reg;
        coe_b_load_reg_907_pp1_iter2_reg <= coe_b_load_reg_907;
        coe_b_load_reg_907_pp1_iter3_reg <= coe_b_load_reg_907_pp1_iter2_reg;
        coe_b_load_reg_907_pp1_iter4_reg <= coe_b_load_reg_907_pp1_iter3_reg;
        coe_b_load_reg_907_pp1_iter5_reg <= coe_b_load_reg_907_pp1_iter4_reg;
        coe_b_load_reg_907_pp1_iter6_reg <= coe_b_load_reg_907_pp1_iter5_reg;
        coe_b_load_reg_907_pp1_iter7_reg <= coe_b_load_reg_907_pp1_iter6_reg;
        coe_b_load_reg_907_pp1_iter8_reg <= coe_b_load_reg_907_pp1_iter7_reg;
        fft_result_M_imag_a_1_reg_896_pp1_iter10_reg <= fft_result_M_imag_a_1_reg_896_pp1_iter9_reg;
        fft_result_M_imag_a_1_reg_896_pp1_iter11_reg <= fft_result_M_imag_a_1_reg_896_pp1_iter10_reg;
        fft_result_M_imag_a_1_reg_896_pp1_iter12_reg <= fft_result_M_imag_a_1_reg_896_pp1_iter11_reg;
        fft_result_M_imag_a_1_reg_896_pp1_iter13_reg <= fft_result_M_imag_a_1_reg_896_pp1_iter12_reg;
        fft_result_M_imag_a_1_reg_896_pp1_iter14_reg <= fft_result_M_imag_a_1_reg_896_pp1_iter13_reg;
        fft_result_M_imag_a_1_reg_896_pp1_iter15_reg <= fft_result_M_imag_a_1_reg_896_pp1_iter14_reg;
        fft_result_M_imag_a_1_reg_896_pp1_iter16_reg <= fft_result_M_imag_a_1_reg_896_pp1_iter15_reg;
        fft_result_M_imag_a_1_reg_896_pp1_iter17_reg <= fft_result_M_imag_a_1_reg_896_pp1_iter16_reg;
        fft_result_M_imag_a_1_reg_896_pp1_iter18_reg <= fft_result_M_imag_a_1_reg_896_pp1_iter17_reg;
        fft_result_M_imag_a_1_reg_896_pp1_iter19_reg <= fft_result_M_imag_a_1_reg_896_pp1_iter18_reg;
        fft_result_M_imag_a_1_reg_896_pp1_iter20_reg <= fft_result_M_imag_a_1_reg_896_pp1_iter19_reg;
        fft_result_M_imag_a_1_reg_896_pp1_iter21_reg <= fft_result_M_imag_a_1_reg_896_pp1_iter20_reg;
        fft_result_M_imag_a_1_reg_896_pp1_iter22_reg <= fft_result_M_imag_a_1_reg_896_pp1_iter21_reg;
        fft_result_M_imag_a_1_reg_896_pp1_iter23_reg <= fft_result_M_imag_a_1_reg_896_pp1_iter22_reg;
        fft_result_M_imag_a_1_reg_896_pp1_iter24_reg <= fft_result_M_imag_a_1_reg_896_pp1_iter23_reg;
        fft_result_M_imag_a_1_reg_896_pp1_iter2_reg <= fft_result_M_imag_a_1_reg_896_pp1_iter1_reg;
        fft_result_M_imag_a_1_reg_896_pp1_iter3_reg <= fft_result_M_imag_a_1_reg_896_pp1_iter2_reg;
        fft_result_M_imag_a_1_reg_896_pp1_iter4_reg <= fft_result_M_imag_a_1_reg_896_pp1_iter3_reg;
        fft_result_M_imag_a_1_reg_896_pp1_iter5_reg <= fft_result_M_imag_a_1_reg_896_pp1_iter4_reg;
        fft_result_M_imag_a_1_reg_896_pp1_iter6_reg <= fft_result_M_imag_a_1_reg_896_pp1_iter5_reg;
        fft_result_M_imag_a_1_reg_896_pp1_iter7_reg <= fft_result_M_imag_a_1_reg_896_pp1_iter6_reg;
        fft_result_M_imag_a_1_reg_896_pp1_iter8_reg <= fft_result_M_imag_a_1_reg_896_pp1_iter7_reg;
        fft_result_M_imag_a_1_reg_896_pp1_iter9_reg <= fft_result_M_imag_a_1_reg_896_pp1_iter8_reg;
        fft_result_M_real_a_1_reg_890_pp1_iter10_reg <= fft_result_M_real_a_1_reg_890_pp1_iter9_reg;
        fft_result_M_real_a_1_reg_890_pp1_iter11_reg <= fft_result_M_real_a_1_reg_890_pp1_iter10_reg;
        fft_result_M_real_a_1_reg_890_pp1_iter12_reg <= fft_result_M_real_a_1_reg_890_pp1_iter11_reg;
        fft_result_M_real_a_1_reg_890_pp1_iter13_reg <= fft_result_M_real_a_1_reg_890_pp1_iter12_reg;
        fft_result_M_real_a_1_reg_890_pp1_iter14_reg <= fft_result_M_real_a_1_reg_890_pp1_iter13_reg;
        fft_result_M_real_a_1_reg_890_pp1_iter15_reg <= fft_result_M_real_a_1_reg_890_pp1_iter14_reg;
        fft_result_M_real_a_1_reg_890_pp1_iter16_reg <= fft_result_M_real_a_1_reg_890_pp1_iter15_reg;
        fft_result_M_real_a_1_reg_890_pp1_iter17_reg <= fft_result_M_real_a_1_reg_890_pp1_iter16_reg;
        fft_result_M_real_a_1_reg_890_pp1_iter18_reg <= fft_result_M_real_a_1_reg_890_pp1_iter17_reg;
        fft_result_M_real_a_1_reg_890_pp1_iter19_reg <= fft_result_M_real_a_1_reg_890_pp1_iter18_reg;
        fft_result_M_real_a_1_reg_890_pp1_iter20_reg <= fft_result_M_real_a_1_reg_890_pp1_iter19_reg;
        fft_result_M_real_a_1_reg_890_pp1_iter21_reg <= fft_result_M_real_a_1_reg_890_pp1_iter20_reg;
        fft_result_M_real_a_1_reg_890_pp1_iter22_reg <= fft_result_M_real_a_1_reg_890_pp1_iter21_reg;
        fft_result_M_real_a_1_reg_890_pp1_iter23_reg <= fft_result_M_real_a_1_reg_890_pp1_iter22_reg;
        fft_result_M_real_a_1_reg_890_pp1_iter24_reg <= fft_result_M_real_a_1_reg_890_pp1_iter23_reg;
        fft_result_M_real_a_1_reg_890_pp1_iter2_reg <= fft_result_M_real_a_1_reg_890_pp1_iter1_reg;
        fft_result_M_real_a_1_reg_890_pp1_iter3_reg <= fft_result_M_real_a_1_reg_890_pp1_iter2_reg;
        fft_result_M_real_a_1_reg_890_pp1_iter4_reg <= fft_result_M_real_a_1_reg_890_pp1_iter3_reg;
        fft_result_M_real_a_1_reg_890_pp1_iter5_reg <= fft_result_M_real_a_1_reg_890_pp1_iter4_reg;
        fft_result_M_real_a_1_reg_890_pp1_iter6_reg <= fft_result_M_real_a_1_reg_890_pp1_iter5_reg;
        fft_result_M_real_a_1_reg_890_pp1_iter7_reg <= fft_result_M_real_a_1_reg_890_pp1_iter6_reg;
        fft_result_M_real_a_1_reg_890_pp1_iter8_reg <= fft_result_M_real_a_1_reg_890_pp1_iter7_reg;
        fft_result_M_real_a_1_reg_890_pp1_iter9_reg <= fft_result_M_real_a_1_reg_890_pp1_iter8_reg;
        icmp_ln27_reg_861_pp1_iter10_reg <= icmp_ln27_reg_861_pp1_iter9_reg;
        icmp_ln27_reg_861_pp1_iter11_reg <= icmp_ln27_reg_861_pp1_iter10_reg;
        icmp_ln27_reg_861_pp1_iter12_reg <= icmp_ln27_reg_861_pp1_iter11_reg;
        icmp_ln27_reg_861_pp1_iter13_reg <= icmp_ln27_reg_861_pp1_iter12_reg;
        icmp_ln27_reg_861_pp1_iter14_reg <= icmp_ln27_reg_861_pp1_iter13_reg;
        icmp_ln27_reg_861_pp1_iter15_reg <= icmp_ln27_reg_861_pp1_iter14_reg;
        icmp_ln27_reg_861_pp1_iter16_reg <= icmp_ln27_reg_861_pp1_iter15_reg;
        icmp_ln27_reg_861_pp1_iter17_reg <= icmp_ln27_reg_861_pp1_iter16_reg;
        icmp_ln27_reg_861_pp1_iter18_reg <= icmp_ln27_reg_861_pp1_iter17_reg;
        icmp_ln27_reg_861_pp1_iter19_reg <= icmp_ln27_reg_861_pp1_iter18_reg;
        icmp_ln27_reg_861_pp1_iter20_reg <= icmp_ln27_reg_861_pp1_iter19_reg;
        icmp_ln27_reg_861_pp1_iter21_reg <= icmp_ln27_reg_861_pp1_iter20_reg;
        icmp_ln27_reg_861_pp1_iter22_reg <= icmp_ln27_reg_861_pp1_iter21_reg;
        icmp_ln27_reg_861_pp1_iter23_reg <= icmp_ln27_reg_861_pp1_iter22_reg;
        icmp_ln27_reg_861_pp1_iter24_reg <= icmp_ln27_reg_861_pp1_iter23_reg;
        icmp_ln27_reg_861_pp1_iter2_reg <= icmp_ln27_reg_861_pp1_iter1_reg;
        icmp_ln27_reg_861_pp1_iter3_reg <= icmp_ln27_reg_861_pp1_iter2_reg;
        icmp_ln27_reg_861_pp1_iter4_reg <= icmp_ln27_reg_861_pp1_iter3_reg;
        icmp_ln27_reg_861_pp1_iter5_reg <= icmp_ln27_reg_861_pp1_iter4_reg;
        icmp_ln27_reg_861_pp1_iter6_reg <= icmp_ln27_reg_861_pp1_iter5_reg;
        icmp_ln27_reg_861_pp1_iter7_reg <= icmp_ln27_reg_861_pp1_iter6_reg;
        icmp_ln27_reg_861_pp1_iter8_reg <= icmp_ln27_reg_861_pp1_iter7_reg;
        icmp_ln27_reg_861_pp1_iter9_reg <= icmp_ln27_reg_861_pp1_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter9 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ap_phi_reg_pp1_iter10_p_i_assign_reg_374 <= ap_phi_reg_pp1_iter9_p_i_assign_reg_374;
        ap_phi_reg_pp1_iter10_p_r_assign_reg_362 <= ap_phi_reg_pp1_iter9_p_r_assign_reg_362;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter10 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ap_phi_reg_pp1_iter11_p_i_assign_reg_374 <= ap_phi_reg_pp1_iter10_p_i_assign_reg_374;
        ap_phi_reg_pp1_iter11_p_r_assign_reg_362 <= ap_phi_reg_pp1_iter10_p_r_assign_reg_362;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter11 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ap_phi_reg_pp1_iter12_p_i_assign_reg_374 <= ap_phi_reg_pp1_iter11_p_i_assign_reg_374;
        ap_phi_reg_pp1_iter12_p_r_assign_reg_362 <= ap_phi_reg_pp1_iter11_p_r_assign_reg_362;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter12 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ap_phi_reg_pp1_iter13_p_i_assign_reg_374 <= ap_phi_reg_pp1_iter12_p_i_assign_reg_374;
        ap_phi_reg_pp1_iter13_p_r_assign_reg_362 <= ap_phi_reg_pp1_iter12_p_r_assign_reg_362;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter13 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ap_phi_reg_pp1_iter14_p_i_assign_reg_374 <= ap_phi_reg_pp1_iter13_p_i_assign_reg_374;
        ap_phi_reg_pp1_iter14_p_r_assign_reg_362 <= ap_phi_reg_pp1_iter13_p_r_assign_reg_362;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter14 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ap_phi_reg_pp1_iter15_p_i_assign_reg_374 <= ap_phi_reg_pp1_iter14_p_i_assign_reg_374;
        ap_phi_reg_pp1_iter15_p_r_assign_reg_362 <= ap_phi_reg_pp1_iter14_p_r_assign_reg_362;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter15 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ap_phi_reg_pp1_iter16_p_i_assign_reg_374 <= ap_phi_reg_pp1_iter15_p_i_assign_reg_374;
        ap_phi_reg_pp1_iter16_p_r_assign_reg_362 <= ap_phi_reg_pp1_iter15_p_r_assign_reg_362;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter16 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ap_phi_reg_pp1_iter17_p_i_assign_reg_374 <= ap_phi_reg_pp1_iter16_p_i_assign_reg_374;
        ap_phi_reg_pp1_iter17_p_r_assign_reg_362 <= ap_phi_reg_pp1_iter16_p_r_assign_reg_362;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter17 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ap_phi_reg_pp1_iter18_p_i_assign_reg_374 <= ap_phi_reg_pp1_iter17_p_i_assign_reg_374;
        ap_phi_reg_pp1_iter18_p_r_assign_reg_362 <= ap_phi_reg_pp1_iter17_p_r_assign_reg_362;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter18 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ap_phi_reg_pp1_iter19_p_i_assign_reg_374 <= ap_phi_reg_pp1_iter18_p_i_assign_reg_374;
        ap_phi_reg_pp1_iter19_p_r_assign_reg_362 <= ap_phi_reg_pp1_iter18_p_r_assign_reg_362;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ap_phi_reg_pp1_iter1_p_i_assign_reg_374 <= ap_phi_reg_pp1_iter0_p_i_assign_reg_374;
        ap_phi_reg_pp1_iter1_p_r_assign_reg_362 <= ap_phi_reg_pp1_iter0_p_r_assign_reg_362;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter19 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ap_phi_reg_pp1_iter20_p_i_assign_reg_374 <= ap_phi_reg_pp1_iter19_p_i_assign_reg_374;
        ap_phi_reg_pp1_iter20_p_r_assign_reg_362 <= ap_phi_reg_pp1_iter19_p_r_assign_reg_362;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter20 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ap_phi_reg_pp1_iter21_p_i_assign_reg_374 <= ap_phi_reg_pp1_iter20_p_i_assign_reg_374;
        ap_phi_reg_pp1_iter21_p_r_assign_reg_362 <= ap_phi_reg_pp1_iter20_p_r_assign_reg_362;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter21 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ap_phi_reg_pp1_iter22_p_i_assign_reg_374 <= ap_phi_reg_pp1_iter21_p_i_assign_reg_374;
        ap_phi_reg_pp1_iter22_p_r_assign_reg_362 <= ap_phi_reg_pp1_iter21_p_r_assign_reg_362;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter22 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ap_phi_reg_pp1_iter23_p_i_assign_reg_374 <= ap_phi_reg_pp1_iter22_p_i_assign_reg_374;
        ap_phi_reg_pp1_iter23_p_r_assign_reg_362 <= ap_phi_reg_pp1_iter22_p_r_assign_reg_362;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter23 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ap_phi_reg_pp1_iter24_p_i_assign_reg_374 <= ap_phi_reg_pp1_iter23_p_i_assign_reg_374;
        ap_phi_reg_pp1_iter24_p_r_assign_reg_362 <= ap_phi_reg_pp1_iter23_p_r_assign_reg_362;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ap_phi_reg_pp1_iter2_p_i_assign_reg_374 <= ap_phi_reg_pp1_iter1_p_i_assign_reg_374;
        ap_phi_reg_pp1_iter2_p_r_assign_reg_362 <= ap_phi_reg_pp1_iter1_p_r_assign_reg_362;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ap_phi_reg_pp1_iter4_p_i_assign_reg_374 <= ap_phi_reg_pp1_iter3_p_i_assign_reg_374;
        ap_phi_reg_pp1_iter4_p_r_assign_reg_362 <= ap_phi_reg_pp1_iter3_p_r_assign_reg_362;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ap_phi_reg_pp1_iter5_p_i_assign_reg_374 <= ap_phi_reg_pp1_iter4_p_i_assign_reg_374;
        ap_phi_reg_pp1_iter5_p_r_assign_reg_362 <= ap_phi_reg_pp1_iter4_p_r_assign_reg_362;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter5 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ap_phi_reg_pp1_iter6_p_i_assign_reg_374 <= ap_phi_reg_pp1_iter5_p_i_assign_reg_374;
        ap_phi_reg_pp1_iter6_p_r_assign_reg_362 <= ap_phi_reg_pp1_iter5_p_r_assign_reg_362;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter6 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ap_phi_reg_pp1_iter7_p_i_assign_reg_374 <= ap_phi_reg_pp1_iter6_p_i_assign_reg_374;
        ap_phi_reg_pp1_iter7_p_r_assign_reg_362 <= ap_phi_reg_pp1_iter6_p_r_assign_reg_362;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter7 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ap_phi_reg_pp1_iter8_p_i_assign_reg_374 <= ap_phi_reg_pp1_iter7_p_i_assign_reg_374;
        ap_phi_reg_pp1_iter8_p_r_assign_reg_362 <= ap_phi_reg_pp1_iter7_p_r_assign_reg_362;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter8 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ap_phi_reg_pp1_iter9_p_i_assign_reg_374 <= ap_phi_reg_pp1_iter8_p_i_assign_reg_374;
        ap_phi_reg_pp1_iter9_p_r_assign_reg_362 <= ap_phi_reg_pp1_iter8_p_r_assign_reg_362;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln27_fu_607_p2 == 1'd0))) begin
        coe_a_M_imag_addr_reg_880 <= zext_ln1044_1_fu_669_p1;
        coe_a_M_real_addr_reg_875 <= zext_ln1044_1_fu_669_p1;
        fft_result_M_imag_a_1_reg_896 <= zext_ln1044_1_fu_669_p1;
        fft_result_M_real_a_1_reg_890 <= zext_ln1044_1_fu_669_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        coe_a_M_imag_addr_reg_880_pp1_iter1_reg <= coe_a_M_imag_addr_reg_880;
        coe_a_M_real_addr_reg_875_pp1_iter1_reg <= coe_a_M_real_addr_reg_875;
        fft_result_M_imag_a_1_reg_896_pp1_iter1_reg <= fft_result_M_imag_a_1_reg_896;
        fft_result_M_real_a_1_reg_890_pp1_iter1_reg <= fft_result_M_real_a_1_reg_890;
        icmp_ln27_reg_861 <= icmp_ln27_fu_607_p2;
        icmp_ln27_reg_861_pp1_iter1_reg <= icmp_ln27_reg_861;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'd0 == and_ln33_reg_915) & (icmp_ln27_reg_861_pp1_iter2_reg == 1'd0))) begin
        coe_a_M_imag_load_reg_934 <= coe_a_M_imag_q0;
        coe_a_M_real_load_reg_924 <= coe_a_M_real_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln27_reg_861 == 1'd0))) begin
        coe_b_load_reg_907 <= coe_b_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'd0 == and_ln33_reg_915) & (icmp_ln27_reg_861_pp1_iter2_reg == 1'd0))) begin
        fft_result_M_imag_l_reg_929 <= fft_result_M_imag_q0;
        fft_result_M_real_l_reg_919 <= fft_result_M_real_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln56_reg_832 <= icmp_ln56_fu_533_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        icmp_ln70_reg_959 <= icmp_ln70_fu_725_p2;
        icmp_ln70_reg_959_pp2_iter1_reg <= icmp_ln70_reg_959;
        zext_ln77_1_reg_973_pp2_iter1_reg[15 : 0] <= zext_ln77_1_reg_973[15 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp2_stage0_11001)) begin
        icmp_ln70_reg_959_pp2_iter2_reg <= icmp_ln70_reg_959_pp2_iter1_reg;
        icmp_ln70_reg_959_pp2_iter3_reg <= icmp_ln70_reg_959_pp2_iter2_reg;
        icmp_ln70_reg_959_pp2_iter4_reg <= icmp_ln70_reg_959_pp2_iter3_reg;
        icmp_ln70_reg_959_pp2_iter5_reg <= icmp_ln70_reg_959_pp2_iter4_reg;
        zext_ln77_1_reg_973_pp2_iter2_reg[15 : 0] <= zext_ln77_1_reg_973_pp2_iter1_reg[15 : 0];
        zext_ln77_1_reg_973_pp2_iter3_reg[15 : 0] <= zext_ln77_1_reg_973_pp2_iter2_reg[15 : 0];
        zext_ln77_1_reg_973_pp2_iter4_reg[15 : 0] <= zext_ln77_1_reg_973_pp2_iter3_reg[15 : 0];
        zext_ln77_1_reg_973_pp2_iter5_reg[15 : 0] <= zext_ln77_1_reg_973_pp2_iter4_reg[15 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln27_fu_607_p2 == 1'd0))) begin
        select_ln33_1_reg_870 <= select_ln33_1_fu_639_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln56_fu_533_p2 == 1'd0))) begin
        select_ln61_1_reg_841 <= select_ln61_1_fu_565_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln70_fu_725_p2 == 1'd0))) begin
        select_ln77_1_reg_968 <= select_ln77_1_fu_757_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'd0 == and_ln33_reg_915_pp1_iter7_reg) & (icmp_ln27_reg_861_pp1_iter7_reg == 1'd0))) begin
        tmp_136_reg_944 <= grp_fu_434_p2;
        tmp_s_reg_939 <= grp_fu_430_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln70_reg_959 == 1'd0))) begin
        tmp_M_real_load_reg_988 <= tmp_M_real_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln70_reg_959_pp2_iter4_reg == 1'd0))) begin
        tmp_i1_reg_993 <= grp_fu_438_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln56_fu_533_p2 == 1'd0))) begin
        zext_ln61_1_reg_846[15 : 0] <= zext_ln61_1_fu_595_p1[15 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln70_fu_725_p2 == 1'd0))) begin
        zext_ln77_1_reg_973[15 : 0] <= zext_ln77_1_fu_787_p1[15 : 0];
    end
end

always @ (*) begin
    if ((icmp_ln56_fu_533_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state6 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state6 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln27_fu_607_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state10 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state10 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln70_fu_725_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state38 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state38 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state45) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter25 == 1'b0) & (ap_enable_reg_pp1_iter24 == 1'b0) & (ap_enable_reg_pp1_iter23 == 1'b0) & (ap_enable_reg_pp1_iter22 == 1'b0) & (ap_enable_reg_pp1_iter21 == 1'b0) & (ap_enable_reg_pp1_iter20 == 1'b0) & (ap_enable_reg_pp1_iter19 == 1'b0) & (ap_enable_reg_pp1_iter18 == 1'b0) & (ap_enable_reg_pp1_iter17 == 1'b0) & (ap_enable_reg_pp1_iter16 == 1'b0) & (ap_enable_reg_pp1_iter15 == 1'b0) & (ap_enable_reg_pp1_iter14 == 1'b0) & (ap_enable_reg_pp1_iter13 == 1'b0) & (ap_enable_reg_pp1_iter12 == 1'b0) & (ap_enable_reg_pp1_iter11 == 1'b0) & (ap_enable_reg_pp1_iter10 == 1'b0) & (ap_enable_reg_pp1_iter9 == 1'b0) & (ap_enable_reg_pp1_iter8 == 1'b0) & (ap_enable_reg_pp1_iter7 == 1'b0) & (ap_enable_reg_pp1_iter6 == 1'b0) & (ap_enable_reg_pp1_iter5 == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter6 == 1'b0) & (ap_enable_reg_pp2_iter5 == 1'b0) & (ap_enable_reg_pp2_iter4 == 1'b0) & (ap_enable_reg_pp2_iter3 == 1'b0) & (ap_enable_reg_pp2_iter2 == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln70_reg_959 == 1'd0))) begin
        ap_phi_mux_y_0_i9_phi_fu_401_p4 = select_ln77_1_reg_968;
    end else begin
        ap_phi_mux_y_0_i9_phi_fu_401_p4 = y_0_i9_reg_397;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln56_reg_832 == 1'd0))) begin
        ap_phi_mux_y_0_i_phi_fu_311_p4 = select_ln61_1_reg_841;
    end else begin
        ap_phi_mux_y_0_i_phi_fu_311_p4 = y_0_i_reg_307;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln27_reg_861 == 1'd0))) begin
        ap_phi_mux_y_0_phi_fu_344_p4 = select_ln33_1_reg_870;
    end else begin
        ap_phi_mux_y_0_phi_fu_344_p4 = y_0_reg_340;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        coe_a_M_imag_ce0 = 1'b1;
    end else begin
        coe_a_M_imag_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        coe_a_M_real_ce0 = 1'b1;
    end else begin
        coe_a_M_real_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        coe_b_ce0 = 1'b1;
    end else begin
        coe_b_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        fft_result_M_imag_address0 = fft_result_M_imag_a_1_reg_896_pp1_iter1_reg;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        fft_result_M_imag_address0 = zext_ln1027_1_fu_515_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        fft_result_M_imag_address0 = grp_fft_top_2D_fu_419_out_M_imag_address0;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        fft_result_M_imag_address0 = grp_fft_top_2D_fu_419_in_M_imag_address0;
    end else begin
        fft_result_M_imag_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | ((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        fft_result_M_imag_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        fft_result_M_imag_ce0 = grp_fft_top_2D_fu_419_out_M_imag_ce0;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        fft_result_M_imag_ce0 = grp_fft_top_2D_fu_419_in_M_imag_ce0;
    end else begin
        fft_result_M_imag_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter25 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        fft_result_M_imag_ce1 = 1'b1;
    end else begin
        fft_result_M_imag_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        fft_result_M_imag_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        fft_result_M_imag_d0 = grp_fft_top_2D_fu_419_out_M_imag_d0;
    end else begin
        fft_result_M_imag_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        fft_result_M_imag_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        fft_result_M_imag_we0 = grp_fft_top_2D_fu_419_out_M_imag_we0;
    end else begin
        fft_result_M_imag_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter25 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln27_reg_861_pp1_iter24_reg == 1'd0))) begin
        fft_result_M_imag_we1 = 1'b1;
    end else begin
        fft_result_M_imag_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        fft_result_M_real_address0 = fft_result_M_real_a_1_reg_890_pp1_iter1_reg;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        fft_result_M_real_address0 = zext_ln1027_1_fu_515_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        fft_result_M_real_address0 = grp_fft_top_2D_fu_419_out_M_real_address0;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        fft_result_M_real_address0 = grp_fft_top_2D_fu_419_in_M_real_address0;
    end else begin
        fft_result_M_real_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | ((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        fft_result_M_real_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        fft_result_M_real_ce0 = grp_fft_top_2D_fu_419_out_M_real_ce0;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        fft_result_M_real_ce0 = grp_fft_top_2D_fu_419_in_M_real_ce0;
    end else begin
        fft_result_M_real_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter25 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        fft_result_M_real_ce1 = 1'b1;
    end else begin
        fft_result_M_real_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        fft_result_M_real_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        fft_result_M_real_d0 = grp_fft_top_2D_fu_419_out_M_real_d0;
    end else begin
        fft_result_M_real_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        fft_result_M_real_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        fft_result_M_real_we0 = grp_fft_top_2D_fu_419_out_M_real_we0;
    end else begin
        fft_result_M_real_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter25 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln27_reg_861_pp1_iter24_reg == 1'd0))) begin
        fft_result_M_real_we1 = 1'b1;
    end else begin
        fft_result_M_real_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        grp_fft_top_2D_fu_419_direction = 1'd0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_fft_top_2D_fu_419_direction = 1'd1;
    end else begin
        grp_fft_top_2D_fu_419_direction = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        grp_fft_top_2D_fu_419_in_M_imag_q0 = fft_result_M_imag_q0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_fft_top_2D_fu_419_in_M_imag_q0 = tmp_M_imag_q0;
    end else begin
        grp_fft_top_2D_fu_419_in_M_imag_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        grp_fft_top_2D_fu_419_in_M_real_q0 = fft_result_M_real_q0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_fft_top_2D_fu_419_in_M_real_q0 = tmp_M_real_q0;
    end else begin
        grp_fft_top_2D_fu_419_in_M_real_q0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_M_imag_address0 = zext_ln61_1_fu_595_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        tmp_M_imag_address0 = zext_ln1027_fu_477_p1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        tmp_M_imag_address0 = grp_fft_top_2D_fu_419_out_M_imag_address0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        tmp_M_imag_address0 = grp_fft_top_2D_fu_419_in_M_imag_address0;
    end else begin
        tmp_M_imag_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        tmp_M_imag_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        tmp_M_imag_ce0 = grp_fft_top_2D_fu_419_out_M_imag_ce0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        tmp_M_imag_ce0 = grp_fft_top_2D_fu_419_in_M_imag_ce0;
    end else begin
        tmp_M_imag_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        tmp_M_imag_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        tmp_M_imag_d0 = grp_fft_top_2D_fu_419_out_M_imag_d0;
    end else begin
        tmp_M_imag_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln56_fu_533_p2 == 1'd0)))) begin
        tmp_M_imag_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        tmp_M_imag_we0 = grp_fft_top_2D_fu_419_out_M_imag_we0;
    end else begin
        tmp_M_imag_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        tmp_M_real_address0 = zext_ln77_1_fu_787_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_M_real_address0 = zext_ln61_1_reg_846;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        tmp_M_real_address0 = zext_ln1027_fu_477_p1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        tmp_M_real_address0 = grp_fft_top_2D_fu_419_out_M_real_address0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        tmp_M_real_address0 = grp_fft_top_2D_fu_419_in_M_real_address0;
    end else begin
        tmp_M_real_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        tmp_M_real_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        tmp_M_real_ce0 = grp_fft_top_2D_fu_419_out_M_real_ce0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        tmp_M_real_ce0 = grp_fft_top_2D_fu_419_in_M_real_ce0;
    end else begin
        tmp_M_real_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_M_real_d0 = x_io_q0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        tmp_M_real_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        tmp_M_real_d0 = grp_fft_top_2D_fu_419_out_M_real_d0;
    end else begin
        tmp_M_real_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln56_reg_832 == 1'd0)))) begin
        tmp_M_real_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        tmp_M_real_we0 = grp_fft_top_2D_fu_419_out_M_real_we0;
    end else begin
        tmp_M_real_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter6 == 1'b1))) begin
        x_io_address0 = zext_ln77_1_reg_973_pp2_iter5_reg;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        x_io_address0 = zext_ln61_1_fu_595_p1;
    end else begin
        x_io_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter6 == 1'b1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        x_io_ce0 = 1'b1;
    end else begin
        x_io_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter6 == 1'b1) & (icmp_ln70_reg_959_pp2_iter5_reg == 1'd0))) begin
        x_io_we0 = 1'b1;
    end else begin
        x_io_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln14_1_fu_489_p2 == 1'd1) & (icmp_ln14_fu_483_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln14_1_fu_489_p2 == 1'd0) & (icmp_ln14_fu_483_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln14_3_fu_527_p2 == 1'd1) & (icmp_ln14_2_fu_521_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln14_3_fu_527_p2 == 1'd0) & (icmp_ln14_2_fu_521_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln56_fu_533_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln56_fu_533_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            if (((grp_fft_top_2D_fu_419_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln27_fu_607_p2 == 1'd1)) & ~((ap_enable_reg_pp1_iter24 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter25 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((ap_enable_reg_pp1_iter24 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter25 == 1'b1)) | ((ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln27_fu_607_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            if (((grp_fft_top_2D_fu_419_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state37))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((~((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (icmp_ln70_fu_725_p2 == 1'd1)) & ~((ap_enable_reg_pp2_iter5 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter6 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if ((((ap_enable_reg_pp2_iter5 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter6 == 1'b1)) | ((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (icmp_ln70_fu_725_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state45;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1044_fu_663_p2 = (zext_ln30_fu_655_p1 + zext_ln1044_fu_659_p1);

assign add_ln14_1_fu_463_p2 = (phi_ln14_1_reg_262 + 7'd1);

assign add_ln14_2_fu_495_p2 = (phi_ln14_2_reg_273 + 7'd1);

assign add_ln14_3_fu_501_p2 = (phi_ln14_3_reg_285 + 7'd1);

assign add_ln14_fu_457_p2 = (phi_ln14_reg_250 + 7'd1);

assign add_ln27_fu_613_p2 = (indvar_flatten11_reg_329 + 15'd1);

assign add_ln56_fu_539_p2 = (indvar_flatten_reg_296 + 15'd1);

assign add_ln61_fu_589_p2 = (zext_ln61_fu_585_p1 + zext_ln59_fu_581_p1);

assign add_ln70_fu_731_p2 = (indvar_flatten23_reg_386 + 15'd1);

assign add_ln77_fu_781_p2 = (zext_ln77_fu_777_p1 + zext_ln73_fu_773_p1);

assign and_ln33_fu_719_p2 = (or_ln33_fu_713_p2 & grp_fu_451_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd7];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp1_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp1_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp1_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp1_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp1_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp1_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp1_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp1_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp1_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp1_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp1_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp1_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp1_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp1_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp1_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp1_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp1_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp1_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp1_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp1_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp1_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp1_stage0_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp1_stage0_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp2_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp2_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp2_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp2_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp2_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_phi_reg_pp1_iter0_p_i_assign_reg_374 = 'bx;

assign ap_phi_reg_pp1_iter0_p_r_assign_reg_362 = 'bx;

assign bitcast_ln33_fu_684_p1 = coe_b_load_reg_907;

assign coe_a_M_imag_address0 = coe_a_M_imag_addr_reg_880_pp1_iter1_reg;

assign coe_a_M_real_address0 = coe_a_M_real_addr_reg_875_pp1_iter1_reg;

assign coe_b_address0 = zext_ln1044_1_fu_669_p1;

assign grp_fft_top_2D_fu_419_ap_start = grp_fft_top_2D_fu_419_ap_start_reg;

assign icmp_ln14_1_fu_489_p2 = ((phi_ln14_reg_250 == 7'd127) ? 1'b1 : 1'b0);

assign icmp_ln14_2_fu_521_p2 = ((phi_ln14_3_reg_285 == 7'd127) ? 1'b1 : 1'b0);

assign icmp_ln14_3_fu_527_p2 = ((phi_ln14_2_reg_273 == 7'd127) ? 1'b1 : 1'b0);

assign icmp_ln14_fu_483_p2 = ((phi_ln14_1_reg_262 == 7'd127) ? 1'b1 : 1'b0);

assign icmp_ln27_fu_607_p2 = ((indvar_flatten11_reg_329 == 15'd16384) ? 1'b1 : 1'b0);

assign icmp_ln29_fu_625_p2 = ((x_0_reg_351 == 8'd128) ? 1'b1 : 1'b0);

assign icmp_ln33_1_fu_707_p2 = ((trunc_ln33_fu_697_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln33_fu_701_p2 = ((tmp_137_fu_687_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln56_fu_533_p2 = ((indvar_flatten_reg_296 == 15'd16384) ? 1'b1 : 1'b0);

assign icmp_ln58_fu_551_p2 = ((x_0_i_reg_318 == 8'd128) ? 1'b1 : 1'b0);

assign icmp_ln70_fu_725_p2 = ((indvar_flatten23_reg_386 == 15'd16384) ? 1'b1 : 1'b0);

assign icmp_ln72_fu_743_p2 = ((x_0_i10_reg_408 == 8'd128) ? 1'b1 : 1'b0);

assign or_ln33_fu_713_p2 = (icmp_ln33_fu_701_p2 | icmp_ln33_1_fu_707_p2);

assign select_ln33_1_fu_639_p3 = ((icmp_ln29_fu_625_p2[0:0] === 1'b1) ? y_fu_619_p2 : ap_phi_mux_y_0_phi_fu_344_p4);

assign select_ln33_fu_631_p3 = ((icmp_ln29_fu_625_p2[0:0] === 1'b1) ? 8'd0 : x_0_reg_351);

assign select_ln61_1_fu_565_p3 = ((icmp_ln58_fu_551_p2[0:0] === 1'b1) ? y_1_fu_545_p2 : ap_phi_mux_y_0_i_phi_fu_311_p4);

assign select_ln61_fu_557_p3 = ((icmp_ln58_fu_551_p2[0:0] === 1'b1) ? 8'd0 : x_0_i_reg_318);

assign select_ln77_1_fu_757_p3 = ((icmp_ln72_fu_743_p2[0:0] === 1'b1) ? y_2_fu_737_p2 : ap_phi_mux_y_0_i9_phi_fu_401_p4);

assign select_ln77_fu_749_p3 = ((icmp_ln72_fu_743_p2[0:0] === 1'b1) ? 8'd0 : x_0_i10_reg_408);

assign tmp_137_fu_687_p4 = {{bitcast_ln33_fu_684_p1[30:23]}};

assign tmp_141_fu_507_p3 = {{phi_ln14_2_reg_273}, {phi_ln14_3_reg_285}};

assign tmp_144_fu_573_p3 = {{select_ln61_1_fu_565_p3}, {7'd0}};

assign tmp_145_fu_647_p3 = {{select_ln33_1_fu_639_p3}, {7'd0}};

assign tmp_146_fu_765_p3 = {{select_ln77_1_fu_757_p3}, {7'd0}};

assign tmp_fu_469_p3 = {{phi_ln14_reg_250}, {phi_ln14_1_reg_262}};

assign trunc_ln33_fu_697_p1 = bitcast_ln33_fu_684_p1[22:0];

assign x_3_fu_601_p2 = (select_ln61_fu_557_p3 + 8'd1);

assign x_4_fu_792_p2 = (select_ln77_fu_749_p3 + 8'd1);

assign x_fu_678_p2 = (select_ln33_fu_631_p3 + 8'd1);

assign x_io_d0 = tmp_i1_reg_993;

assign y_1_fu_545_p2 = (ap_phi_mux_y_0_i_phi_fu_311_p4 + 8'd1);

assign y_2_fu_737_p2 = (ap_phi_mux_y_0_i9_phi_fu_401_p4 + 8'd1);

assign y_fu_619_p2 = (8'd1 + ap_phi_mux_y_0_phi_fu_344_p4);

assign zext_ln1027_1_fu_515_p1 = tmp_141_fu_507_p3;

assign zext_ln1027_fu_477_p1 = tmp_fu_469_p3;

assign zext_ln1044_1_fu_669_p1 = add_ln1044_fu_663_p2;

assign zext_ln1044_fu_659_p1 = select_ln33_fu_631_p3;

assign zext_ln30_fu_655_p1 = tmp_145_fu_647_p3;

assign zext_ln59_fu_581_p1 = tmp_144_fu_573_p3;

assign zext_ln61_1_fu_595_p1 = add_ln61_fu_589_p2;

assign zext_ln61_fu_585_p1 = select_ln61_fu_557_p3;

assign zext_ln73_fu_773_p1 = tmp_146_fu_765_p3;

assign zext_ln77_1_fu_787_p1 = add_ln77_fu_781_p2;

assign zext_ln77_fu_777_p1 = select_ln77_fu_749_p3;

always @ (posedge ap_clk) begin
    zext_ln61_1_reg_846[63:16] <= 48'b000000000000000000000000000000000000000000000000;
    zext_ln77_1_reg_973[63:16] <= 48'b000000000000000000000000000000000000000000000000;
    zext_ln77_1_reg_973_pp2_iter1_reg[63:16] <= 48'b000000000000000000000000000000000000000000000000;
    zext_ln77_1_reg_973_pp2_iter2_reg[63:16] <= 48'b000000000000000000000000000000000000000000000000;
    zext_ln77_1_reg_973_pp2_iter3_reg[63:16] <= 48'b000000000000000000000000000000000000000000000000;
    zext_ln77_1_reg_973_pp2_iter4_reg[63:16] <= 48'b000000000000000000000000000000000000000000000000;
    zext_ln77_1_reg_973_pp2_iter5_reg[63:16] <= 48'b000000000000000000000000000000000000000000000000;
end

endmodule //ProxGS4
