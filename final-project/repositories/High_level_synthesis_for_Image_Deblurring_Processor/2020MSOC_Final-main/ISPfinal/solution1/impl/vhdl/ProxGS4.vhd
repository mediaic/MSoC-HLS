-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity ProxGS4 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    x_io_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    x_io_ce0 : OUT STD_LOGIC;
    x_io_we0 : OUT STD_LOGIC;
    x_io_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    x_io_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    coe_a_M_real_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    coe_a_M_real_ce0 : OUT STD_LOGIC;
    coe_a_M_real_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    coe_a_M_imag_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    coe_a_M_imag_ce0 : OUT STD_LOGIC;
    coe_a_M_imag_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    coe_b_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    coe_b_ce0 : OUT STD_LOGIC;
    coe_b_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of ProxGS4 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (12 downto 0) := "0000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (12 downto 0) := "0000000010000";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000100000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (12 downto 0) := "0000001000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (12 downto 0) := "0000010000000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (12 downto 0) := "0000100000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (12 downto 0) := "0001000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (12 downto 0) := "0010000000000";
    constant ap_ST_fsm_pp2_stage0 : STD_LOGIC_VECTOR (12 downto 0) := "0100000000000";
    constant ap_ST_fsm_state45 : STD_LOGIC_VECTOR (12 downto 0) := "1000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv15_0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_3F800000 : STD_LOGIC_VECTOR (31 downto 0) := "00111111100000000000000000000000";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_3C000000 : STD_LOGIC_VECTOR (31 downto 0) := "00111100000000000000000000000000";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv7_7F : STD_LOGIC_VECTOR (6 downto 0) := "1111111";
    constant ap_const_lv15_4000 : STD_LOGIC_VECTOR (14 downto 0) := "100000000000000";
    constant ap_const_lv15_1 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000001";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv8_80 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv23_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000000";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal indvar_flatten_reg_296 : STD_LOGIC_VECTOR (14 downto 0);
    signal y_0_i_reg_307 : STD_LOGIC_VECTOR (7 downto 0);
    signal x_0_i_reg_318 : STD_LOGIC_VECTOR (7 downto 0);
    signal indvar_flatten11_reg_329 : STD_LOGIC_VECTOR (14 downto 0);
    signal y_0_reg_340 : STD_LOGIC_VECTOR (7 downto 0);
    signal x_0_reg_351 : STD_LOGIC_VECTOR (7 downto 0);
    signal indvar_flatten23_reg_386 : STD_LOGIC_VECTOR (14 downto 0);
    signal y_0_i9_reg_397 : STD_LOGIC_VECTOR (7 downto 0);
    signal x_0_i10_reg_408 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln14_fu_457_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln14_reg_798 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal add_ln14_1_fu_463_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal add_ln14_2_fu_495_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln14_2_reg_814 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal add_ln14_3_fu_501_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal icmp_ln14_2_fu_521_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln14_3_fu_527_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln56_fu_533_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln56_reg_832 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state6_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal add_ln56_fu_539_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal select_ln61_1_fu_565_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln61_1_reg_841 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln61_1_fu_595_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln61_1_reg_846 : STD_LOGIC_VECTOR (63 downto 0);
    signal x_3_fu_601_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln27_fu_607_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln27_reg_861 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_block_state10_pp1_stage0_iter0 : BOOLEAN;
    signal ap_block_state11_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_state12_pp1_stage0_iter2 : BOOLEAN;
    signal ap_block_state13_pp1_stage0_iter3 : BOOLEAN;
    signal ap_block_state14_pp1_stage0_iter4 : BOOLEAN;
    signal ap_block_state15_pp1_stage0_iter5 : BOOLEAN;
    signal ap_block_state16_pp1_stage0_iter6 : BOOLEAN;
    signal ap_block_state17_pp1_stage0_iter7 : BOOLEAN;
    signal ap_block_state18_pp1_stage0_iter8 : BOOLEAN;
    signal ap_block_state19_pp1_stage0_iter9 : BOOLEAN;
    signal ap_block_state20_pp1_stage0_iter10 : BOOLEAN;
    signal ap_block_state21_pp1_stage0_iter11 : BOOLEAN;
    signal ap_block_state22_pp1_stage0_iter12 : BOOLEAN;
    signal ap_block_state23_pp1_stage0_iter13 : BOOLEAN;
    signal ap_block_state24_pp1_stage0_iter14 : BOOLEAN;
    signal ap_block_state25_pp1_stage0_iter15 : BOOLEAN;
    signal ap_block_state26_pp1_stage0_iter16 : BOOLEAN;
    signal ap_block_state27_pp1_stage0_iter17 : BOOLEAN;
    signal ap_block_state28_pp1_stage0_iter18 : BOOLEAN;
    signal ap_block_state29_pp1_stage0_iter19 : BOOLEAN;
    signal ap_block_state30_pp1_stage0_iter20 : BOOLEAN;
    signal ap_block_state31_pp1_stage0_iter21 : BOOLEAN;
    signal ap_block_state32_pp1_stage0_iter22 : BOOLEAN;
    signal ap_block_state33_pp1_stage0_iter23 : BOOLEAN;
    signal ap_block_state34_pp1_stage0_iter24 : BOOLEAN;
    signal ap_block_state35_pp1_stage0_iter25 : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal icmp_ln27_reg_861_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln27_reg_861_pp1_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln27_reg_861_pp1_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln27_reg_861_pp1_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln27_reg_861_pp1_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln27_reg_861_pp1_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln27_reg_861_pp1_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln27_reg_861_pp1_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln27_reg_861_pp1_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln27_reg_861_pp1_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln27_reg_861_pp1_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln27_reg_861_pp1_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln27_reg_861_pp1_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln27_reg_861_pp1_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln27_reg_861_pp1_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln27_reg_861_pp1_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln27_reg_861_pp1_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln27_reg_861_pp1_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln27_reg_861_pp1_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln27_reg_861_pp1_iter20_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln27_reg_861_pp1_iter21_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln27_reg_861_pp1_iter22_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln27_reg_861_pp1_iter23_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln27_reg_861_pp1_iter24_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln27_fu_613_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal select_ln33_1_fu_639_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln33_1_reg_870 : STD_LOGIC_VECTOR (7 downto 0);
    signal coe_a_M_real_addr_reg_875 : STD_LOGIC_VECTOR (13 downto 0);
    signal coe_a_M_real_addr_reg_875_pp1_iter1_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal coe_a_M_imag_addr_reg_880 : STD_LOGIC_VECTOR (13 downto 0);
    signal coe_a_M_imag_addr_reg_880_pp1_iter1_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal fft_result_M_real_a_1_reg_890 : STD_LOGIC_VECTOR (13 downto 0);
    signal fft_result_M_real_a_1_reg_890_pp1_iter1_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal fft_result_M_real_a_1_reg_890_pp1_iter2_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal fft_result_M_real_a_1_reg_890_pp1_iter3_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal fft_result_M_real_a_1_reg_890_pp1_iter4_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal fft_result_M_real_a_1_reg_890_pp1_iter5_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal fft_result_M_real_a_1_reg_890_pp1_iter6_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal fft_result_M_real_a_1_reg_890_pp1_iter7_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal fft_result_M_real_a_1_reg_890_pp1_iter8_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal fft_result_M_real_a_1_reg_890_pp1_iter9_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal fft_result_M_real_a_1_reg_890_pp1_iter10_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal fft_result_M_real_a_1_reg_890_pp1_iter11_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal fft_result_M_real_a_1_reg_890_pp1_iter12_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal fft_result_M_real_a_1_reg_890_pp1_iter13_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal fft_result_M_real_a_1_reg_890_pp1_iter14_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal fft_result_M_real_a_1_reg_890_pp1_iter15_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal fft_result_M_real_a_1_reg_890_pp1_iter16_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal fft_result_M_real_a_1_reg_890_pp1_iter17_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal fft_result_M_real_a_1_reg_890_pp1_iter18_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal fft_result_M_real_a_1_reg_890_pp1_iter19_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal fft_result_M_real_a_1_reg_890_pp1_iter20_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal fft_result_M_real_a_1_reg_890_pp1_iter21_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal fft_result_M_real_a_1_reg_890_pp1_iter22_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal fft_result_M_real_a_1_reg_890_pp1_iter23_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal fft_result_M_real_a_1_reg_890_pp1_iter24_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal fft_result_M_imag_a_1_reg_896 : STD_LOGIC_VECTOR (13 downto 0);
    signal fft_result_M_imag_a_1_reg_896_pp1_iter1_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal fft_result_M_imag_a_1_reg_896_pp1_iter2_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal fft_result_M_imag_a_1_reg_896_pp1_iter3_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal fft_result_M_imag_a_1_reg_896_pp1_iter4_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal fft_result_M_imag_a_1_reg_896_pp1_iter5_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal fft_result_M_imag_a_1_reg_896_pp1_iter6_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal fft_result_M_imag_a_1_reg_896_pp1_iter7_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal fft_result_M_imag_a_1_reg_896_pp1_iter8_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal fft_result_M_imag_a_1_reg_896_pp1_iter9_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal fft_result_M_imag_a_1_reg_896_pp1_iter10_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal fft_result_M_imag_a_1_reg_896_pp1_iter11_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal fft_result_M_imag_a_1_reg_896_pp1_iter12_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal fft_result_M_imag_a_1_reg_896_pp1_iter13_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal fft_result_M_imag_a_1_reg_896_pp1_iter14_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal fft_result_M_imag_a_1_reg_896_pp1_iter15_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal fft_result_M_imag_a_1_reg_896_pp1_iter16_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal fft_result_M_imag_a_1_reg_896_pp1_iter17_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal fft_result_M_imag_a_1_reg_896_pp1_iter18_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal fft_result_M_imag_a_1_reg_896_pp1_iter19_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal fft_result_M_imag_a_1_reg_896_pp1_iter20_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal fft_result_M_imag_a_1_reg_896_pp1_iter21_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal fft_result_M_imag_a_1_reg_896_pp1_iter22_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal fft_result_M_imag_a_1_reg_896_pp1_iter23_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal fft_result_M_imag_a_1_reg_896_pp1_iter24_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal x_fu_678_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal coe_b_load_reg_907 : STD_LOGIC_VECTOR (31 downto 0);
    signal coe_b_load_reg_907_pp1_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal coe_b_load_reg_907_pp1_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal coe_b_load_reg_907_pp1_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal coe_b_load_reg_907_pp1_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal coe_b_load_reg_907_pp1_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal coe_b_load_reg_907_pp1_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal coe_b_load_reg_907_pp1_iter8_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln33_fu_719_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln33_reg_915 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln33_reg_915_pp1_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln33_reg_915_pp1_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln33_reg_915_pp1_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln33_reg_915_pp1_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln33_reg_915_pp1_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln33_reg_915_pp1_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln33_reg_915_pp1_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln33_reg_915_pp1_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln33_reg_915_pp1_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln33_reg_915_pp1_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln33_reg_915_pp1_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln33_reg_915_pp1_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln33_reg_915_pp1_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln33_reg_915_pp1_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln33_reg_915_pp1_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln33_reg_915_pp1_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln33_reg_915_pp1_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln33_reg_915_pp1_iter20_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln33_reg_915_pp1_iter21_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln33_reg_915_pp1_iter22_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln33_reg_915_pp1_iter23_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal fft_result_M_real_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal fft_result_M_real_l_reg_919 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp1_iter3 : STD_LOGIC := '0';
    signal coe_a_M_real_load_reg_924 : STD_LOGIC_VECTOR (31 downto 0);
    signal fft_result_M_imag_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal fft_result_M_imag_l_reg_929 : STD_LOGIC_VECTOR (31 downto 0);
    signal coe_a_M_imag_load_reg_934 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_430_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_reg_939 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_434_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_136_reg_944 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_443_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_447_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln70_fu_725_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln70_reg_959 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp2_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp2_stage0 : signal is "none";
    signal ap_block_state38_pp2_stage0_iter0 : BOOLEAN;
    signal ap_block_state39_pp2_stage0_iter1 : BOOLEAN;
    signal ap_block_state40_pp2_stage0_iter2 : BOOLEAN;
    signal ap_block_state41_pp2_stage0_iter3 : BOOLEAN;
    signal ap_block_state42_pp2_stage0_iter4 : BOOLEAN;
    signal ap_block_state43_pp2_stage0_iter5 : BOOLEAN;
    signal ap_block_state44_pp2_stage0_iter6 : BOOLEAN;
    signal ap_block_pp2_stage0_11001 : BOOLEAN;
    signal icmp_ln70_reg_959_pp2_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln70_reg_959_pp2_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln70_reg_959_pp2_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln70_reg_959_pp2_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln70_reg_959_pp2_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln70_fu_731_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_enable_reg_pp2_iter0 : STD_LOGIC := '0';
    signal select_ln77_1_fu_757_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln77_1_reg_968 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln77_1_fu_787_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln77_1_reg_973 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln77_1_reg_973_pp2_iter1_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln77_1_reg_973_pp2_iter2_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln77_1_reg_973_pp2_iter3_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln77_1_reg_973_pp2_iter4_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln77_1_reg_973_pp2_iter5_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal x_4_fu_792_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_M_real_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_M_real_load_reg_988 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp2_iter1 : STD_LOGIC := '0';
    signal grp_fu_438_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i1_reg_993 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state6 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal grp_fft_top_2D_fu_419_ap_ready : STD_LOGIC;
    signal grp_fft_top_2D_fu_419_ap_done : STD_LOGIC;
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_condition_pp1_exit_iter0_state10 : STD_LOGIC;
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter13 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter14 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter15 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter16 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter17 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter18 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter19 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter20 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter21 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter22 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter23 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter24 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter25 : STD_LOGIC := '0';
    signal ap_CS_fsm_state37 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state37 : signal is "none";
    signal ap_block_pp2_stage0_subdone : BOOLEAN;
    signal ap_condition_pp2_exit_iter0_state38 : STD_LOGIC;
    signal ap_enable_reg_pp2_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter6 : STD_LOGIC := '0';
    signal tmp_M_real_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_M_real_ce0 : STD_LOGIC;
    signal tmp_M_real_we0 : STD_LOGIC;
    signal tmp_M_real_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_M_imag_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_M_imag_ce0 : STD_LOGIC;
    signal tmp_M_imag_we0 : STD_LOGIC;
    signal tmp_M_imag_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_M_imag_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal fft_result_M_real_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal fft_result_M_real_ce0 : STD_LOGIC;
    signal fft_result_M_real_we0 : STD_LOGIC;
    signal fft_result_M_real_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal fft_result_M_real_ce1 : STD_LOGIC;
    signal fft_result_M_real_we1 : STD_LOGIC;
    signal fft_result_M_imag_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal fft_result_M_imag_ce0 : STD_LOGIC;
    signal fft_result_M_imag_we0 : STD_LOGIC;
    signal fft_result_M_imag_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal fft_result_M_imag_ce1 : STD_LOGIC;
    signal fft_result_M_imag_we1 : STD_LOGIC;
    signal grp_fft_top_2D_fu_419_ap_start : STD_LOGIC;
    signal grp_fft_top_2D_fu_419_ap_idle : STD_LOGIC;
    signal grp_fft_top_2D_fu_419_direction : STD_LOGIC;
    signal grp_fft_top_2D_fu_419_in_M_real_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fft_top_2D_fu_419_in_M_real_ce0 : STD_LOGIC;
    signal grp_fft_top_2D_fu_419_in_M_real_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fft_top_2D_fu_419_in_M_imag_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fft_top_2D_fu_419_in_M_imag_ce0 : STD_LOGIC;
    signal grp_fft_top_2D_fu_419_in_M_imag_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fft_top_2D_fu_419_out_M_real_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fft_top_2D_fu_419_out_M_real_ce0 : STD_LOGIC;
    signal grp_fft_top_2D_fu_419_out_M_real_we0 : STD_LOGIC;
    signal grp_fft_top_2D_fu_419_out_M_real_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fft_top_2D_fu_419_out_M_imag_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fft_top_2D_fu_419_out_M_imag_ce0 : STD_LOGIC;
    signal grp_fft_top_2D_fu_419_out_M_imag_we0 : STD_LOGIC;
    signal grp_fft_top_2D_fu_419_out_M_imag_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal phi_ln14_reg_250 : STD_LOGIC_VECTOR (6 downto 0);
    signal icmp_ln14_fu_483_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln14_1_fu_489_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal phi_ln14_1_reg_262 : STD_LOGIC_VECTOR (6 downto 0);
    signal phi_ln14_2_reg_273 : STD_LOGIC_VECTOR (6 downto 0);
    signal phi_ln14_3_reg_285 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_phi_mux_y_0_i_phi_fu_311_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_phi_mux_y_0_phi_fu_344_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal ap_phi_reg_pp1_iter0_p_r_assign_reg_362 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp1_iter1_p_r_assign_reg_362 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp1_iter2_p_r_assign_reg_362 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp1_iter3_p_r_assign_reg_362 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp1_iter4_p_r_assign_reg_362 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp1_iter5_p_r_assign_reg_362 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp1_iter6_p_r_assign_reg_362 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp1_iter7_p_r_assign_reg_362 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp1_iter8_p_r_assign_reg_362 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp1_iter9_p_r_assign_reg_362 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp1_iter10_p_r_assign_reg_362 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp1_iter11_p_r_assign_reg_362 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp1_iter12_p_r_assign_reg_362 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp1_iter13_p_r_assign_reg_362 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp1_iter14_p_r_assign_reg_362 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp1_iter15_p_r_assign_reg_362 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp1_iter16_p_r_assign_reg_362 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp1_iter17_p_r_assign_reg_362 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp1_iter18_p_r_assign_reg_362 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp1_iter19_p_r_assign_reg_362 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp1_iter20_p_r_assign_reg_362 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp1_iter21_p_r_assign_reg_362 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp1_iter22_p_r_assign_reg_362 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp1_iter23_p_r_assign_reg_362 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp1_iter24_p_r_assign_reg_362 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp1_iter25_p_r_assign_reg_362 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp1_iter0_p_i_assign_reg_374 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp1_iter1_p_i_assign_reg_374 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp1_iter2_p_i_assign_reg_374 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp1_iter3_p_i_assign_reg_374 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp1_iter4_p_i_assign_reg_374 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp1_iter5_p_i_assign_reg_374 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp1_iter6_p_i_assign_reg_374 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp1_iter7_p_i_assign_reg_374 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp1_iter8_p_i_assign_reg_374 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp1_iter9_p_i_assign_reg_374 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp1_iter10_p_i_assign_reg_374 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp1_iter11_p_i_assign_reg_374 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp1_iter12_p_i_assign_reg_374 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp1_iter13_p_i_assign_reg_374 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp1_iter14_p_i_assign_reg_374 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp1_iter15_p_i_assign_reg_374 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp1_iter16_p_i_assign_reg_374 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp1_iter17_p_i_assign_reg_374 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp1_iter18_p_i_assign_reg_374 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp1_iter19_p_i_assign_reg_374 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp1_iter20_p_i_assign_reg_374 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp1_iter21_p_i_assign_reg_374 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp1_iter22_p_i_assign_reg_374 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp1_iter23_p_i_assign_reg_374 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp1_iter24_p_i_assign_reg_374 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp1_iter25_p_i_assign_reg_374 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_y_0_i9_phi_fu_401_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp2_stage0 : BOOLEAN;
    signal grp_fft_top_2D_fu_419_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_CS_fsm_state36 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state36 : signal is "none";
    signal zext_ln1027_fu_477_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1027_1_fu_515_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1044_1_fu_669_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_fu_469_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_141_fu_507_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal icmp_ln58_fu_551_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal y_1_fu_545_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_144_fu_573_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal select_ln61_fu_557_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln61_fu_585_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln59_fu_581_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln61_fu_589_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln29_fu_625_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal y_fu_619_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_145_fu_647_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal select_ln33_fu_631_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln30_fu_655_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln1044_fu_659_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln1044_fu_663_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal bitcast_ln33_fu_684_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_137_fu_687_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln33_fu_697_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln33_1_fu_707_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln33_fu_701_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln33_fu_713_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_451_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln72_fu_743_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal y_2_fu_737_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_146_fu_765_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal select_ln77_fu_749_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln77_fu_777_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln73_fu_773_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln77_fu_781_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_pp1_stage0_00001 : BOOLEAN;
    signal ap_CS_fsm_state45 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state45 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;
    signal ap_idle_pp2 : STD_LOGIC;
    signal ap_enable_pp2 : STD_LOGIC;

    component fft_top_2D IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        direction : IN STD_LOGIC;
        in_M_real_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        in_M_real_ce0 : OUT STD_LOGIC;
        in_M_real_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        in_M_imag_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        in_M_imag_ce0 : OUT STD_LOGIC;
        in_M_imag_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        out_M_real_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        out_M_real_ce0 : OUT STD_LOGIC;
        out_M_real_we0 : OUT STD_LOGIC;
        out_M_real_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        out_M_imag_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        out_M_imag_ce0 : OUT STD_LOGIC;
        out_M_imag_we0 : OUT STD_LOGIC;
        out_M_imag_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component DEBLUR_fadd_32ns_dEe IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component DEBLUR_fmul_32ns_eOg IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component DEBLUR_fdiv_32ns_fYi IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component DEBLUR_fcmp_32ns_ibs IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component ProxGS4_tmp_M_real IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (13 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component ProxGS4_fft_resulqcK IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (13 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (13 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    tmp_M_real_U : component ProxGS4_tmp_M_real
    generic map (
        DataWidth => 32,
        AddressRange => 16384,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => tmp_M_real_address0,
        ce0 => tmp_M_real_ce0,
        we0 => tmp_M_real_we0,
        d0 => tmp_M_real_d0,
        q0 => tmp_M_real_q0);

    tmp_M_imag_U : component ProxGS4_tmp_M_real
    generic map (
        DataWidth => 32,
        AddressRange => 16384,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => tmp_M_imag_address0,
        ce0 => tmp_M_imag_ce0,
        we0 => tmp_M_imag_we0,
        d0 => tmp_M_imag_d0,
        q0 => tmp_M_imag_q0);

    fft_result_M_real_U : component ProxGS4_fft_resulqcK
    generic map (
        DataWidth => 32,
        AddressRange => 16384,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => fft_result_M_real_address0,
        ce0 => fft_result_M_real_ce0,
        we0 => fft_result_M_real_we0,
        d0 => fft_result_M_real_d0,
        q0 => fft_result_M_real_q0,
        address1 => fft_result_M_real_a_1_reg_890_pp1_iter24_reg,
        ce1 => fft_result_M_real_ce1,
        we1 => fft_result_M_real_we1,
        d1 => ap_phi_reg_pp1_iter25_p_r_assign_reg_362);

    fft_result_M_imag_U : component ProxGS4_fft_resulqcK
    generic map (
        DataWidth => 32,
        AddressRange => 16384,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => fft_result_M_imag_address0,
        ce0 => fft_result_M_imag_ce0,
        we0 => fft_result_M_imag_we0,
        d0 => fft_result_M_imag_d0,
        q0 => fft_result_M_imag_q0,
        address1 => fft_result_M_imag_a_1_reg_896_pp1_iter24_reg,
        ce1 => fft_result_M_imag_ce1,
        we1 => fft_result_M_imag_we1,
        d1 => ap_phi_reg_pp1_iter25_p_i_assign_reg_374);

    grp_fft_top_2D_fu_419 : component fft_top_2D
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_fft_top_2D_fu_419_ap_start,
        ap_done => grp_fft_top_2D_fu_419_ap_done,
        ap_idle => grp_fft_top_2D_fu_419_ap_idle,
        ap_ready => grp_fft_top_2D_fu_419_ap_ready,
        direction => grp_fft_top_2D_fu_419_direction,
        in_M_real_address0 => grp_fft_top_2D_fu_419_in_M_real_address0,
        in_M_real_ce0 => grp_fft_top_2D_fu_419_in_M_real_ce0,
        in_M_real_q0 => grp_fft_top_2D_fu_419_in_M_real_q0,
        in_M_imag_address0 => grp_fft_top_2D_fu_419_in_M_imag_address0,
        in_M_imag_ce0 => grp_fft_top_2D_fu_419_in_M_imag_ce0,
        in_M_imag_q0 => grp_fft_top_2D_fu_419_in_M_imag_q0,
        out_M_real_address0 => grp_fft_top_2D_fu_419_out_M_real_address0,
        out_M_real_ce0 => grp_fft_top_2D_fu_419_out_M_real_ce0,
        out_M_real_we0 => grp_fft_top_2D_fu_419_out_M_real_we0,
        out_M_real_d0 => grp_fft_top_2D_fu_419_out_M_real_d0,
        out_M_imag_address0 => grp_fft_top_2D_fu_419_out_M_imag_address0,
        out_M_imag_ce0 => grp_fft_top_2D_fu_419_out_M_imag_ce0,
        out_M_imag_we0 => grp_fft_top_2D_fu_419_out_M_imag_we0,
        out_M_imag_d0 => grp_fft_top_2D_fu_419_out_M_imag_d0);

    DEBLUR_fadd_32ns_dEe_U93 : component DEBLUR_fadd_32ns_dEe
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => fft_result_M_real_l_reg_919,
        din1 => coe_a_M_real_load_reg_924,
        ce => ap_const_logic_1,
        dout => grp_fu_430_p2);

    DEBLUR_fadd_32ns_dEe_U94 : component DEBLUR_fadd_32ns_dEe
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => fft_result_M_imag_l_reg_929,
        din1 => coe_a_M_imag_load_reg_934,
        ce => ap_const_logic_1,
        dout => grp_fu_434_p2);

    DEBLUR_fmul_32ns_eOg_U95 : component DEBLUR_fmul_32ns_eOg
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_M_real_load_reg_988,
        din1 => ap_const_lv32_3C000000,
        ce => ap_const_logic_1,
        dout => grp_fu_438_p2);

    DEBLUR_fdiv_32ns_fYi_U96 : component DEBLUR_fdiv_32ns_fYi
    generic map (
        ID => 1,
        NUM_STAGE => 16,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_s_reg_939,
        din1 => coe_b_load_reg_907_pp1_iter8_reg,
        ce => ap_const_logic_1,
        dout => grp_fu_443_p2);

    DEBLUR_fdiv_32ns_fYi_U97 : component DEBLUR_fdiv_32ns_fYi
    generic map (
        ID => 1,
        NUM_STAGE => 16,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_136_reg_944,
        din1 => coe_b_load_reg_907_pp1_iter8_reg,
        ce => ap_const_logic_1,
        dout => grp_fu_447_p2);

    DEBLUR_fcmp_32ns_ibs_U98 : component DEBLUR_fcmp_32ns_ibs
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => coe_b_q0,
        din1 => ap_const_lv32_0,
        ce => ap_const_logic_1,
        opcode => ap_const_lv5_1,
        dout => grp_fu_451_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln14_3_fu_527_p2 = ap_const_lv1_1) and (icmp_ln14_2_fu_521_p2 = ap_const_lv1_1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state6))) then 
                    ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state6);
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln14_3_fu_527_p2 = ap_const_lv1_1) and (icmp_ln14_2_fu_521_p2 = ap_const_lv1_1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp1_exit_iter0_state10) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif (((grp_fft_top_2D_fu_419_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp1_exit_iter0_state10)) then 
                        ap_enable_reg_pp1_iter1 <= (ap_const_logic_1 xor ap_condition_pp1_exit_iter0_state10);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter10 <= ap_enable_reg_pp1_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter11 <= ap_enable_reg_pp1_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter12 <= ap_enable_reg_pp1_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter13 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter13 <= ap_enable_reg_pp1_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter14 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter14 <= ap_enable_reg_pp1_iter13;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter15 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter15 <= ap_enable_reg_pp1_iter14;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter16 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter16 <= ap_enable_reg_pp1_iter15;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter17_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter17 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter17 <= ap_enable_reg_pp1_iter16;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter18_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter18 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter18 <= ap_enable_reg_pp1_iter17;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter19_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter19 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter19 <= ap_enable_reg_pp1_iter18;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter20_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter20 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter20 <= ap_enable_reg_pp1_iter19;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter21_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter21 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter21 <= ap_enable_reg_pp1_iter20;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter22_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter22 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter22 <= ap_enable_reg_pp1_iter21;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter23_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter23 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter23 <= ap_enable_reg_pp1_iter22;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter24_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter24 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter24 <= ap_enable_reg_pp1_iter23;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter25_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter25 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter25 <= ap_enable_reg_pp1_iter24;
                elsif (((grp_fft_top_2D_fu_419_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                    ap_enable_reg_pp1_iter25 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter5 <= ap_enable_reg_pp1_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter6 <= ap_enable_reg_pp1_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter7 <= ap_enable_reg_pp1_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter8 <= ap_enable_reg_pp1_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter9 <= ap_enable_reg_pp1_iter8;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp2_exit_iter0_state38) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
                elsif (((grp_fft_top_2D_fu_419_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state37))) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp2_exit_iter0_state38)) then 
                        ap_enable_reg_pp2_iter1 <= (ap_const_logic_1 xor ap_condition_pp2_exit_iter0_state38);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter3 <= ap_enable_reg_pp2_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter4 <= ap_enable_reg_pp2_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter5 <= ap_enable_reg_pp2_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter6 <= ap_enable_reg_pp2_iter5;
                elsif (((grp_fft_top_2D_fu_419_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state37))) then 
                    ap_enable_reg_pp2_iter6 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_fft_top_2D_fu_419_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_fft_top_2D_fu_419_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                    grp_fft_top_2D_fu_419_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_fft_top_2D_fu_419_ap_ready = ap_const_logic_1)) then 
                    grp_fft_top_2D_fu_419_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp1_iter25_p_i_assign_reg_374_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter24 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                if (((ap_const_lv1_0 = and_ln33_reg_915_pp1_iter23_reg) and (icmp_ln27_reg_861_pp1_iter23_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp1_iter25_p_i_assign_reg_374 <= grp_fu_447_p2;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter25_p_i_assign_reg_374 <= ap_phi_reg_pp1_iter24_p_i_assign_reg_374;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter25_p_r_assign_reg_362_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter24 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                if (((ap_const_lv1_0 = and_ln33_reg_915_pp1_iter23_reg) and (icmp_ln27_reg_861_pp1_iter23_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp1_iter25_p_r_assign_reg_362 <= grp_fu_443_p2;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter25_p_r_assign_reg_362 <= ap_phi_reg_pp1_iter24_p_r_assign_reg_362;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter3_p_i_assign_reg_374_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                if (((icmp_ln27_reg_861_pp1_iter1_reg = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln33_fu_719_p2))) then 
                    ap_phi_reg_pp1_iter3_p_i_assign_reg_374 <= ap_const_lv32_3F800000;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter3_p_i_assign_reg_374 <= ap_phi_reg_pp1_iter2_p_i_assign_reg_374;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter3_p_r_assign_reg_362_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                if (((icmp_ln27_reg_861_pp1_iter1_reg = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln33_fu_719_p2))) then 
                    ap_phi_reg_pp1_iter3_p_r_assign_reg_362 <= ap_const_lv32_3F800000;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter3_p_r_assign_reg_362 <= ap_phi_reg_pp1_iter2_p_r_assign_reg_362;
                end if;
            end if; 
        end if;
    end process;

    indvar_flatten11_reg_329_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln27_fu_607_p2 = ap_const_lv1_0))) then 
                indvar_flatten11_reg_329 <= add_ln27_fu_613_p2;
            elsif (((grp_fft_top_2D_fu_419_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                indvar_flatten11_reg_329 <= ap_const_lv15_0;
            end if; 
        end if;
    end process;

    indvar_flatten23_reg_386_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln70_fu_725_p2 = ap_const_lv1_0))) then 
                indvar_flatten23_reg_386 <= add_ln70_fu_731_p2;
            elsif (((grp_fft_top_2D_fu_419_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state37))) then 
                indvar_flatten23_reg_386 <= ap_const_lv15_0;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_296_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln14_3_fu_527_p2 = ap_const_lv1_1) and (icmp_ln14_2_fu_521_p2 = ap_const_lv1_1))) then 
                indvar_flatten_reg_296 <= ap_const_lv15_0;
            elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln56_fu_533_p2 = ap_const_lv1_0))) then 
                indvar_flatten_reg_296 <= add_ln56_fu_539_p2;
            end if; 
        end if;
    end process;

    phi_ln14_1_reg_262_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln14_fu_483_p2 = ap_const_lv1_0))) then 
                phi_ln14_1_reg_262 <= add_ln14_1_fu_463_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                phi_ln14_1_reg_262 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;

    phi_ln14_2_reg_273_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln14_1_fu_489_p2 = ap_const_lv1_1) and (icmp_ln14_fu_483_p2 = ap_const_lv1_1))) then 
                phi_ln14_2_reg_273 <= ap_const_lv7_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln14_3_fu_527_p2 = ap_const_lv1_0) and (icmp_ln14_2_fu_521_p2 = ap_const_lv1_1))) then 
                phi_ln14_2_reg_273 <= add_ln14_2_reg_814;
            end if; 
        end if;
    end process;

    phi_ln14_3_reg_285_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln14_2_fu_521_p2 = ap_const_lv1_0))) then 
                phi_ln14_3_reg_285 <= add_ln14_3_fu_501_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                phi_ln14_3_reg_285 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;

    phi_ln14_reg_250_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln14_1_fu_489_p2 = ap_const_lv1_0) and (icmp_ln14_fu_483_p2 = ap_const_lv1_1))) then 
                phi_ln14_reg_250 <= add_ln14_reg_798;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                phi_ln14_reg_250 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;

    x_0_i10_reg_408_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln70_fu_725_p2 = ap_const_lv1_0))) then 
                x_0_i10_reg_408 <= x_4_fu_792_p2;
            elsif (((grp_fft_top_2D_fu_419_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state37))) then 
                x_0_i10_reg_408 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    x_0_i_reg_318_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln14_3_fu_527_p2 = ap_const_lv1_1) and (icmp_ln14_2_fu_521_p2 = ap_const_lv1_1))) then 
                x_0_i_reg_318 <= ap_const_lv8_0;
            elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln56_fu_533_p2 = ap_const_lv1_0))) then 
                x_0_i_reg_318 <= x_3_fu_601_p2;
            end if; 
        end if;
    end process;

    x_0_reg_351_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln27_fu_607_p2 = ap_const_lv1_0))) then 
                x_0_reg_351 <= x_fu_678_p2;
            elsif (((grp_fft_top_2D_fu_419_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                x_0_reg_351 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    y_0_i9_reg_397_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln70_reg_959 = ap_const_lv1_0))) then 
                y_0_i9_reg_397 <= select_ln77_1_reg_968;
            elsif (((grp_fft_top_2D_fu_419_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state37))) then 
                y_0_i9_reg_397 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    y_0_i_reg_307_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln14_3_fu_527_p2 = ap_const_lv1_1) and (icmp_ln14_2_fu_521_p2 = ap_const_lv1_1))) then 
                y_0_i_reg_307 <= ap_const_lv8_0;
            elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln56_reg_832 = ap_const_lv1_0))) then 
                y_0_i_reg_307 <= select_ln61_1_reg_841;
            end if; 
        end if;
    end process;

    y_0_reg_340_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln27_reg_861 = ap_const_lv1_0))) then 
                y_0_reg_340 <= select_ln33_1_reg_870;
            elsif (((grp_fft_top_2D_fu_419_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                y_0_reg_340 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                add_ln14_2_reg_814 <= add_ln14_2_fu_495_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                add_ln14_reg_798 <= add_ln14_fu_457_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln27_reg_861_pp1_iter1_reg = ap_const_lv1_0))) then
                and_ln33_reg_915 <= and_ln33_fu_719_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp1_stage0_11001)) then
                and_ln33_reg_915_pp1_iter10_reg <= and_ln33_reg_915_pp1_iter9_reg;
                and_ln33_reg_915_pp1_iter11_reg <= and_ln33_reg_915_pp1_iter10_reg;
                and_ln33_reg_915_pp1_iter12_reg <= and_ln33_reg_915_pp1_iter11_reg;
                and_ln33_reg_915_pp1_iter13_reg <= and_ln33_reg_915_pp1_iter12_reg;
                and_ln33_reg_915_pp1_iter14_reg <= and_ln33_reg_915_pp1_iter13_reg;
                and_ln33_reg_915_pp1_iter15_reg <= and_ln33_reg_915_pp1_iter14_reg;
                and_ln33_reg_915_pp1_iter16_reg <= and_ln33_reg_915_pp1_iter15_reg;
                and_ln33_reg_915_pp1_iter17_reg <= and_ln33_reg_915_pp1_iter16_reg;
                and_ln33_reg_915_pp1_iter18_reg <= and_ln33_reg_915_pp1_iter17_reg;
                and_ln33_reg_915_pp1_iter19_reg <= and_ln33_reg_915_pp1_iter18_reg;
                and_ln33_reg_915_pp1_iter20_reg <= and_ln33_reg_915_pp1_iter19_reg;
                and_ln33_reg_915_pp1_iter21_reg <= and_ln33_reg_915_pp1_iter20_reg;
                and_ln33_reg_915_pp1_iter22_reg <= and_ln33_reg_915_pp1_iter21_reg;
                and_ln33_reg_915_pp1_iter23_reg <= and_ln33_reg_915_pp1_iter22_reg;
                and_ln33_reg_915_pp1_iter3_reg <= and_ln33_reg_915;
                and_ln33_reg_915_pp1_iter4_reg <= and_ln33_reg_915_pp1_iter3_reg;
                and_ln33_reg_915_pp1_iter5_reg <= and_ln33_reg_915_pp1_iter4_reg;
                and_ln33_reg_915_pp1_iter6_reg <= and_ln33_reg_915_pp1_iter5_reg;
                and_ln33_reg_915_pp1_iter7_reg <= and_ln33_reg_915_pp1_iter6_reg;
                and_ln33_reg_915_pp1_iter8_reg <= and_ln33_reg_915_pp1_iter7_reg;
                and_ln33_reg_915_pp1_iter9_reg <= and_ln33_reg_915_pp1_iter8_reg;
                coe_b_load_reg_907_pp1_iter2_reg <= coe_b_load_reg_907;
                coe_b_load_reg_907_pp1_iter3_reg <= coe_b_load_reg_907_pp1_iter2_reg;
                coe_b_load_reg_907_pp1_iter4_reg <= coe_b_load_reg_907_pp1_iter3_reg;
                coe_b_load_reg_907_pp1_iter5_reg <= coe_b_load_reg_907_pp1_iter4_reg;
                coe_b_load_reg_907_pp1_iter6_reg <= coe_b_load_reg_907_pp1_iter5_reg;
                coe_b_load_reg_907_pp1_iter7_reg <= coe_b_load_reg_907_pp1_iter6_reg;
                coe_b_load_reg_907_pp1_iter8_reg <= coe_b_load_reg_907_pp1_iter7_reg;
                fft_result_M_imag_a_1_reg_896_pp1_iter10_reg <= fft_result_M_imag_a_1_reg_896_pp1_iter9_reg;
                fft_result_M_imag_a_1_reg_896_pp1_iter11_reg <= fft_result_M_imag_a_1_reg_896_pp1_iter10_reg;
                fft_result_M_imag_a_1_reg_896_pp1_iter12_reg <= fft_result_M_imag_a_1_reg_896_pp1_iter11_reg;
                fft_result_M_imag_a_1_reg_896_pp1_iter13_reg <= fft_result_M_imag_a_1_reg_896_pp1_iter12_reg;
                fft_result_M_imag_a_1_reg_896_pp1_iter14_reg <= fft_result_M_imag_a_1_reg_896_pp1_iter13_reg;
                fft_result_M_imag_a_1_reg_896_pp1_iter15_reg <= fft_result_M_imag_a_1_reg_896_pp1_iter14_reg;
                fft_result_M_imag_a_1_reg_896_pp1_iter16_reg <= fft_result_M_imag_a_1_reg_896_pp1_iter15_reg;
                fft_result_M_imag_a_1_reg_896_pp1_iter17_reg <= fft_result_M_imag_a_1_reg_896_pp1_iter16_reg;
                fft_result_M_imag_a_1_reg_896_pp1_iter18_reg <= fft_result_M_imag_a_1_reg_896_pp1_iter17_reg;
                fft_result_M_imag_a_1_reg_896_pp1_iter19_reg <= fft_result_M_imag_a_1_reg_896_pp1_iter18_reg;
                fft_result_M_imag_a_1_reg_896_pp1_iter20_reg <= fft_result_M_imag_a_1_reg_896_pp1_iter19_reg;
                fft_result_M_imag_a_1_reg_896_pp1_iter21_reg <= fft_result_M_imag_a_1_reg_896_pp1_iter20_reg;
                fft_result_M_imag_a_1_reg_896_pp1_iter22_reg <= fft_result_M_imag_a_1_reg_896_pp1_iter21_reg;
                fft_result_M_imag_a_1_reg_896_pp1_iter23_reg <= fft_result_M_imag_a_1_reg_896_pp1_iter22_reg;
                fft_result_M_imag_a_1_reg_896_pp1_iter24_reg <= fft_result_M_imag_a_1_reg_896_pp1_iter23_reg;
                fft_result_M_imag_a_1_reg_896_pp1_iter2_reg <= fft_result_M_imag_a_1_reg_896_pp1_iter1_reg;
                fft_result_M_imag_a_1_reg_896_pp1_iter3_reg <= fft_result_M_imag_a_1_reg_896_pp1_iter2_reg;
                fft_result_M_imag_a_1_reg_896_pp1_iter4_reg <= fft_result_M_imag_a_1_reg_896_pp1_iter3_reg;
                fft_result_M_imag_a_1_reg_896_pp1_iter5_reg <= fft_result_M_imag_a_1_reg_896_pp1_iter4_reg;
                fft_result_M_imag_a_1_reg_896_pp1_iter6_reg <= fft_result_M_imag_a_1_reg_896_pp1_iter5_reg;
                fft_result_M_imag_a_1_reg_896_pp1_iter7_reg <= fft_result_M_imag_a_1_reg_896_pp1_iter6_reg;
                fft_result_M_imag_a_1_reg_896_pp1_iter8_reg <= fft_result_M_imag_a_1_reg_896_pp1_iter7_reg;
                fft_result_M_imag_a_1_reg_896_pp1_iter9_reg <= fft_result_M_imag_a_1_reg_896_pp1_iter8_reg;
                fft_result_M_real_a_1_reg_890_pp1_iter10_reg <= fft_result_M_real_a_1_reg_890_pp1_iter9_reg;
                fft_result_M_real_a_1_reg_890_pp1_iter11_reg <= fft_result_M_real_a_1_reg_890_pp1_iter10_reg;
                fft_result_M_real_a_1_reg_890_pp1_iter12_reg <= fft_result_M_real_a_1_reg_890_pp1_iter11_reg;
                fft_result_M_real_a_1_reg_890_pp1_iter13_reg <= fft_result_M_real_a_1_reg_890_pp1_iter12_reg;
                fft_result_M_real_a_1_reg_890_pp1_iter14_reg <= fft_result_M_real_a_1_reg_890_pp1_iter13_reg;
                fft_result_M_real_a_1_reg_890_pp1_iter15_reg <= fft_result_M_real_a_1_reg_890_pp1_iter14_reg;
                fft_result_M_real_a_1_reg_890_pp1_iter16_reg <= fft_result_M_real_a_1_reg_890_pp1_iter15_reg;
                fft_result_M_real_a_1_reg_890_pp1_iter17_reg <= fft_result_M_real_a_1_reg_890_pp1_iter16_reg;
                fft_result_M_real_a_1_reg_890_pp1_iter18_reg <= fft_result_M_real_a_1_reg_890_pp1_iter17_reg;
                fft_result_M_real_a_1_reg_890_pp1_iter19_reg <= fft_result_M_real_a_1_reg_890_pp1_iter18_reg;
                fft_result_M_real_a_1_reg_890_pp1_iter20_reg <= fft_result_M_real_a_1_reg_890_pp1_iter19_reg;
                fft_result_M_real_a_1_reg_890_pp1_iter21_reg <= fft_result_M_real_a_1_reg_890_pp1_iter20_reg;
                fft_result_M_real_a_1_reg_890_pp1_iter22_reg <= fft_result_M_real_a_1_reg_890_pp1_iter21_reg;
                fft_result_M_real_a_1_reg_890_pp1_iter23_reg <= fft_result_M_real_a_1_reg_890_pp1_iter22_reg;
                fft_result_M_real_a_1_reg_890_pp1_iter24_reg <= fft_result_M_real_a_1_reg_890_pp1_iter23_reg;
                fft_result_M_real_a_1_reg_890_pp1_iter2_reg <= fft_result_M_real_a_1_reg_890_pp1_iter1_reg;
                fft_result_M_real_a_1_reg_890_pp1_iter3_reg <= fft_result_M_real_a_1_reg_890_pp1_iter2_reg;
                fft_result_M_real_a_1_reg_890_pp1_iter4_reg <= fft_result_M_real_a_1_reg_890_pp1_iter3_reg;
                fft_result_M_real_a_1_reg_890_pp1_iter5_reg <= fft_result_M_real_a_1_reg_890_pp1_iter4_reg;
                fft_result_M_real_a_1_reg_890_pp1_iter6_reg <= fft_result_M_real_a_1_reg_890_pp1_iter5_reg;
                fft_result_M_real_a_1_reg_890_pp1_iter7_reg <= fft_result_M_real_a_1_reg_890_pp1_iter6_reg;
                fft_result_M_real_a_1_reg_890_pp1_iter8_reg <= fft_result_M_real_a_1_reg_890_pp1_iter7_reg;
                fft_result_M_real_a_1_reg_890_pp1_iter9_reg <= fft_result_M_real_a_1_reg_890_pp1_iter8_reg;
                icmp_ln27_reg_861_pp1_iter10_reg <= icmp_ln27_reg_861_pp1_iter9_reg;
                icmp_ln27_reg_861_pp1_iter11_reg <= icmp_ln27_reg_861_pp1_iter10_reg;
                icmp_ln27_reg_861_pp1_iter12_reg <= icmp_ln27_reg_861_pp1_iter11_reg;
                icmp_ln27_reg_861_pp1_iter13_reg <= icmp_ln27_reg_861_pp1_iter12_reg;
                icmp_ln27_reg_861_pp1_iter14_reg <= icmp_ln27_reg_861_pp1_iter13_reg;
                icmp_ln27_reg_861_pp1_iter15_reg <= icmp_ln27_reg_861_pp1_iter14_reg;
                icmp_ln27_reg_861_pp1_iter16_reg <= icmp_ln27_reg_861_pp1_iter15_reg;
                icmp_ln27_reg_861_pp1_iter17_reg <= icmp_ln27_reg_861_pp1_iter16_reg;
                icmp_ln27_reg_861_pp1_iter18_reg <= icmp_ln27_reg_861_pp1_iter17_reg;
                icmp_ln27_reg_861_pp1_iter19_reg <= icmp_ln27_reg_861_pp1_iter18_reg;
                icmp_ln27_reg_861_pp1_iter20_reg <= icmp_ln27_reg_861_pp1_iter19_reg;
                icmp_ln27_reg_861_pp1_iter21_reg <= icmp_ln27_reg_861_pp1_iter20_reg;
                icmp_ln27_reg_861_pp1_iter22_reg <= icmp_ln27_reg_861_pp1_iter21_reg;
                icmp_ln27_reg_861_pp1_iter23_reg <= icmp_ln27_reg_861_pp1_iter22_reg;
                icmp_ln27_reg_861_pp1_iter24_reg <= icmp_ln27_reg_861_pp1_iter23_reg;
                icmp_ln27_reg_861_pp1_iter2_reg <= icmp_ln27_reg_861_pp1_iter1_reg;
                icmp_ln27_reg_861_pp1_iter3_reg <= icmp_ln27_reg_861_pp1_iter2_reg;
                icmp_ln27_reg_861_pp1_iter4_reg <= icmp_ln27_reg_861_pp1_iter3_reg;
                icmp_ln27_reg_861_pp1_iter5_reg <= icmp_ln27_reg_861_pp1_iter4_reg;
                icmp_ln27_reg_861_pp1_iter6_reg <= icmp_ln27_reg_861_pp1_iter5_reg;
                icmp_ln27_reg_861_pp1_iter7_reg <= icmp_ln27_reg_861_pp1_iter6_reg;
                icmp_ln27_reg_861_pp1_iter8_reg <= icmp_ln27_reg_861_pp1_iter7_reg;
                icmp_ln27_reg_861_pp1_iter9_reg <= icmp_ln27_reg_861_pp1_iter8_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter9 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                ap_phi_reg_pp1_iter10_p_i_assign_reg_374 <= ap_phi_reg_pp1_iter9_p_i_assign_reg_374;
                ap_phi_reg_pp1_iter10_p_r_assign_reg_362 <= ap_phi_reg_pp1_iter9_p_r_assign_reg_362;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter10 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                ap_phi_reg_pp1_iter11_p_i_assign_reg_374 <= ap_phi_reg_pp1_iter10_p_i_assign_reg_374;
                ap_phi_reg_pp1_iter11_p_r_assign_reg_362 <= ap_phi_reg_pp1_iter10_p_r_assign_reg_362;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter11 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                ap_phi_reg_pp1_iter12_p_i_assign_reg_374 <= ap_phi_reg_pp1_iter11_p_i_assign_reg_374;
                ap_phi_reg_pp1_iter12_p_r_assign_reg_362 <= ap_phi_reg_pp1_iter11_p_r_assign_reg_362;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                ap_phi_reg_pp1_iter13_p_i_assign_reg_374 <= ap_phi_reg_pp1_iter12_p_i_assign_reg_374;
                ap_phi_reg_pp1_iter13_p_r_assign_reg_362 <= ap_phi_reg_pp1_iter12_p_r_assign_reg_362;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter13 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                ap_phi_reg_pp1_iter14_p_i_assign_reg_374 <= ap_phi_reg_pp1_iter13_p_i_assign_reg_374;
                ap_phi_reg_pp1_iter14_p_r_assign_reg_362 <= ap_phi_reg_pp1_iter13_p_r_assign_reg_362;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter14 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                ap_phi_reg_pp1_iter15_p_i_assign_reg_374 <= ap_phi_reg_pp1_iter14_p_i_assign_reg_374;
                ap_phi_reg_pp1_iter15_p_r_assign_reg_362 <= ap_phi_reg_pp1_iter14_p_r_assign_reg_362;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter15 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                ap_phi_reg_pp1_iter16_p_i_assign_reg_374 <= ap_phi_reg_pp1_iter15_p_i_assign_reg_374;
                ap_phi_reg_pp1_iter16_p_r_assign_reg_362 <= ap_phi_reg_pp1_iter15_p_r_assign_reg_362;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter16 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                ap_phi_reg_pp1_iter17_p_i_assign_reg_374 <= ap_phi_reg_pp1_iter16_p_i_assign_reg_374;
                ap_phi_reg_pp1_iter17_p_r_assign_reg_362 <= ap_phi_reg_pp1_iter16_p_r_assign_reg_362;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter17 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                ap_phi_reg_pp1_iter18_p_i_assign_reg_374 <= ap_phi_reg_pp1_iter17_p_i_assign_reg_374;
                ap_phi_reg_pp1_iter18_p_r_assign_reg_362 <= ap_phi_reg_pp1_iter17_p_r_assign_reg_362;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter18 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                ap_phi_reg_pp1_iter19_p_i_assign_reg_374 <= ap_phi_reg_pp1_iter18_p_i_assign_reg_374;
                ap_phi_reg_pp1_iter19_p_r_assign_reg_362 <= ap_phi_reg_pp1_iter18_p_r_assign_reg_362;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                ap_phi_reg_pp1_iter1_p_i_assign_reg_374 <= ap_phi_reg_pp1_iter0_p_i_assign_reg_374;
                ap_phi_reg_pp1_iter1_p_r_assign_reg_362 <= ap_phi_reg_pp1_iter0_p_r_assign_reg_362;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter19 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                ap_phi_reg_pp1_iter20_p_i_assign_reg_374 <= ap_phi_reg_pp1_iter19_p_i_assign_reg_374;
                ap_phi_reg_pp1_iter20_p_r_assign_reg_362 <= ap_phi_reg_pp1_iter19_p_r_assign_reg_362;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter20 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                ap_phi_reg_pp1_iter21_p_i_assign_reg_374 <= ap_phi_reg_pp1_iter20_p_i_assign_reg_374;
                ap_phi_reg_pp1_iter21_p_r_assign_reg_362 <= ap_phi_reg_pp1_iter20_p_r_assign_reg_362;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter21 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                ap_phi_reg_pp1_iter22_p_i_assign_reg_374 <= ap_phi_reg_pp1_iter21_p_i_assign_reg_374;
                ap_phi_reg_pp1_iter22_p_r_assign_reg_362 <= ap_phi_reg_pp1_iter21_p_r_assign_reg_362;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter22 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                ap_phi_reg_pp1_iter23_p_i_assign_reg_374 <= ap_phi_reg_pp1_iter22_p_i_assign_reg_374;
                ap_phi_reg_pp1_iter23_p_r_assign_reg_362 <= ap_phi_reg_pp1_iter22_p_r_assign_reg_362;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter23 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                ap_phi_reg_pp1_iter24_p_i_assign_reg_374 <= ap_phi_reg_pp1_iter23_p_i_assign_reg_374;
                ap_phi_reg_pp1_iter24_p_r_assign_reg_362 <= ap_phi_reg_pp1_iter23_p_r_assign_reg_362;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                ap_phi_reg_pp1_iter2_p_i_assign_reg_374 <= ap_phi_reg_pp1_iter1_p_i_assign_reg_374;
                ap_phi_reg_pp1_iter2_p_r_assign_reg_362 <= ap_phi_reg_pp1_iter1_p_r_assign_reg_362;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                ap_phi_reg_pp1_iter4_p_i_assign_reg_374 <= ap_phi_reg_pp1_iter3_p_i_assign_reg_374;
                ap_phi_reg_pp1_iter4_p_r_assign_reg_362 <= ap_phi_reg_pp1_iter3_p_r_assign_reg_362;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                ap_phi_reg_pp1_iter5_p_i_assign_reg_374 <= ap_phi_reg_pp1_iter4_p_i_assign_reg_374;
                ap_phi_reg_pp1_iter5_p_r_assign_reg_362 <= ap_phi_reg_pp1_iter4_p_r_assign_reg_362;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                ap_phi_reg_pp1_iter6_p_i_assign_reg_374 <= ap_phi_reg_pp1_iter5_p_i_assign_reg_374;
                ap_phi_reg_pp1_iter6_p_r_assign_reg_362 <= ap_phi_reg_pp1_iter5_p_r_assign_reg_362;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                ap_phi_reg_pp1_iter7_p_i_assign_reg_374 <= ap_phi_reg_pp1_iter6_p_i_assign_reg_374;
                ap_phi_reg_pp1_iter7_p_r_assign_reg_362 <= ap_phi_reg_pp1_iter6_p_r_assign_reg_362;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter7 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                ap_phi_reg_pp1_iter8_p_i_assign_reg_374 <= ap_phi_reg_pp1_iter7_p_i_assign_reg_374;
                ap_phi_reg_pp1_iter8_p_r_assign_reg_362 <= ap_phi_reg_pp1_iter7_p_r_assign_reg_362;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter8 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                ap_phi_reg_pp1_iter9_p_i_assign_reg_374 <= ap_phi_reg_pp1_iter8_p_i_assign_reg_374;
                ap_phi_reg_pp1_iter9_p_r_assign_reg_362 <= ap_phi_reg_pp1_iter8_p_r_assign_reg_362;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln27_fu_607_p2 = ap_const_lv1_0))) then
                coe_a_M_imag_addr_reg_880 <= zext_ln1044_1_fu_669_p1(14 - 1 downto 0);
                coe_a_M_real_addr_reg_875 <= zext_ln1044_1_fu_669_p1(14 - 1 downto 0);
                fft_result_M_imag_a_1_reg_896 <= zext_ln1044_1_fu_669_p1(14 - 1 downto 0);
                fft_result_M_real_a_1_reg_890 <= zext_ln1044_1_fu_669_p1(14 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                coe_a_M_imag_addr_reg_880_pp1_iter1_reg <= coe_a_M_imag_addr_reg_880;
                coe_a_M_real_addr_reg_875_pp1_iter1_reg <= coe_a_M_real_addr_reg_875;
                fft_result_M_imag_a_1_reg_896_pp1_iter1_reg <= fft_result_M_imag_a_1_reg_896;
                fft_result_M_real_a_1_reg_890_pp1_iter1_reg <= fft_result_M_real_a_1_reg_890;
                icmp_ln27_reg_861 <= icmp_ln27_fu_607_p2;
                icmp_ln27_reg_861_pp1_iter1_reg <= icmp_ln27_reg_861;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_lv1_0 = and_ln33_reg_915) and (icmp_ln27_reg_861_pp1_iter2_reg = ap_const_lv1_0))) then
                coe_a_M_imag_load_reg_934 <= coe_a_M_imag_q0;
                coe_a_M_real_load_reg_924 <= coe_a_M_real_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln27_reg_861 = ap_const_lv1_0))) then
                coe_b_load_reg_907 <= coe_b_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_lv1_0 = and_ln33_reg_915) and (icmp_ln27_reg_861_pp1_iter2_reg = ap_const_lv1_0))) then
                fft_result_M_imag_l_reg_929 <= fft_result_M_imag_q0;
                fft_result_M_real_l_reg_919 <= fft_result_M_real_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln56_reg_832 <= icmp_ln56_fu_533_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then
                icmp_ln70_reg_959 <= icmp_ln70_fu_725_p2;
                icmp_ln70_reg_959_pp2_iter1_reg <= icmp_ln70_reg_959;
                    zext_ln77_1_reg_973_pp2_iter1_reg(15 downto 0) <= zext_ln77_1_reg_973(15 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp2_stage0_11001)) then
                icmp_ln70_reg_959_pp2_iter2_reg <= icmp_ln70_reg_959_pp2_iter1_reg;
                icmp_ln70_reg_959_pp2_iter3_reg <= icmp_ln70_reg_959_pp2_iter2_reg;
                icmp_ln70_reg_959_pp2_iter4_reg <= icmp_ln70_reg_959_pp2_iter3_reg;
                icmp_ln70_reg_959_pp2_iter5_reg <= icmp_ln70_reg_959_pp2_iter4_reg;
                    zext_ln77_1_reg_973_pp2_iter2_reg(15 downto 0) <= zext_ln77_1_reg_973_pp2_iter1_reg(15 downto 0);
                    zext_ln77_1_reg_973_pp2_iter3_reg(15 downto 0) <= zext_ln77_1_reg_973_pp2_iter2_reg(15 downto 0);
                    zext_ln77_1_reg_973_pp2_iter4_reg(15 downto 0) <= zext_ln77_1_reg_973_pp2_iter3_reg(15 downto 0);
                    zext_ln77_1_reg_973_pp2_iter5_reg(15 downto 0) <= zext_ln77_1_reg_973_pp2_iter4_reg(15 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln27_fu_607_p2 = ap_const_lv1_0))) then
                select_ln33_1_reg_870 <= select_ln33_1_fu_639_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln56_fu_533_p2 = ap_const_lv1_0))) then
                select_ln61_1_reg_841 <= select_ln61_1_fu_565_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln70_fu_725_p2 = ap_const_lv1_0))) then
                select_ln77_1_reg_968 <= select_ln77_1_fu_757_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_lv1_0 = and_ln33_reg_915_pp1_iter7_reg) and (icmp_ln27_reg_861_pp1_iter7_reg = ap_const_lv1_0))) then
                tmp_136_reg_944 <= grp_fu_434_p2;
                tmp_s_reg_939 <= grp_fu_430_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln70_reg_959 = ap_const_lv1_0))) then
                tmp_M_real_load_reg_988 <= tmp_M_real_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (icmp_ln70_reg_959_pp2_iter4_reg = ap_const_lv1_0))) then
                tmp_i1_reg_993 <= grp_fu_438_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln56_fu_533_p2 = ap_const_lv1_0))) then
                    zext_ln61_1_reg_846(15 downto 0) <= zext_ln61_1_fu_595_p1(15 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln70_fu_725_p2 = ap_const_lv1_0))) then
                    zext_ln77_1_reg_973(15 downto 0) <= zext_ln77_1_fu_787_p1(15 downto 0);
            end if;
        end if;
    end process;
    zext_ln61_1_reg_846(63 downto 16) <= "000000000000000000000000000000000000000000000000";
    zext_ln77_1_reg_973(63 downto 16) <= "000000000000000000000000000000000000000000000000";
    zext_ln77_1_reg_973_pp2_iter1_reg(63 downto 16) <= "000000000000000000000000000000000000000000000000";
    zext_ln77_1_reg_973_pp2_iter2_reg(63 downto 16) <= "000000000000000000000000000000000000000000000000";
    zext_ln77_1_reg_973_pp2_iter3_reg(63 downto 16) <= "000000000000000000000000000000000000000000000000";
    zext_ln77_1_reg_973_pp2_iter4_reg(63 downto 16) <= "000000000000000000000000000000000000000000000000";
    zext_ln77_1_reg_973_pp2_iter5_reg(63 downto 16) <= "000000000000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state3, ap_CS_fsm_state5, icmp_ln14_2_fu_521_p2, icmp_ln14_3_fu_527_p2, icmp_ln56_fu_533_p2, ap_enable_reg_pp0_iter0, icmp_ln27_fu_607_p2, ap_enable_reg_pp1_iter0, icmp_ln70_fu_725_p2, ap_enable_reg_pp2_iter0, ap_enable_reg_pp2_iter1, ap_block_pp0_stage0_subdone, ap_CS_fsm_state9, grp_fft_top_2D_fu_419_ap_done, ap_block_pp1_stage0_subdone, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter24, ap_enable_reg_pp1_iter25, ap_CS_fsm_state37, ap_block_pp2_stage0_subdone, ap_enable_reg_pp2_iter5, ap_enable_reg_pp2_iter6, icmp_ln14_fu_483_p2, icmp_ln14_1_fu_489_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln14_1_fu_489_p2 = ap_const_lv1_1) and (icmp_ln14_fu_483_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln14_1_fu_489_p2 = ap_const_lv1_0) and (icmp_ln14_fu_483_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln14_3_fu_527_p2 = ap_const_lv1_1) and (icmp_ln14_2_fu_521_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln14_3_fu_527_p2 = ap_const_lv1_0) and (icmp_ln14_2_fu_521_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if (not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln56_fu_533_p2 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln56_fu_533_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                if (((grp_fft_top_2D_fu_419_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_pp1_stage0 => 
                if ((not(((ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln27_fu_607_p2 = ap_const_lv1_1))) and not(((ap_enable_reg_pp1_iter24 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter25 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif ((((ap_enable_reg_pp1_iter24 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter25 = ap_const_logic_1)) or ((ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln27_fu_607_p2 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state36;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_state36 => 
                ap_NS_fsm <= ap_ST_fsm_state37;
            when ap_ST_fsm_state37 => 
                if (((grp_fft_top_2D_fu_419_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state37))) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state37;
                end if;
            when ap_ST_fsm_pp2_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (icmp_ln70_fu_725_p2 = ap_const_lv1_1))) and not(((ap_enable_reg_pp2_iter5 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_enable_reg_pp2_iter6 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                elsif ((((ap_enable_reg_pp2_iter5 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_enable_reg_pp2_iter6 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (icmp_ln70_fu_725_p2 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state45;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                end if;
            when ap_ST_fsm_state45 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXX";
        end case;
    end process;
    add_ln1044_fu_663_p2 <= std_logic_vector(unsigned(zext_ln30_fu_655_p1) + unsigned(zext_ln1044_fu_659_p1));
    add_ln14_1_fu_463_p2 <= std_logic_vector(unsigned(phi_ln14_1_reg_262) + unsigned(ap_const_lv7_1));
    add_ln14_2_fu_495_p2 <= std_logic_vector(unsigned(phi_ln14_2_reg_273) + unsigned(ap_const_lv7_1));
    add_ln14_3_fu_501_p2 <= std_logic_vector(unsigned(phi_ln14_3_reg_285) + unsigned(ap_const_lv7_1));
    add_ln14_fu_457_p2 <= std_logic_vector(unsigned(phi_ln14_reg_250) + unsigned(ap_const_lv7_1));
    add_ln27_fu_613_p2 <= std_logic_vector(unsigned(indvar_flatten11_reg_329) + unsigned(ap_const_lv15_1));
    add_ln56_fu_539_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_296) + unsigned(ap_const_lv15_1));
    add_ln61_fu_589_p2 <= std_logic_vector(unsigned(zext_ln61_fu_585_p1) + unsigned(zext_ln59_fu_581_p1));
    add_ln70_fu_731_p2 <= std_logic_vector(unsigned(indvar_flatten23_reg_386) + unsigned(ap_const_lv15_1));
    add_ln77_fu_781_p2 <= std_logic_vector(unsigned(zext_ln77_fu_777_p1) + unsigned(zext_ln73_fu_773_p1));
    and_ln33_fu_719_p2 <= (or_ln33_fu_713_p2 and grp_fu_451_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(5);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(8);
    ap_CS_fsm_pp2_stage0 <= ap_CS_fsm(11);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state36 <= ap_CS_fsm(9);
    ap_CS_fsm_state37 <= ap_CS_fsm(10);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state45 <= ap_CS_fsm(12);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state8 <= ap_CS_fsm(6);
    ap_CS_fsm_state9 <= ap_CS_fsm(7);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp1_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp1_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp1_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp1_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp1_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp1_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp1_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp1_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp1_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp1_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp1_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp1_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp1_stage0_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp1_stage0_iter14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp1_stage0_iter15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp1_stage0_iter16 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp1_stage0_iter17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp1_stage0_iter18 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp1_stage0_iter19 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state30_pp1_stage0_iter20 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state31_pp1_stage0_iter21 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state32_pp1_stage0_iter22 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state33_pp1_stage0_iter23 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state34_pp1_stage0_iter24 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state35_pp1_stage0_iter25 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state38_pp2_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state39_pp2_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state40_pp2_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state41_pp2_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state42_pp2_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state43_pp2_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state44_pp2_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state6_assign_proc : process(icmp_ln56_fu_533_p2)
    begin
        if ((icmp_ln56_fu_533_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state6 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state6 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp1_exit_iter0_state10_assign_proc : process(icmp_ln27_fu_607_p2)
    begin
        if ((icmp_ln27_fu_607_p2 = ap_const_lv1_1)) then 
            ap_condition_pp1_exit_iter0_state10 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter0_state10 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp2_exit_iter0_state38_assign_proc : process(icmp_ln70_fu_725_p2)
    begin
        if ((icmp_ln70_fu_725_p2 = ap_const_lv1_1)) then 
            ap_condition_pp2_exit_iter0_state38 <= ap_const_logic_1;
        else 
            ap_condition_pp2_exit_iter0_state38 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state45)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state45) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);
    ap_enable_pp2 <= (ap_idle_pp2 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter3, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter2, ap_enable_reg_pp1_iter4, ap_enable_reg_pp1_iter5, ap_enable_reg_pp1_iter6, ap_enable_reg_pp1_iter7, ap_enable_reg_pp1_iter8, ap_enable_reg_pp1_iter9, ap_enable_reg_pp1_iter10, ap_enable_reg_pp1_iter11, ap_enable_reg_pp1_iter12, ap_enable_reg_pp1_iter13, ap_enable_reg_pp1_iter14, ap_enable_reg_pp1_iter15, ap_enable_reg_pp1_iter16, ap_enable_reg_pp1_iter17, ap_enable_reg_pp1_iter18, ap_enable_reg_pp1_iter19, ap_enable_reg_pp1_iter20, ap_enable_reg_pp1_iter21, ap_enable_reg_pp1_iter22, ap_enable_reg_pp1_iter23, ap_enable_reg_pp1_iter24, ap_enable_reg_pp1_iter25)
    begin
        if (((ap_enable_reg_pp1_iter25 = ap_const_logic_0) and (ap_enable_reg_pp1_iter24 = ap_const_logic_0) and (ap_enable_reg_pp1_iter23 = ap_const_logic_0) and (ap_enable_reg_pp1_iter22 = ap_const_logic_0) and (ap_enable_reg_pp1_iter21 = ap_const_logic_0) and (ap_enable_reg_pp1_iter20 = ap_const_logic_0) and (ap_enable_reg_pp1_iter19 = ap_const_logic_0) and (ap_enable_reg_pp1_iter18 = ap_const_logic_0) and (ap_enable_reg_pp1_iter17 = ap_const_logic_0) and (ap_enable_reg_pp1_iter16 = ap_const_logic_0) and (ap_enable_reg_pp1_iter15 = ap_const_logic_0) and (ap_enable_reg_pp1_iter14 = ap_const_logic_0) and (ap_enable_reg_pp1_iter13 = ap_const_logic_0) and (ap_enable_reg_pp1_iter12 = ap_const_logic_0) and (ap_enable_reg_pp1_iter11 = ap_const_logic_0) and (ap_enable_reg_pp1_iter10 = ap_const_logic_0) and (ap_enable_reg_pp1_iter9 = ap_const_logic_0) and (ap_enable_reg_pp1_iter8 = ap_const_logic_0) and (ap_enable_reg_pp1_iter7 = ap_const_logic_0) and (ap_enable_reg_pp1_iter6 = ap_const_logic_0) and (ap_enable_reg_pp1_iter5 = ap_const_logic_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp2_assign_proc : process(ap_enable_reg_pp2_iter0, ap_enable_reg_pp2_iter1, ap_enable_reg_pp2_iter2, ap_enable_reg_pp2_iter3, ap_enable_reg_pp2_iter4, ap_enable_reg_pp2_iter5, ap_enable_reg_pp2_iter6)
    begin
        if (((ap_enable_reg_pp2_iter6 = ap_const_logic_0) and (ap_enable_reg_pp2_iter5 = ap_const_logic_0) and (ap_enable_reg_pp2_iter4 = ap_const_logic_0) and (ap_enable_reg_pp2_iter3 = ap_const_logic_0) and (ap_enable_reg_pp2_iter2 = ap_const_logic_0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_0))) then 
            ap_idle_pp2 <= ap_const_logic_1;
        else 
            ap_idle_pp2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_y_0_i9_phi_fu_401_p4_assign_proc : process(y_0_i9_reg_397, icmp_ln70_reg_959, ap_CS_fsm_pp2_stage0, select_ln77_1_reg_968, ap_enable_reg_pp2_iter1, ap_block_pp2_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln70_reg_959 = ap_const_lv1_0))) then 
            ap_phi_mux_y_0_i9_phi_fu_401_p4 <= select_ln77_1_reg_968;
        else 
            ap_phi_mux_y_0_i9_phi_fu_401_p4 <= y_0_i9_reg_397;
        end if; 
    end process;


    ap_phi_mux_y_0_i_phi_fu_311_p4_assign_proc : process(y_0_i_reg_307, icmp_ln56_reg_832, ap_CS_fsm_pp0_stage0, select_ln61_1_reg_841, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln56_reg_832 = ap_const_lv1_0))) then 
            ap_phi_mux_y_0_i_phi_fu_311_p4 <= select_ln61_1_reg_841;
        else 
            ap_phi_mux_y_0_i_phi_fu_311_p4 <= y_0_i_reg_307;
        end if; 
    end process;


    ap_phi_mux_y_0_phi_fu_344_p4_assign_proc : process(y_0_reg_340, icmp_ln27_reg_861, ap_CS_fsm_pp1_stage0, select_ln33_1_reg_870, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln27_reg_861 = ap_const_lv1_0))) then 
            ap_phi_mux_y_0_phi_fu_344_p4 <= select_ln33_1_reg_870;
        else 
            ap_phi_mux_y_0_phi_fu_344_p4 <= y_0_reg_340;
        end if; 
    end process;

    ap_phi_reg_pp1_iter0_p_i_assign_reg_374 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_p_r_assign_reg_362 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";

    ap_ready_assign_proc : process(ap_CS_fsm_state45)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    bitcast_ln33_fu_684_p1 <= coe_b_load_reg_907;
    coe_a_M_imag_address0 <= coe_a_M_imag_addr_reg_880_pp1_iter1_reg;

    coe_a_M_imag_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter2)
    begin
        if (((ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            coe_a_M_imag_ce0 <= ap_const_logic_1;
        else 
            coe_a_M_imag_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    coe_a_M_real_address0 <= coe_a_M_real_addr_reg_875_pp1_iter1_reg;

    coe_a_M_real_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter2)
    begin
        if (((ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            coe_a_M_real_ce0 <= ap_const_logic_1;
        else 
            coe_a_M_real_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    coe_b_address0 <= zext_ln1044_1_fu_669_p1(14 - 1 downto 0);

    coe_b_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter0)
    begin
        if (((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            coe_b_ce0 <= ap_const_logic_1;
        else 
            coe_b_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    fft_result_M_imag_address0_assign_proc : process(ap_CS_fsm_state5, fft_result_M_imag_a_1_reg_896_pp1_iter1_reg, ap_CS_fsm_state9, ap_enable_reg_pp1_iter2, ap_CS_fsm_state37, grp_fft_top_2D_fu_419_in_M_imag_address0, grp_fft_top_2D_fu_419_out_M_imag_address0, ap_block_pp1_stage0, zext_ln1027_1_fu_515_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            fft_result_M_imag_address0 <= fft_result_M_imag_a_1_reg_896_pp1_iter1_reg;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            fft_result_M_imag_address0 <= zext_ln1027_1_fu_515_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            fft_result_M_imag_address0 <= grp_fft_top_2D_fu_419_out_M_imag_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            fft_result_M_imag_address0 <= grp_fft_top_2D_fu_419_in_M_imag_address0;
        else 
            fft_result_M_imag_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    fft_result_M_imag_ce0_assign_proc : process(ap_CS_fsm_state5, ap_block_pp1_stage0_11001, ap_CS_fsm_state9, ap_enable_reg_pp1_iter2, ap_CS_fsm_state37, grp_fft_top_2D_fu_419_in_M_imag_ce0, grp_fft_top_2D_fu_419_out_M_imag_ce0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or ((ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            fft_result_M_imag_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            fft_result_M_imag_ce0 <= grp_fft_top_2D_fu_419_out_M_imag_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            fft_result_M_imag_ce0 <= grp_fft_top_2D_fu_419_in_M_imag_ce0;
        else 
            fft_result_M_imag_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    fft_result_M_imag_ce1_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter25)
    begin
        if (((ap_enable_reg_pp1_iter25 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            fft_result_M_imag_ce1 <= ap_const_logic_1;
        else 
            fft_result_M_imag_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    fft_result_M_imag_d0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state9, grp_fft_top_2D_fu_419_out_M_imag_d0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            fft_result_M_imag_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            fft_result_M_imag_d0 <= grp_fft_top_2D_fu_419_out_M_imag_d0;
        else 
            fft_result_M_imag_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    fft_result_M_imag_we0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state9, grp_fft_top_2D_fu_419_out_M_imag_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            fft_result_M_imag_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            fft_result_M_imag_we0 <= grp_fft_top_2D_fu_419_out_M_imag_we0;
        else 
            fft_result_M_imag_we0 <= ap_const_logic_0;
        end if; 
    end process;


    fft_result_M_imag_we1_assign_proc : process(ap_block_pp1_stage0_11001, icmp_ln27_reg_861_pp1_iter24_reg, ap_enable_reg_pp1_iter25)
    begin
        if (((ap_enable_reg_pp1_iter25 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln27_reg_861_pp1_iter24_reg = ap_const_lv1_0))) then 
            fft_result_M_imag_we1 <= ap_const_logic_1;
        else 
            fft_result_M_imag_we1 <= ap_const_logic_0;
        end if; 
    end process;


    fft_result_M_real_address0_assign_proc : process(ap_CS_fsm_state5, fft_result_M_real_a_1_reg_890_pp1_iter1_reg, ap_CS_fsm_state9, ap_enable_reg_pp1_iter2, ap_CS_fsm_state37, grp_fft_top_2D_fu_419_in_M_real_address0, grp_fft_top_2D_fu_419_out_M_real_address0, ap_block_pp1_stage0, zext_ln1027_1_fu_515_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            fft_result_M_real_address0 <= fft_result_M_real_a_1_reg_890_pp1_iter1_reg;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            fft_result_M_real_address0 <= zext_ln1027_1_fu_515_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            fft_result_M_real_address0 <= grp_fft_top_2D_fu_419_out_M_real_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            fft_result_M_real_address0 <= grp_fft_top_2D_fu_419_in_M_real_address0;
        else 
            fft_result_M_real_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    fft_result_M_real_ce0_assign_proc : process(ap_CS_fsm_state5, ap_block_pp1_stage0_11001, ap_CS_fsm_state9, ap_enable_reg_pp1_iter2, ap_CS_fsm_state37, grp_fft_top_2D_fu_419_in_M_real_ce0, grp_fft_top_2D_fu_419_out_M_real_ce0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or ((ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            fft_result_M_real_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            fft_result_M_real_ce0 <= grp_fft_top_2D_fu_419_out_M_real_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            fft_result_M_real_ce0 <= grp_fft_top_2D_fu_419_in_M_real_ce0;
        else 
            fft_result_M_real_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    fft_result_M_real_ce1_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter25)
    begin
        if (((ap_enable_reg_pp1_iter25 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            fft_result_M_real_ce1 <= ap_const_logic_1;
        else 
            fft_result_M_real_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    fft_result_M_real_d0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state9, grp_fft_top_2D_fu_419_out_M_real_d0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            fft_result_M_real_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            fft_result_M_real_d0 <= grp_fft_top_2D_fu_419_out_M_real_d0;
        else 
            fft_result_M_real_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    fft_result_M_real_we0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state9, grp_fft_top_2D_fu_419_out_M_real_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            fft_result_M_real_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            fft_result_M_real_we0 <= grp_fft_top_2D_fu_419_out_M_real_we0;
        else 
            fft_result_M_real_we0 <= ap_const_logic_0;
        end if; 
    end process;


    fft_result_M_real_we1_assign_proc : process(ap_block_pp1_stage0_11001, icmp_ln27_reg_861_pp1_iter24_reg, ap_enable_reg_pp1_iter25)
    begin
        if (((ap_enable_reg_pp1_iter25 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln27_reg_861_pp1_iter24_reg = ap_const_lv1_0))) then 
            fft_result_M_real_we1 <= ap_const_logic_1;
        else 
            fft_result_M_real_we1 <= ap_const_logic_0;
        end if; 
    end process;

    grp_fft_top_2D_fu_419_ap_start <= grp_fft_top_2D_fu_419_ap_start_reg;

    grp_fft_top_2D_fu_419_direction_assign_proc : process(ap_CS_fsm_state9, ap_CS_fsm_state37)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            grp_fft_top_2D_fu_419_direction <= ap_const_logic_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_fft_top_2D_fu_419_direction <= ap_const_logic_1;
        else 
            grp_fft_top_2D_fu_419_direction <= 'X';
        end if; 
    end process;


    grp_fft_top_2D_fu_419_in_M_imag_q0_assign_proc : process(fft_result_M_imag_q0, ap_CS_fsm_state9, ap_CS_fsm_state37, tmp_M_imag_q0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            grp_fft_top_2D_fu_419_in_M_imag_q0 <= fft_result_M_imag_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_fft_top_2D_fu_419_in_M_imag_q0 <= tmp_M_imag_q0;
        else 
            grp_fft_top_2D_fu_419_in_M_imag_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fft_top_2D_fu_419_in_M_real_q0_assign_proc : process(fft_result_M_real_q0, tmp_M_real_q0, ap_CS_fsm_state9, ap_CS_fsm_state37)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            grp_fft_top_2D_fu_419_in_M_real_q0 <= fft_result_M_real_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_fft_top_2D_fu_419_in_M_real_q0 <= tmp_M_real_q0;
        else 
            grp_fft_top_2D_fu_419_in_M_real_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    icmp_ln14_1_fu_489_p2 <= "1" when (phi_ln14_reg_250 = ap_const_lv7_7F) else "0";
    icmp_ln14_2_fu_521_p2 <= "1" when (phi_ln14_3_reg_285 = ap_const_lv7_7F) else "0";
    icmp_ln14_3_fu_527_p2 <= "1" when (phi_ln14_2_reg_273 = ap_const_lv7_7F) else "0";
    icmp_ln14_fu_483_p2 <= "1" when (phi_ln14_1_reg_262 = ap_const_lv7_7F) else "0";
    icmp_ln27_fu_607_p2 <= "1" when (indvar_flatten11_reg_329 = ap_const_lv15_4000) else "0";
    icmp_ln29_fu_625_p2 <= "1" when (x_0_reg_351 = ap_const_lv8_80) else "0";
    icmp_ln33_1_fu_707_p2 <= "1" when (trunc_ln33_fu_697_p1 = ap_const_lv23_0) else "0";
    icmp_ln33_fu_701_p2 <= "0" when (tmp_137_fu_687_p4 = ap_const_lv8_FF) else "1";
    icmp_ln56_fu_533_p2 <= "1" when (indvar_flatten_reg_296 = ap_const_lv15_4000) else "0";
    icmp_ln58_fu_551_p2 <= "1" when (x_0_i_reg_318 = ap_const_lv8_80) else "0";
    icmp_ln70_fu_725_p2 <= "1" when (indvar_flatten23_reg_386 = ap_const_lv15_4000) else "0";
    icmp_ln72_fu_743_p2 <= "1" when (x_0_i10_reg_408 = ap_const_lv8_80) else "0";
    or_ln33_fu_713_p2 <= (icmp_ln33_fu_701_p2 or icmp_ln33_1_fu_707_p2);
    select_ln33_1_fu_639_p3 <= 
        y_fu_619_p2 when (icmp_ln29_fu_625_p2(0) = '1') else 
        ap_phi_mux_y_0_phi_fu_344_p4;
    select_ln33_fu_631_p3 <= 
        ap_const_lv8_0 when (icmp_ln29_fu_625_p2(0) = '1') else 
        x_0_reg_351;
    select_ln61_1_fu_565_p3 <= 
        y_1_fu_545_p2 when (icmp_ln58_fu_551_p2(0) = '1') else 
        ap_phi_mux_y_0_i_phi_fu_311_p4;
    select_ln61_fu_557_p3 <= 
        ap_const_lv8_0 when (icmp_ln58_fu_551_p2(0) = '1') else 
        x_0_i_reg_318;
    select_ln77_1_fu_757_p3 <= 
        y_2_fu_737_p2 when (icmp_ln72_fu_743_p2(0) = '1') else 
        ap_phi_mux_y_0_i9_phi_fu_401_p4;
    select_ln77_fu_749_p3 <= 
        ap_const_lv8_0 when (icmp_ln72_fu_743_p2(0) = '1') else 
        x_0_i10_reg_408;
    tmp_137_fu_687_p4 <= bitcast_ln33_fu_684_p1(30 downto 23);
    tmp_141_fu_507_p3 <= (phi_ln14_2_reg_273 & phi_ln14_3_reg_285);
    tmp_144_fu_573_p3 <= (select_ln61_1_fu_565_p3 & ap_const_lv7_0);
    tmp_145_fu_647_p3 <= (select_ln33_1_fu_639_p3 & ap_const_lv7_0);
    tmp_146_fu_765_p3 <= (select_ln77_1_fu_757_p3 & ap_const_lv7_0);

    tmp_M_imag_address0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, zext_ln61_1_fu_595_p1, ap_CS_fsm_state9, ap_CS_fsm_state37, grp_fft_top_2D_fu_419_in_M_imag_address0, grp_fft_top_2D_fu_419_out_M_imag_address0, ap_block_pp0_stage0, zext_ln1027_fu_477_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            tmp_M_imag_address0 <= zext_ln61_1_fu_595_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            tmp_M_imag_address0 <= zext_ln1027_fu_477_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            tmp_M_imag_address0 <= grp_fft_top_2D_fu_419_out_M_imag_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            tmp_M_imag_address0 <= grp_fft_top_2D_fu_419_in_M_imag_address0;
        else 
            tmp_M_imag_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    tmp_M_imag_ce0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_state9, ap_CS_fsm_state37, grp_fft_top_2D_fu_419_in_M_imag_ce0, grp_fft_top_2D_fu_419_out_M_imag_ce0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            tmp_M_imag_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            tmp_M_imag_ce0 <= grp_fft_top_2D_fu_419_out_M_imag_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            tmp_M_imag_ce0 <= grp_fft_top_2D_fu_419_in_M_imag_ce0;
        else 
            tmp_M_imag_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    tmp_M_imag_d0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_state37, grp_fft_top_2D_fu_419_out_M_imag_d0, ap_block_pp0_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            tmp_M_imag_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            tmp_M_imag_d0 <= grp_fft_top_2D_fu_419_out_M_imag_d0;
        else 
            tmp_M_imag_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    tmp_M_imag_we0_assign_proc : process(ap_CS_fsm_state3, icmp_ln56_fu_533_p2, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_state37, grp_fft_top_2D_fu_419_out_M_imag_we0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln56_fu_533_p2 = ap_const_lv1_0)))) then 
            tmp_M_imag_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            tmp_M_imag_we0 <= grp_fft_top_2D_fu_419_out_M_imag_we0;
        else 
            tmp_M_imag_we0 <= ap_const_logic_0;
        end if; 
    end process;


    tmp_M_real_address0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_pp0_stage0, zext_ln61_1_reg_846, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter0, zext_ln77_1_fu_787_p1, ap_enable_reg_pp0_iter1, ap_CS_fsm_state9, ap_CS_fsm_state37, grp_fft_top_2D_fu_419_in_M_real_address0, grp_fft_top_2D_fu_419_out_M_real_address0, ap_block_pp0_stage0, ap_block_pp2_stage0, zext_ln1027_fu_477_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            tmp_M_real_address0 <= zext_ln77_1_fu_787_p1(14 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            tmp_M_real_address0 <= zext_ln61_1_reg_846(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            tmp_M_real_address0 <= zext_ln1027_fu_477_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            tmp_M_real_address0 <= grp_fft_top_2D_fu_419_out_M_real_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            tmp_M_real_address0 <= grp_fft_top_2D_fu_419_in_M_real_address0;
        else 
            tmp_M_real_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    tmp_M_real_ce0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_state9, ap_CS_fsm_state37, grp_fft_top_2D_fu_419_in_M_real_ce0, grp_fft_top_2D_fu_419_out_M_real_ce0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            tmp_M_real_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            tmp_M_real_ce0 <= grp_fft_top_2D_fu_419_out_M_real_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            tmp_M_real_ce0 <= grp_fft_top_2D_fu_419_in_M_real_ce0;
        else 
            tmp_M_real_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    tmp_M_real_d0_assign_proc : process(x_io_q0, ap_CS_fsm_state3, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_state37, grp_fft_top_2D_fu_419_out_M_real_d0, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            tmp_M_real_d0 <= x_io_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            tmp_M_real_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            tmp_M_real_d0 <= grp_fft_top_2D_fu_419_out_M_real_d0;
        else 
            tmp_M_real_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    tmp_M_real_we0_assign_proc : process(ap_CS_fsm_state3, icmp_ln56_reg_832, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1, ap_CS_fsm_state37, grp_fft_top_2D_fu_419_out_M_real_we0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln56_reg_832 = ap_const_lv1_0)))) then 
            tmp_M_real_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            tmp_M_real_we0 <= grp_fft_top_2D_fu_419_out_M_real_we0;
        else 
            tmp_M_real_we0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_fu_469_p3 <= (phi_ln14_reg_250 & phi_ln14_1_reg_262);
    trunc_ln33_fu_697_p1 <= bitcast_ln33_fu_684_p1(23 - 1 downto 0);
    x_3_fu_601_p2 <= std_logic_vector(unsigned(select_ln61_fu_557_p3) + unsigned(ap_const_lv8_1));
    x_4_fu_792_p2 <= std_logic_vector(unsigned(select_ln77_fu_749_p3) + unsigned(ap_const_lv8_1));
    x_fu_678_p2 <= std_logic_vector(unsigned(select_ln33_fu_631_p3) + unsigned(ap_const_lv8_1));

    x_io_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, zext_ln61_1_fu_595_p1, zext_ln77_1_reg_973_pp2_iter5_reg, ap_enable_reg_pp2_iter6, ap_block_pp0_stage0, ap_block_pp2_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter6 = ap_const_logic_1))) then 
            x_io_address0 <= zext_ln77_1_reg_973_pp2_iter5_reg(14 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            x_io_address0 <= zext_ln61_1_fu_595_p1(14 - 1 downto 0);
        else 
            x_io_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    x_io_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter6)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter6 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            x_io_ce0 <= ap_const_logic_1;
        else 
            x_io_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    x_io_d0 <= tmp_i1_reg_993;

    x_io_we0_assign_proc : process(ap_block_pp2_stage0_11001, icmp_ln70_reg_959_pp2_iter5_reg, ap_enable_reg_pp2_iter6)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter6 = ap_const_logic_1) and (icmp_ln70_reg_959_pp2_iter5_reg = ap_const_lv1_0))) then 
            x_io_we0 <= ap_const_logic_1;
        else 
            x_io_we0 <= ap_const_logic_0;
        end if; 
    end process;

    y_1_fu_545_p2 <= std_logic_vector(unsigned(ap_phi_mux_y_0_i_phi_fu_311_p4) + unsigned(ap_const_lv8_1));
    y_2_fu_737_p2 <= std_logic_vector(unsigned(ap_phi_mux_y_0_i9_phi_fu_401_p4) + unsigned(ap_const_lv8_1));
    y_fu_619_p2 <= std_logic_vector(unsigned(ap_const_lv8_1) + unsigned(ap_phi_mux_y_0_phi_fu_344_p4));
    zext_ln1027_1_fu_515_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_141_fu_507_p3),64));
    zext_ln1027_fu_477_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_469_p3),64));
    zext_ln1044_1_fu_669_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1044_fu_663_p2),64));
    zext_ln1044_fu_659_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln33_fu_631_p3),16));
    zext_ln30_fu_655_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_145_fu_647_p3),16));
    zext_ln59_fu_581_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_144_fu_573_p3),16));
    zext_ln61_1_fu_595_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln61_fu_589_p2),64));
    zext_ln61_fu_585_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln61_fu_557_p3),16));
    zext_ln73_fu_773_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_146_fu_765_p3),16));
    zext_ln77_1_fu_787_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln77_fu_781_p2),64));
    zext_ln77_fu_777_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln77_fu_749_p3),16));
end behav;
