-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity DEBLUR is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    refImg_R_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    refImg_R_ce0 : OUT STD_LOGIC;
    refImg_R_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    refImg_R_address1 : OUT STD_LOGIC_VECTOR (13 downto 0);
    refImg_R_ce1 : OUT STD_LOGIC;
    refImg_R_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    adjChImg_G_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    adjChImg_G_ce0 : OUT STD_LOGIC;
    adjChImg_G_we0 : OUT STD_LOGIC;
    adjChImg_G_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    adjChImg_G_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    adjChImg_G_address1 : OUT STD_LOGIC_VECTOR (13 downto 0);
    adjChImg_G_ce1 : OUT STD_LOGIC;
    adjChImg_G_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    adjChImg_B_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    adjChImg_B_ce0 : OUT STD_LOGIC;
    adjChImg_B_we0 : OUT STD_LOGIC;
    adjChImg_B_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    adjChImg_B_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    adjChImg_B_address1 : OUT STD_LOGIC_VECTOR (13 downto 0);
    adjChImg_B_ce1 : OUT STD_LOGIC;
    adjChImg_B_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    nominator_R_M_real_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    nominator_R_M_real_ce0 : OUT STD_LOGIC;
    nominator_R_M_real_we0 : OUT STD_LOGIC;
    nominator_R_M_real_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    nominator_R_M_real_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    nominator_R_M_real_address1 : OUT STD_LOGIC_VECTOR (13 downto 0);
    nominator_R_M_real_ce1 : OUT STD_LOGIC;
    nominator_R_M_real_we1 : OUT STD_LOGIC;
    nominator_R_M_real_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    nominator_R_M_real_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    nominator_R_M_imag_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    nominator_R_M_imag_ce0 : OUT STD_LOGIC;
    nominator_R_M_imag_we0 : OUT STD_LOGIC;
    nominator_R_M_imag_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    nominator_R_M_imag_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    nominator_R_M_imag_address1 : OUT STD_LOGIC_VECTOR (13 downto 0);
    nominator_R_M_imag_ce1 : OUT STD_LOGIC;
    nominator_R_M_imag_we1 : OUT STD_LOGIC;
    nominator_R_M_imag_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    nominator_R_M_imag_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    denominator_R_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    denominator_R_ce0 : OUT STD_LOGIC;
    denominator_R_we0 : OUT STD_LOGIC;
    denominator_R_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    denominator_R_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    denominator_R_address1 : OUT STD_LOGIC_VECTOR (13 downto 0);
    denominator_R_ce1 : OUT STD_LOGIC;
    denominator_R_we1 : OUT STD_LOGIC;
    denominator_R_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    denominator_R_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    nominator_G_M_real_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    nominator_G_M_real_ce0 : OUT STD_LOGIC;
    nominator_G_M_real_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    nominator_G_M_imag_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    nominator_G_M_imag_ce0 : OUT STD_LOGIC;
    nominator_G_M_imag_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    denominator_G_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    denominator_G_ce0 : OUT STD_LOGIC;
    denominator_G_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    nominator_B_M_real_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    nominator_B_M_real_ce0 : OUT STD_LOGIC;
    nominator_B_M_real_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    nominator_B_M_imag_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    nominator_B_M_imag_ce0 : OUT STD_LOGIC;
    nominator_B_M_imag_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    denominator_B_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    denominator_B_ce0 : OUT STD_LOGIC;
    denominator_B_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of DEBLUR is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "DEBLUR,hls_ip_2019_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=9.406250,HLS_SYN_LAT=43489621,HLS_SYN_TPT=none,HLS_SYN_MEM=530,HLS_SYN_DSP=124,HLS_SYN_FF=36071,HLS_SYN_LUT=43600,HLS_VERSION=2019_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal grp_cross_channel_deblur_fu_32_ap_start : STD_LOGIC;
    signal grp_cross_channel_deblur_fu_32_ap_done : STD_LOGIC;
    signal grp_cross_channel_deblur_fu_32_ap_idle : STD_LOGIC;
    signal grp_cross_channel_deblur_fu_32_ap_ready : STD_LOGIC;
    signal grp_cross_channel_deblur_fu_32_Img_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_cross_channel_deblur_fu_32_Img_ce0 : STD_LOGIC;
    signal grp_cross_channel_deblur_fu_32_Img_we0 : STD_LOGIC;
    signal grp_cross_channel_deblur_fu_32_Img_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cross_channel_deblur_fu_32_Img_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cross_channel_deblur_fu_32_adjChImg_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_cross_channel_deblur_fu_32_adjChImg_ce0 : STD_LOGIC;
    signal grp_cross_channel_deblur_fu_32_adjChImg_address1 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_cross_channel_deblur_fu_32_adjChImg_ce1 : STD_LOGIC;
    signal grp_cross_channel_deblur_fu_32_adjChImg2_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_cross_channel_deblur_fu_32_adjChImg2_ce0 : STD_LOGIC;
    signal grp_cross_channel_deblur_fu_32_adjChImg2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cross_channel_deblur_fu_32_adjChImg2_address1 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_cross_channel_deblur_fu_32_adjChImg2_ce1 : STD_LOGIC;
    signal grp_cross_channel_deblur_fu_32_adjChImg2_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cross_channel_deblur_fu_32_coe_a_M_real_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_cross_channel_deblur_fu_32_coe_a_M_real_ce0 : STD_LOGIC;
    signal grp_cross_channel_deblur_fu_32_coe_a_M_real_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cross_channel_deblur_fu_32_coe_a_M_imag_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_cross_channel_deblur_fu_32_coe_a_M_imag_ce0 : STD_LOGIC;
    signal grp_cross_channel_deblur_fu_32_coe_a_M_imag_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cross_channel_deblur_fu_32_coe_b_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_cross_channel_deblur_fu_32_coe_b_ce0 : STD_LOGIC;
    signal grp_cross_channel_deblur_fu_32_coe_b_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cross_channel_deblur_fu_32_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);

    component cross_channel_deblur IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        Img_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        Img_ce0 : OUT STD_LOGIC;
        Img_we0 : OUT STD_LOGIC;
        Img_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        Img_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        adjChImg_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        adjChImg_ce0 : OUT STD_LOGIC;
        adjChImg_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        adjChImg_address1 : OUT STD_LOGIC_VECTOR (13 downto 0);
        adjChImg_ce1 : OUT STD_LOGIC;
        adjChImg_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        adjChImg2_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        adjChImg2_ce0 : OUT STD_LOGIC;
        adjChImg2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        adjChImg2_address1 : OUT STD_LOGIC_VECTOR (13 downto 0);
        adjChImg2_ce1 : OUT STD_LOGIC;
        adjChImg2_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        coe_a_M_real_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        coe_a_M_real_ce0 : OUT STD_LOGIC;
        coe_a_M_real_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        coe_a_M_imag_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        coe_a_M_imag_ce0 : OUT STD_LOGIC;
        coe_a_M_imag_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        coe_b_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        coe_b_ce0 : OUT STD_LOGIC;
        coe_b_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    grp_cross_channel_deblur_fu_32 : component cross_channel_deblur
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_cross_channel_deblur_fu_32_ap_start,
        ap_done => grp_cross_channel_deblur_fu_32_ap_done,
        ap_idle => grp_cross_channel_deblur_fu_32_ap_idle,
        ap_ready => grp_cross_channel_deblur_fu_32_ap_ready,
        Img_address0 => grp_cross_channel_deblur_fu_32_Img_address0,
        Img_ce0 => grp_cross_channel_deblur_fu_32_Img_ce0,
        Img_we0 => grp_cross_channel_deblur_fu_32_Img_we0,
        Img_d0 => grp_cross_channel_deblur_fu_32_Img_d0,
        Img_q0 => grp_cross_channel_deblur_fu_32_Img_q0,
        adjChImg_address0 => grp_cross_channel_deblur_fu_32_adjChImg_address0,
        adjChImg_ce0 => grp_cross_channel_deblur_fu_32_adjChImg_ce0,
        adjChImg_q0 => refImg_R_q0,
        adjChImg_address1 => grp_cross_channel_deblur_fu_32_adjChImg_address1,
        adjChImg_ce1 => grp_cross_channel_deblur_fu_32_adjChImg_ce1,
        adjChImg_q1 => refImg_R_q1,
        adjChImg2_address0 => grp_cross_channel_deblur_fu_32_adjChImg2_address0,
        adjChImg2_ce0 => grp_cross_channel_deblur_fu_32_adjChImg2_ce0,
        adjChImg2_q0 => grp_cross_channel_deblur_fu_32_adjChImg2_q0,
        adjChImg2_address1 => grp_cross_channel_deblur_fu_32_adjChImg2_address1,
        adjChImg2_ce1 => grp_cross_channel_deblur_fu_32_adjChImg2_ce1,
        adjChImg2_q1 => grp_cross_channel_deblur_fu_32_adjChImg2_q1,
        coe_a_M_real_address0 => grp_cross_channel_deblur_fu_32_coe_a_M_real_address0,
        coe_a_M_real_ce0 => grp_cross_channel_deblur_fu_32_coe_a_M_real_ce0,
        coe_a_M_real_q0 => grp_cross_channel_deblur_fu_32_coe_a_M_real_q0,
        coe_a_M_imag_address0 => grp_cross_channel_deblur_fu_32_coe_a_M_imag_address0,
        coe_a_M_imag_ce0 => grp_cross_channel_deblur_fu_32_coe_a_M_imag_ce0,
        coe_a_M_imag_q0 => grp_cross_channel_deblur_fu_32_coe_a_M_imag_q0,
        coe_b_address0 => grp_cross_channel_deblur_fu_32_coe_b_address0,
        coe_b_ce0 => grp_cross_channel_deblur_fu_32_coe_b_ce0,
        coe_b_q0 => grp_cross_channel_deblur_fu_32_coe_b_q0);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_cross_channel_deblur_fu_32_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_cross_channel_deblur_fu_32_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                    grp_cross_channel_deblur_fu_32_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_cross_channel_deblur_fu_32_ap_ready = ap_const_logic_1)) then 
                    grp_cross_channel_deblur_fu_32_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, grp_cross_channel_deblur_fu_32_ap_done, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (grp_cross_channel_deblur_fu_32_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (grp_cross_channel_deblur_fu_32_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;

    adjChImg_B_address0_assign_proc : process(grp_cross_channel_deblur_fu_32_Img_address0, grp_cross_channel_deblur_fu_32_adjChImg2_address0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            adjChImg_B_address0 <= grp_cross_channel_deblur_fu_32_adjChImg2_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            adjChImg_B_address0 <= grp_cross_channel_deblur_fu_32_Img_address0;
        else 
            adjChImg_B_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;

    adjChImg_B_address1 <= grp_cross_channel_deblur_fu_32_adjChImg2_address1;

    adjChImg_B_ce0_assign_proc : process(grp_cross_channel_deblur_fu_32_Img_ce0, grp_cross_channel_deblur_fu_32_adjChImg2_ce0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            adjChImg_B_ce0 <= grp_cross_channel_deblur_fu_32_adjChImg2_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            adjChImg_B_ce0 <= grp_cross_channel_deblur_fu_32_Img_ce0;
        else 
            adjChImg_B_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    adjChImg_B_ce1_assign_proc : process(grp_cross_channel_deblur_fu_32_adjChImg2_ce1, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            adjChImg_B_ce1 <= grp_cross_channel_deblur_fu_32_adjChImg2_ce1;
        else 
            adjChImg_B_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    adjChImg_B_d0 <= grp_cross_channel_deblur_fu_32_Img_d0;

    adjChImg_B_we0_assign_proc : process(grp_cross_channel_deblur_fu_32_Img_we0, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            adjChImg_B_we0 <= grp_cross_channel_deblur_fu_32_Img_we0;
        else 
            adjChImg_B_we0 <= ap_const_logic_0;
        end if; 
    end process;


    adjChImg_G_address0_assign_proc : process(grp_cross_channel_deblur_fu_32_Img_address0, grp_cross_channel_deblur_fu_32_adjChImg2_address0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            adjChImg_G_address0 <= grp_cross_channel_deblur_fu_32_adjChImg2_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            adjChImg_G_address0 <= grp_cross_channel_deblur_fu_32_Img_address0;
        else 
            adjChImg_G_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;

    adjChImg_G_address1 <= grp_cross_channel_deblur_fu_32_adjChImg2_address1;

    adjChImg_G_ce0_assign_proc : process(grp_cross_channel_deblur_fu_32_Img_ce0, grp_cross_channel_deblur_fu_32_adjChImg2_ce0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            adjChImg_G_ce0 <= grp_cross_channel_deblur_fu_32_adjChImg2_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            adjChImg_G_ce0 <= grp_cross_channel_deblur_fu_32_Img_ce0;
        else 
            adjChImg_G_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    adjChImg_G_ce1_assign_proc : process(grp_cross_channel_deblur_fu_32_adjChImg2_ce1, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            adjChImg_G_ce1 <= grp_cross_channel_deblur_fu_32_adjChImg2_ce1;
        else 
            adjChImg_G_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    adjChImg_G_d0 <= grp_cross_channel_deblur_fu_32_Img_d0;

    adjChImg_G_we0_assign_proc : process(grp_cross_channel_deblur_fu_32_Img_we0, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            adjChImg_G_we0 <= grp_cross_channel_deblur_fu_32_Img_we0;
        else 
            adjChImg_G_we0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);

    ap_done_assign_proc : process(grp_cross_channel_deblur_fu_32_ap_done, ap_CS_fsm_state4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) and (grp_cross_channel_deblur_fu_32_ap_done = ap_const_logic_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(grp_cross_channel_deblur_fu_32_ap_done, ap_CS_fsm_state4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) and (grp_cross_channel_deblur_fu_32_ap_done = ap_const_logic_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    denominator_B_address0 <= grp_cross_channel_deblur_fu_32_coe_b_address0;

    denominator_B_ce0_assign_proc : process(grp_cross_channel_deblur_fu_32_coe_b_ce0, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            denominator_B_ce0 <= grp_cross_channel_deblur_fu_32_coe_b_ce0;
        else 
            denominator_B_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    denominator_G_address0 <= grp_cross_channel_deblur_fu_32_coe_b_address0;

    denominator_G_ce0_assign_proc : process(grp_cross_channel_deblur_fu_32_coe_b_ce0, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            denominator_G_ce0 <= grp_cross_channel_deblur_fu_32_coe_b_ce0;
        else 
            denominator_G_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    denominator_R_address0 <= ap_const_lv14_0;
    denominator_R_address1 <= ap_const_lv14_0;
    denominator_R_ce0 <= ap_const_logic_0;
    denominator_R_ce1 <= ap_const_logic_0;
    denominator_R_d0 <= ap_const_lv32_0;
    denominator_R_d1 <= ap_const_lv32_0;
    denominator_R_we0 <= ap_const_logic_0;
    denominator_R_we1 <= ap_const_logic_0;

    grp_cross_channel_deblur_fu_32_Img_q0_assign_proc : process(adjChImg_G_q0, adjChImg_B_q0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_cross_channel_deblur_fu_32_Img_q0 <= adjChImg_B_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_cross_channel_deblur_fu_32_Img_q0 <= adjChImg_G_q0;
        else 
            grp_cross_channel_deblur_fu_32_Img_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_cross_channel_deblur_fu_32_adjChImg2_q0_assign_proc : process(adjChImg_G_q0, adjChImg_B_q0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_cross_channel_deblur_fu_32_adjChImg2_q0 <= adjChImg_G_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_cross_channel_deblur_fu_32_adjChImg2_q0 <= adjChImg_B_q0;
        else 
            grp_cross_channel_deblur_fu_32_adjChImg2_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_cross_channel_deblur_fu_32_adjChImg2_q1_assign_proc : process(adjChImg_G_q1, adjChImg_B_q1, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_cross_channel_deblur_fu_32_adjChImg2_q1 <= adjChImg_G_q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_cross_channel_deblur_fu_32_adjChImg2_q1 <= adjChImg_B_q1;
        else 
            grp_cross_channel_deblur_fu_32_adjChImg2_q1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_cross_channel_deblur_fu_32_ap_start <= grp_cross_channel_deblur_fu_32_ap_start_reg;

    grp_cross_channel_deblur_fu_32_coe_a_M_imag_q0_assign_proc : process(nominator_G_M_imag_q0, nominator_B_M_imag_q0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_cross_channel_deblur_fu_32_coe_a_M_imag_q0 <= nominator_B_M_imag_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_cross_channel_deblur_fu_32_coe_a_M_imag_q0 <= nominator_G_M_imag_q0;
        else 
            grp_cross_channel_deblur_fu_32_coe_a_M_imag_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_cross_channel_deblur_fu_32_coe_a_M_real_q0_assign_proc : process(nominator_G_M_real_q0, nominator_B_M_real_q0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_cross_channel_deblur_fu_32_coe_a_M_real_q0 <= nominator_B_M_real_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_cross_channel_deblur_fu_32_coe_a_M_real_q0 <= nominator_G_M_real_q0;
        else 
            grp_cross_channel_deblur_fu_32_coe_a_M_real_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_cross_channel_deblur_fu_32_coe_b_q0_assign_proc : process(denominator_G_q0, denominator_B_q0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_cross_channel_deblur_fu_32_coe_b_q0 <= denominator_B_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_cross_channel_deblur_fu_32_coe_b_q0 <= denominator_G_q0;
        else 
            grp_cross_channel_deblur_fu_32_coe_b_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    nominator_B_M_imag_address0 <= grp_cross_channel_deblur_fu_32_coe_a_M_imag_address0;

    nominator_B_M_imag_ce0_assign_proc : process(grp_cross_channel_deblur_fu_32_coe_a_M_imag_ce0, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            nominator_B_M_imag_ce0 <= grp_cross_channel_deblur_fu_32_coe_a_M_imag_ce0;
        else 
            nominator_B_M_imag_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    nominator_B_M_real_address0 <= grp_cross_channel_deblur_fu_32_coe_a_M_real_address0;

    nominator_B_M_real_ce0_assign_proc : process(grp_cross_channel_deblur_fu_32_coe_a_M_real_ce0, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            nominator_B_M_real_ce0 <= grp_cross_channel_deblur_fu_32_coe_a_M_real_ce0;
        else 
            nominator_B_M_real_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    nominator_G_M_imag_address0 <= grp_cross_channel_deblur_fu_32_coe_a_M_imag_address0;

    nominator_G_M_imag_ce0_assign_proc : process(grp_cross_channel_deblur_fu_32_coe_a_M_imag_ce0, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            nominator_G_M_imag_ce0 <= grp_cross_channel_deblur_fu_32_coe_a_M_imag_ce0;
        else 
            nominator_G_M_imag_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    nominator_G_M_real_address0 <= grp_cross_channel_deblur_fu_32_coe_a_M_real_address0;

    nominator_G_M_real_ce0_assign_proc : process(grp_cross_channel_deblur_fu_32_coe_a_M_real_ce0, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            nominator_G_M_real_ce0 <= grp_cross_channel_deblur_fu_32_coe_a_M_real_ce0;
        else 
            nominator_G_M_real_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    nominator_R_M_imag_address0 <= ap_const_lv14_0;
    nominator_R_M_imag_address1 <= ap_const_lv14_0;
    nominator_R_M_imag_ce0 <= ap_const_logic_0;
    nominator_R_M_imag_ce1 <= ap_const_logic_0;
    nominator_R_M_imag_d0 <= ap_const_lv32_0;
    nominator_R_M_imag_d1 <= ap_const_lv32_0;
    nominator_R_M_imag_we0 <= ap_const_logic_0;
    nominator_R_M_imag_we1 <= ap_const_logic_0;
    nominator_R_M_real_address0 <= ap_const_lv14_0;
    nominator_R_M_real_address1 <= ap_const_lv14_0;
    nominator_R_M_real_ce0 <= ap_const_logic_0;
    nominator_R_M_real_ce1 <= ap_const_logic_0;
    nominator_R_M_real_d0 <= ap_const_lv32_0;
    nominator_R_M_real_d1 <= ap_const_lv32_0;
    nominator_R_M_real_we0 <= ap_const_logic_0;
    nominator_R_M_real_we1 <= ap_const_logic_0;
    refImg_R_address0 <= grp_cross_channel_deblur_fu_32_adjChImg_address0;
    refImg_R_address1 <= grp_cross_channel_deblur_fu_32_adjChImg_address1;

    refImg_R_ce0_assign_proc : process(grp_cross_channel_deblur_fu_32_adjChImg_ce0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            refImg_R_ce0 <= grp_cross_channel_deblur_fu_32_adjChImg_ce0;
        else 
            refImg_R_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    refImg_R_ce1_assign_proc : process(grp_cross_channel_deblur_fu_32_adjChImg_ce1, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            refImg_R_ce1 <= grp_cross_channel_deblur_fu_32_adjChImg_ce1;
        else 
            refImg_R_ce1 <= ap_const_logic_0;
        end if; 
    end process;

end behav;
